name: Build nightly binaries

on: [push]

jobs:
  build-nightlies:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019, ubuntu-16.04]
    
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends \
          libfontconfig-dev \
          libicu-dev \
          liblzma-dev \
          liblzo2-dev \
          libsdl1.2-dev \
          libsdl2-dev \
          libxdg-basedir-dev \
          zlib1g-dev \
          # EOF
    - name: Prepare vcpkg (with cache)
      uses: lukka/run-vcpkg@v4
      if: runner.os == 'Windows'
      with:
        vcpkgDirectory: 'c:/vcpkg'
        doNotUpdateVcpkg: true
        vcpkgArguments: 'liblzma libpng lzo zlib'
        vcpkgTriplet: 'x64-windows-static'
    - name: configure
      run: mkdir cmbuild && cd cmbuild && cmake -DCMAKE_DISABLE_FIND_PACKAGE_ICU=TRUE ..
    - name: build
      run: cmake --build cmbuild
    - uses: actions/upload-artifact@v2
      if: runner.os == 'Linux'     
      with:
        name: linux-binary
        path: |
          cmbuild/openttd
          cmbuild/lang/
          cmbuild/ai/
          cmbuild/scripts/
    - uses: actions/upload-artifact@v2
      if: runner.os == 'Windows'     
      with:
        name: windows-binary
        path: |
          cmbuild/openttd.exe
          cmbuild/lang/
          cmbuild/ai/
          cmbuild/scripts/
