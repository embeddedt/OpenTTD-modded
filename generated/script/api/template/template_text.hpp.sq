/*
 * This file is part of OpenTTD.
 * OpenTTD is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * OpenTTD is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with OpenTTD. If not, see <http://www.gnu.org/licenses/>.
 */

/* THIS FILE IS AUTO-GENERATED; PLEASE DO NOT ALTER MANUALLY */

#include "../script_text.hpp"

namespace SQConvert {
	/* Allow ScriptText to be used as Squirrel parameter */
	template <> struct Param<ScriptText *> { static inline ScriptText *Get(HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr) { SQUserPointer instance; sq_getinstanceup(vm, index, &instance, nullptr); return  (ScriptText *)instance; } };
	template <> struct Param<ScriptText &> { static inline ScriptText &Get(HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr) { SQUserPointer instance; sq_getinstanceup(vm, index, &instance, nullptr); return *(ScriptText *)instance; } };
	template <> struct Param<const ScriptText *> { static inline const ScriptText *Get(HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr) { SQUserPointer instance; sq_getinstanceup(vm, index, &instance, nullptr); return  (ScriptText *)instance; } };
	template <> struct Param<const ScriptText &> { static inline const ScriptText &Get(HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr) { SQUserPointer instance; sq_getinstanceup(vm, index, &instance, nullptr); return *(ScriptText *)instance; } };

	template <> struct Param<Text *> {
		static inline Text *Get(HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr) {
			if (sq_gettype(vm, index) == OT_INSTANCE) {
				return Param<ScriptText *>::Get(vm, index, ptr);
			}
			if (sq_gettype(vm, index) == OT_STRING) {
				return new RawText(Param<const char *>::Get(vm, index, ptr));
			}
			return nullptr;
		}
	};
} // namespace SQConvert
