/*
 * This file is part of OpenTTD.
 * OpenTTD is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * OpenTTD is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with OpenTTD. If not, see <http://www.gnu.org/licenses/>.
 */

/** @file table/settings.h Settings to save in the savegame and config file. */

/* Callback function used in _settings[] as well as _company_settings[] */
static size_t ConvertLandscape(const char *value);


/****************************
 * OTTD specific INI stuff
 ****************************
 * DO NOT edit this file. This file is automatically generated from the contents of /src/table/
 */

/**
 * Settings-macro usage:
 * The list might look daunting at first, but is in general easy to understand.
 * The macros can be grouped depending on where the config variable is
 * stored:
 * 1. SDTG_something
 *    These are for global variables. Here 'var' refers to a global variable.
 * 2. SDTC_something
 *    These are for client-only variables. Here the 'var' refers to an
 *    entry inside _settings_client.
 * 3. SDT_something
 *    These are for members in the struct described by the current
 *    #SettingDesc list / .ini file.  Here, 'base' specifies type of the
 *    struct while 'var' points out the member of the struct (the actual
 *    struct to store it in is implicitly defined by the #SettingDesc
 *    list / .ini file preamble the entry is in).
 *
 * The something part defines the type of variable to store. There are a
 * lot of types. Easy ones are:
 * - VAR:  any number type, 'type' field specifies what number. eg int8 or uint32
 * - BOOL: a boolean number type
 * - STR:  a string or character. 'type' field specifies what string. Normal, string, or quoted
 * A bit more difficult to use are MMANY (meaning ManyOfMany) and OMANY (OneOfMany)
 * These are actually normal numbers, only bitmasked. In MMANY several bits can
 * be set, in the other only one.
 * If nothing fits you, you can use the GENERAL macros, but it exposes the
 * internal structure somewhat so it needs a little looking. There are _NULL()
 * macros as well, these fill up space so you can add more settings there (in
 * place) and you DON'T have to increase the savegame version.
 *
 * While reading values from openttd.cfg, some values may not be converted
 * properly, for any kind of reasons.  In order to allow a process of self-cleaning
 * mechanism, a callback procedure is made available.  You will have to supply the function, which
 * will work on a string, one function per setting. And of course, enable the callback param
 * on the appropriate macro.
 */

#define NSD(type, ...) std::unique_ptr<const SettingDesc>(new type##SettingDesc(__VA_ARGS__))

/* Macros for various objects to go in the configuration file.
 * This section is for global variables */
#define SDTG_VAR(name, type, flags, var, def, min, max, interval, str, strhelp, strval, pre_check, post_callback, from, to, extver, cat, guiproc, startup, patxname)\
	NSD(Int, SLEG_GENERAL_X(SL_VAR, var, type, 1, from, to, extver), name, flags, guiproc, startup, patxname, def, min, max, interval, str, strhelp, strval, cat, pre_check, post_callback, nullptr)

#define SDTG_ENUM(name, type, flags, var, def, str, strhelp, pre_check, post_callback, from, to, extver, cat, guiproc, startup, patxname, enumlist)\
	NSD(Int, SLEG_GENERAL_X(SL_VAR, var, type, 1, from, to, extver), name, flags | SF_ENUM, guiproc, startup, patxname, def, 0, 0, 0, str, strhelp, STR_NULL, cat, pre_check, post_callback, enumlist)

#define SDTG_BOOL(name, flags, var, def, str, strhelp, strval, pre_check, post_callback, from, to, extver, cat, guiproc, startup, patxname)\
	NSD(Bool, SLEG_GENERAL_X(SL_VAR, var, SLE_BOOL, 1, from, to, extver), name, flags, guiproc, startup, patxname, def, str, strhelp, strval, cat, pre_check, post_callback)

#define SDTG_LIST(name, type, flags, var, def, length, from, to, extver, cat, guiproc, startup, patxname)\
	NSD(List, SLEG_GENERAL_X(SL_ARR, var, type, length, from, to, extver), name, flags, guiproc, startup, patxname, def)

#define SDTG_SSTR(name, type, flags, var, def, max_length, pre_check, post_callback, from, to, extver, cat, guiproc, startup, patxname)\
	NSD(String, SLEG_GENERAL_X(SL_STDSTR, var, type, sizeof(var), from, to, extver), name, flags, guiproc, startup, patxname, def, max_length, pre_check, post_callback)

#define SDTG_OMANY(name, type, flags, var, def, max, full, str, strhelp, strval, pre_check, post_callback, from, to, extver, cat, guiproc, startup, patxname)\
	NSD(OneOfMany, SLEG_GENERAL_X(SL_VAR, var, type, 1, from, to, extver), name, flags, guiproc, startup, patxname, def, max, str, strhelp, strval, cat, pre_check, post_callback, full, nullptr)

#define SDTG_MMANY(name, type, flags, var, def, full, str, strhelp, strval, pre_check, post_callback, from, to, extver, cat, guiproc, startup, patxname)\
	NSD(ManyOfMany, SLEG_GENERAL_X(SL_VAR, var, type, 1, from, to, extver), name, flags, guiproc, startup, patxname, def, str, strhelp, strval, cat, pre_check, post_callback, full, nullptr)

#define SDTG_NULL(length, from, to, extver)\
	NSD(Null, SLE_CONDNULL_X(length, from, to, extver))

/* Macros for various objects to go in the configuration file.
 * This section is for structures where their various members are saved */
#define SDT_VAR(base, var, type, flags, def, min, max, interval, str, strhelp, strval, pre_check, post_callback, from, to, extver, cat, guiproc, startup, patxname)\
	NSD(Int, SLE_GENERAL_X(SL_VAR, base, var, type, 1, from, to, extver), #var, flags, guiproc, startup, patxname, def, min, max, interval, str, strhelp, strval, cat, pre_check, post_callback, nullptr)

#define SDT_ENUM(base, var, type, flags, def, str, strhelp, pre_check, post_callback, from, to, extver, cat, guiproc, startup, patxname, enumlist)\
	NSD(Int, SLE_GENERAL_X(SL_VAR, base, var, type, 1, from, to, extver), #var, flags | SF_ENUM, guiproc, startup, patxname, def, 0, 0, 0, str, strhelp, STR_NULL, cat, pre_check, post_callback, enumlist)

#define SDT_BOOL(base, var, flags, def, str, strhelp, strval, pre_check, post_callback, from, to, extver, cat, guiproc, startup, patxname)\
	NSD(Bool, SLE_GENERAL_X(SL_VAR, base, var, SLE_BOOL, 1, from, to, extver), #var, flags, guiproc, startup, patxname, def, str, strhelp, strval, cat, pre_check, post_callback)

#define SDT_LIST(base, var, type, flags, def, from, to, extver, cat, guiproc, startup, patxname)\
	NSD(List, SLE_GENERAL_X(SL_ARR, base, var, type, lengthof(((base*)8)->var), from, to, extver), #var, flags, guiproc, startup, patxname, def)

#define SDT_SSTR(base, var, type, flags, def, pre_check, post_callback, from, to, extver, cat, guiproc, startup, patxname)\
	NSD(String, SLE_GENERAL_X(SL_STDSTR, base, var, type, sizeof(((base*)8)->var), from, to, extver), #var, flags, guiproc, startup, patxname, def, 0, pre_check, post_callback)

#define SDT_OMANY(base, var, type, flags, def, max, full, str, strhelp, strval, pre_check, post_callback, from, to, extver, load, cat, guiproc, startup, patxname)\
	NSD(OneOfMany, SLE_GENERAL_X(SL_VAR, base, var, type, 1, from, to, extver), #var, flags, guiproc, startup, patxname, def, max, str, strhelp, strval, cat, pre_check, post_callback, full, load)

#define SDT_MMANY(base, var, type, flags, def, full, str, pre_check, post_callback, strhelp, strval, from, to, extver, cat, guiproc, startup, patxname)\
	NSD(ManyOfMany, SLE_GENERAL_X(SL_VAR, base, var, type, 1, from, to, extver), #var, flags, guiproc, startup, patxname, def, str, strhelp, strval, cat, pre_check, post_callback, full, nullptr)

#define SDT_NULL(length, from, to, extver)\
	NSD(Null, SLE_CONDNULL_X(length, from, to, extver))

#define SDTC_VAR(var, type, flags, def, min, max, interval, str, strhelp, strval, pre_check, post_callback, from, to, extver, cat, guiproc, startup, patxname)\
	SDTG_VAR(#var, type, flags, _settings_client.var, def, min, max, interval, str, strhelp, strval, pre_check, post_callback, from, to, extver, cat, guiproc, startup, patxname)

#define SDTC_ENUM(var, type, flags, def, str, strhelp, pre_check, post_callback, from, to, extver, cat, guiproc, startup, patxname, enumlist)\
	SDTG_ENUM(#var, type, flags, _settings_client.var, def, str, strhelp, pre_check, post_callback, from, to, extver, cat, guiproc, startup, patxname, enumlist)

#define SDTC_BOOL(var, flags, def, str, strhelp, strval, pre_check, post_callback, from, to, extver, cat, guiproc, startup, patxname)\
	SDTG_BOOL(#var, flags, _settings_client.var, def, str, strhelp, strval, pre_check, post_callback, from, to, extver, cat, guiproc, startup, patxname)

#define SDTC_LIST(var, type, flags, def, from, to, extver, cat, guiproc, startup, patxname)\
	SDTG_LIST(#var, type, flags, _settings_client.var, def, lengthof(_settings_client.var), from, to, extver, cat, guiproc, startup, patxname)

#define SDTC_SSTR(var, type, flags, def, max_length, pre_check, post_callback, from, to, extver, cat, guiproc, startup, patxname)\
	SDTG_SSTR(#var, type, flags, _settings_client.var, def, max_length, pre_check, post_callback, from, to, extver, cat, guiproc, startup, patxname)\

#define SDTC_OMANY(var, type, flags, def, max, full, str, strhelp, strval, pre_check, post_callback, from, to, extver, cat, guiproc, startup, patxname)\
	SDTG_OMANY(#var, type, flags, _settings_client.var, def, max, full, str, strhelp, strval, pre_check, post_callback, from, to, extver, cat, guiproc, startup, patxname)

#define SDT_XREF(from, to, extver, xref, xrefcvt)\
	NSD(Xref, SLE_CONDNULL_X(0, from, to, extver), SettingsXref(xref, xrefcvt))
static void UpdateAllServiceInterval(int32 new_value);
static bool CanUpdateServiceInterval(VehicleType type, int32 &new_value);
static void UpdateServiceInterval(VehicleType type, int32 new_value);
static const SettingTable _company_settings{
SDT_BOOL(CompanySettings, engine_renew,        SF_PER_COMPANY, true,                        STR_CONFIG_SETTING_AUTORENEW_VEHICLE, STR_CONFIG_SETTING_AUTORENEW_VEHICLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_BASIC, nullptr, false, nullptr),
SDT_VAR(CompanySettings, engine_renew_months, SLE_INT16, SF_PER_COMPANY | SF_GUI_NEGATIVE_IS_SPECIAL, 6, -12, 12, 0, STR_CONFIG_SETTING_AUTORENEW_MONTHS, STR_CONFIG_SETTING_AUTORENEW_MONTHS_HELPTEXT, STR_CONFIG_SETTING_AUTORENEW_MONTHS_VALUE_BEFORE, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(CompanySettings, engine_renew_money, SLE_UINT, SF_PER_COMPANY | SF_GUI_CURRENCY, 100000, 0, 2000000, 0, STR_CONFIG_SETTING_AUTORENEW_MONEY, STR_CONFIG_SETTING_AUTORENEW_MONEY_HELPTEXT, STR_JUST_CURRENCY_LONG, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, false, nullptr),
SDT_BOOL(CompanySettings, renew_keep_length,        SF_PER_COMPANY, false,                        STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, false, nullptr),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP, 2)),
SDT_BOOL(CompanySettings, vehicle.servint_ispercent,        SF_PER_COMPANY, false,                        STR_CONFIG_SETTING_SERVINT_ISPERCENT, STR_CONFIG_SETTING_SERVINT_ISPERCENT_HELPTEXT, STR_NULL, nullptr, UpdateAllServiceInterval, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(CompanySettings, vehicle.servint_trains, SLE_UINT16, SF_PER_COMPANY | SF_GUI_0_IS_SPECIAL, 150, 5, 800, 0, STR_CONFIG_SETTING_SERVINT_TRAINS, STR_CONFIG_SETTING_SERVINT_TRAINS_HELPTEXT, STR_CONFIG_SETTING_SERVINT_VALUE, [](auto new_value) { return CanUpdateServiceInterval(VEH_TRAIN, new_value); }, [](auto new_value) { UpdateServiceInterval(VEH_TRAIN, new_value); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(CompanySettings, vehicle.servint_roadveh, SLE_UINT16, SF_PER_COMPANY | SF_GUI_0_IS_SPECIAL, 150, 5, 800, 0, STR_CONFIG_SETTING_SERVINT_ROAD_VEHICLES, STR_CONFIG_SETTING_SERVINT_ROAD_VEHICLES_HELPTEXT, STR_CONFIG_SETTING_SERVINT_VALUE, [](auto new_value) { return CanUpdateServiceInterval(VEH_ROAD, new_value); }, [](auto new_value) { UpdateServiceInterval(VEH_ROAD, new_value); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(CompanySettings, vehicle.servint_ships, SLE_UINT16, SF_PER_COMPANY | SF_GUI_0_IS_SPECIAL, 360, 5, 800, 0, STR_CONFIG_SETTING_SERVINT_SHIPS, STR_CONFIG_SETTING_SERVINT_SHIPS_HELPTEXT, STR_CONFIG_SETTING_SERVINT_VALUE, [](auto new_value) { return CanUpdateServiceInterval(VEH_SHIP, new_value); }, [](auto new_value) { UpdateServiceInterval(VEH_SHIP, new_value); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(CompanySettings, vehicle.servint_aircraft, SLE_UINT16, SF_PER_COMPANY | SF_GUI_0_IS_SPECIAL, 100, 5, 800, 0, STR_CONFIG_SETTING_SERVINT_AIRCRAFT, STR_CONFIG_SETTING_SERVINT_AIRCRAFT_HELPTEXT, STR_CONFIG_SETTING_SERVINT_VALUE, [](auto new_value) { return CanUpdateServiceInterval(VEH_AIRCRAFT, new_value); }, [](auto new_value) { UpdateServiceInterval(VEH_AIRCRAFT, new_value); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, false, nullptr),
SDT_BOOL(CompanySettings, vehicle.auto_timetable_by_default,        SF_PER_COMPANY, false,                        STR_CONFIG_SETTING_AUTO_TIMETABLE_BY_DEFAULT, STR_CONFIG_SETTING_AUTO_TIMETABLE_BY_DEFAULT_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, false, "vehicle.auto_timetable_by_default"),
SDT_BOOL(CompanySettings, vehicle.auto_separation_by_default,        SF_PER_COMPANY, true,                        STR_CONFIG_SETTING_TIMETABLE_SEPARATION_BY_DEFAULT, STR_CONFIG_SETTING_TIMETABLE_SEPARATION_BY_DEFAULT_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, false, "vehicle.auto_separation_by_default"),
SDT_VAR(CompanySettings, auto_timetable_separation_rate, SLE_UINT8, SF_PER_COMPANY, 40, 0, 100, 10, STR_CONFIG_SETTING_TIMETABLE_SEPARATION_RATE, STR_CONFIG_SETTING_TIMETABLE_SEPARATION_RATE_HELPTEXT, STR_CONFIG_SETTING_PERCENTAGE, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_EXPERT, nullptr, false, "auto_timetable_separation_rate"),
SDT_VAR(CompanySettings, timetable_autofill_rounding, SLE_UINT16, SF_PER_COMPANY | SF_GUI_0_IS_SPECIAL, 0, 0, 1000, 10, STR_CONFIG_SETTING_TIMETABLE_AUTOFILL_ROUNDING_TICKS, STR_CONFIG_SETTING_TIMETABLE_AUTOFILL_ROUNDING_TICKS_HELPTEXT, STR_CONFIG_SETTING_TIMETABLE_AUTOFILL_ROUNDING_TICKS_VALUE, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_EXPERT, nullptr, false, "timetable_autofill_rounding"),
SDT_VAR(CompanySettings, order_occupancy_smoothness, SLE_UINT8, SF_PER_COMPANY, 75, 0, 100, 10, STR_CONFIG_OCCUPANCY_SMOOTHNESS, STR_CONFIG_OCCUPANCY_SMOOTHNESS_HELPTEXT, STR_CONFIG_SETTING_PERCENTAGE, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_EXPERT, nullptr, false, "order_occupancy_smoothness"),
SDT_BOOL(CompanySettings, infra_others_buy_in_depot[0],        SF_PER_COMPANY, false,                        STR_CONFIG_SETTING_INFRA_OTHERS_BUY_IN_DEPOT_RAIL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, false, "infra_sharing.infra_others_buy_in_depot.rail"),
SDT_BOOL(CompanySettings, infra_others_buy_in_depot[1],        SF_PER_COMPANY, false,                        STR_CONFIG_SETTING_INFRA_OTHERS_BUY_IN_DEPOT_ROAD, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, false, "infra_sharing.infra_others_buy_in_depot.road"),
SDT_BOOL(CompanySettings, infra_others_buy_in_depot[2],        SF_PER_COMPANY, false,                        STR_CONFIG_SETTING_INFRA_OTHERS_BUY_IN_DEPOT_WATER, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, false, "infra_sharing.infra_others_buy_in_depot.water"),
SDT_BOOL(CompanySettings, infra_others_buy_in_depot[3],        SF_PER_COMPANY, false,                        STR_CONFIG_SETTING_INFRA_OTHERS_BUY_IN_DEPOT_AIR, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, false, "infra_sharing.infra_others_buy_in_depot.air"),
SDT_BOOL(CompanySettings, advance_order_on_clone,        SF_PER_COMPANY, false,                        STR_CONFIG_SETTING_ADVANCE_ORDER_ON_CLONE, STR_CONFIG_SETTING_ADVANCE_ORDER_ON_CLONE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, false, "advance_order_on_clone"),
SDT_BOOL(CompanySettings, copy_clone_add_to_group,        SF_PER_COMPANY, true,                        STR_CONFIG_SETTING_COPY_CLONE_ADD_TO_GROUP, STR_CONFIG_SETTING_COPY_CLONE_ADD_TO_GROUP_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, false, "copy_clone_add_to_group"),
SDT_VAR(CompanySettings, old_simulated_wormhole_signals, SLE_UINT8, SF_PER_COMPANY, 4, 1, 16, 0, STR_CONFIG_SETTING_SIMULATE_SIGNALS, STR_CONFIG_SETTING_SIMULATE_SIGNALS_HELPTEXT, STR_CONFIG_SETTING_SIMULATE_SIGNALS_VALUE, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SIG_TUNNEL_BRIDGE, 1, 9), SC_ADVANCED, nullptr, false, "simulated_wormhole_signals"),
};
static const SettingTable _currency_settings{
SDT_VAR (CurrencySpec, rate, SLE_UINT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 1, 0, UINT16_MAX, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, false, nullptr),
SDT_SSTR(CurrencySpec, separator, SLE_STRQ, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, ".",                                                 nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_BASIC, nullptr, false, nullptr),
SDT_VAR (CurrencySpec, to_euro, SLE_INT32, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 0, MIN_YEAR, MAX_YEAR, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, false, nullptr),
SDT_SSTR(CurrencySpec, prefix, SLE_STRQ, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, nullptr,                                                 nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, false, nullptr),
SDT_SSTR(CurrencySpec, suffix, SLE_STRQ, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, " credits",                                                 nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, false, nullptr),
};
static const uint GAME_DIFFICULTY_NUM = 18;
static const std::array<std::string, GAME_DIFFICULTY_NUM> _old_diff_settings{"max_no_competitors", "competitor_start_time", "number_towns", "industry_density", "max_loan", "initial_interest", "vehicle_costs", "competitor_speed", "competitor_intelligence", "vehicle_breakdowns", "subsidy_multiplier", "construction_cost", "terrain_type", "quantity_sea_lakes", "economy", "line_reverse_mode", "disasters", "town_council_tolerance"};
static uint16 _old_diff_custom[GAME_DIFFICULTY_NUM];
uint8 _old_diff_level;                                 ///< Old difficulty level from old savegames
uint8 _old_units;                                      ///< Old units from old savegames
/* Most of these strings are used both for gameopt-backward compatibility
 * and the settings tables. The rest is here for consistency. */
static constexpr std::initializer_list<const char*> _locale_currencies{"GBP", "USD", "EUR", "JPY", "ATS", "BEF", "CHF", "CZK", "DEM", "DKK", "ESP", "FIM", "FRF", "GRD", "HUF", "ISK", "ITL", "NLG", "NOK", "PLN", "RON", "RUR", "SIT", "SEK", "TRY", "SKK", "BRL", "EEK", "LTL", "KRW", "ZAR", "custom", "GEL", "IRR", "RUB", "MXN", "NTD", "CNY", "HKD", "INR", "IDR", "MYR"};
static_assert(_locale_currencies.size() == CURRENCY_END);
static constexpr std::initializer_list<const char*> _locale_units{"imperial", "metric", "si", "gameunits"};
static constexpr std::initializer_list<const char*> _town_names{"english", "french", "german", "american", "latin", "silly", "swedish", "dutch", "finnish", "polish", "slovak", "norwegian", "hungarian", "austrian", "romanian", "czech", "swiss", "danish", "turkish", "italian", "catalan"};
static constexpr std::initializer_list<const char*> _climates{"temperate", "arctic", "tropic", "toyland"};
static constexpr std::initializer_list<const char*> _autosave_interval{"off", "monthly", "quarterly", "half year", "yearly", "custom_days", "custom_realtime_minutes"};
static constexpr std::initializer_list<const char*> _roadsides{"left", "right"};
static constexpr std::initializer_list<const char*> _savegame_date{"long", "short", "iso"};
static constexpr std::initializer_list<const char*> _savegame_overwrite_confirm{"no", "different", "not same", "yes"};
static constexpr std::initializer_list<const char*> _osk_activation{"disabled", "double", "single", "immediately"};
static constexpr std::initializer_list<const char*> _settings_profiles{"easy", "medium", "hard"};
static constexpr std::initializer_list<const char*> _news_display{ "off", "summarized", "full"};
static const SettingTable _gameopt_settings{
/* In version 4 a new difficulty setting has been added to the difficulty settings,
 * town attitude towards demolishing. Needs special handling because some dimwit thought
 * it funny to have the GameDifficulty struct be an array while it is a struct of
 * same-sized members
 * XXX - To save file-space and since values are never bigger than about 10? only
 * save the first 16 bits in the savegame. Question is why the values are still int32
 * and why not byte for example?
 * 'SLE_FILE_I16 | SLE_VAR_U16' in "diff_custom" is needed to get around SlArray() hack
 * for savegames version 0 - though it is an array, it has to go through the byteswap process */
SDTG_LIST("diff_custom",              SLE_FILE_I16 | SLE_VAR_U16, SF_NOT_IN_CONFIG, _old_diff_custom, nullptr, 17,                                                            SL_MIN_VERSION, SLV_4, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTG_LIST("diff_custom",              SLE_UINT16, SF_NOT_IN_CONFIG, _old_diff_custom, nullptr, 18,                                                            SLV_4, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTG_VAR("diff_level",              SLE_UINT8, SF_NOT_IN_CONFIG, _old_diff_level, SP_CUSTOM, SP_EASY, SP_CUSTOM, 0,  STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_OMANY(GameSettings, locale.currency, SLE_UINT8, SF_NO_NETWORK_SYNC, 0,       CURRENCY_END - 1, _locale_currencies,            STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), nullptr, SC_BASIC, nullptr, false, nullptr),
SDTG_OMANY("units",              SLE_UINT8, SF_NOT_IN_CONFIG, _old_units, 1, 2, _locale_units,            STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_OMANY(GameSettings, game_creation.town_name, SLE_UINT8, SF_NONE, 0,       255, _town_names,            STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), nullptr, SC_BASIC, nullptr, false, nullptr),
SDT_OMANY(GameSettings, game_creation.landscape, SLE_UINT8, SF_NONE, 0,       3, _climates,            STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), ConvertLandscape, SC_BASIC, nullptr, false, nullptr),
SDT_VAR(GameSettings, game_creation.snow_line_height, SLE_UINT8, SF_NONE, DEF_SNOWLINE_HEIGHT * TILE_HEIGHT, MIN_SNOWLINE_HEIGHT * TILE_HEIGHT, UINT8_MAX,        0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SLV_22, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_NULL(                                               2,                                                            SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_JOKERPP)),
SDT_NULL(                                               1,                                                            SLV_22, SLV_165, SlXvFeatureTest()),
SDT_NULL(                                               1,                                                            SL_MIN_VERSION, SLV_23, SlXvFeatureTest()),
SDTC_OMANY(              gui.autosave, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 1,       6, _autosave_interval,            STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_OMANY(GameSettings, vehicle.road_side, SLE_UINT8, SF_NONE, 1,       1, _roadsides,            STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), nullptr, SC_BASIC, nullptr, false, nullptr),
};
extern std::string _config_language_file;
static std::initializer_list<const char*> _support8bppmodes{"no", "system" , "hardware"};
static std::initializer_list<const char*> _display_opt_modes{"SHOW_TOWN_NAMES", "SHOW_STATION_NAMES", "SHOW_SIGNS", "FULL_ANIMATION", "", "FULL_DETAIL", "WAYPOINTS", "SHOW_COMPETITOR_SIGNS"};
static std::initializer_list<const char*> _extra_display_opt_modes{"SHOW_MONEY_TEXT_EFFECTS", "SHOW_HIDDEN_SIGNS"};
#ifdef WITH_COCOA
extern bool _allow_hidpi_window;
#endif
#ifndef WITH_COCOA
#define WITHOUT_COCOA
#endif
static const SettingTable _misc_settings{
SDTG_MMANY("display_opt", SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _display_opt, (1 << DO_SHOW_TOWN_NAMES | 1 << DO_SHOW_STATION_NAMES | 1 << DO_SHOW_SIGNS | 1 << DO_FULL_ANIMATION | 1 << DO_FULL_DETAIL | 1 << DO_SHOW_WAYPOINT_NAMES | 1 << DO_SHOW_COMPETITOR_SIGNS),                        _display_opt_modes, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, true, nullptr),
SDTG_MMANY("extra_display_opt", SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _extra_display_opt, (1 << XDO_SHOW_MONEY_TEXT_EFFECTS),                        _extra_display_opt_modes, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, true, nullptr),
SDTG_BOOL("fullscreen",        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _fullscreen, false,                               STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_BASIC, nullptr, true, nullptr),
#ifdef WITH_COCOA
SDTG_BOOL("video_hw_accel",        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _video_hw_accel, false,                               STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_BASIC, nullptr, true, nullptr),
#endif
#ifdef WITHOUT_COCOA
SDTG_BOOL("video_hw_accel",        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _video_hw_accel, true,                               STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_BASIC, nullptr, true, nullptr),
#endif
SDTG_BOOL("video_vsync",        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _video_vsync, false,                               STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_BASIC, nullptr, true, nullptr),
SDTG_OMANY("support8bpp", SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _support8bpp, 0,       2,            _support8bppmodes, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_BASIC, nullptr, true, nullptr),
SDTG_SSTR("graphicsset", SLE_STRQ, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, BaseGraphics::ini_set, nullptr,       0,                                               nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_BASIC, nullptr, true, nullptr),
SDTG_SSTR("soundsset", SLE_STRQ, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, BaseSounds::ini_set, nullptr,       0,                                               nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_BASIC, nullptr, true, nullptr),
SDTG_SSTR("musicset", SLE_STRQ, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, BaseMusic::ini_set, nullptr,       0,                                               nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_BASIC, nullptr, true, nullptr),
SDTG_SSTR("videodriver", SLE_STRQ, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _ini_videodriver, nullptr,       0,                                               nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_EXPERT, nullptr, true, nullptr),
SDTG_SSTR("musicdriver", SLE_STRQ, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _ini_musicdriver, nullptr,       0,                                               nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_EXPERT, nullptr, true, nullptr),
SDTG_SSTR("sounddriver", SLE_STRQ, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _ini_sounddriver, nullptr,       0,                                               nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_EXPERT, nullptr, true, nullptr),
SDTG_SSTR("blitter", SLE_STRQ, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _ini_blitter, nullptr,       0,                                               nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, true, nullptr),
SDTG_SSTR("language", SLE_STR, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _config_language_file, nullptr,       0,                                               nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_BASIC, nullptr, true, nullptr),
SDTG_LIST("resolution", SLE_INT, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _cur_resolution, "0,0",       2,                                                            SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_BASIC, nullptr, true, nullptr),
SDTG_SSTR("screenshot_format", SLE_STR, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _screenshot_format_name, nullptr,       0,                                               nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_EXPERT, nullptr, true, nullptr),
SDTG_SSTR("savegame_format", SLE_STR, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _savegame_format, nullptr,       0,                                               nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_EXPERT, nullptr, true, nullptr),
SDTG_BOOL("rightclick_emulate",        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _rightclick_emulate, false,                               STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, true, nullptr),
#ifdef HAS_TRUETYPE_FONT
SDTG_SSTR("small_font", SLE_STR, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _fcsettings.small.font, nullptr,       0,                                               nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, true, nullptr),
#endif
#ifdef HAS_TRUETYPE_FONT
SDTG_SSTR("medium_font", SLE_STR, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _fcsettings.medium.font, nullptr,       0,                                               nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, true, nullptr),
#endif
#ifdef HAS_TRUETYPE_FONT
SDTG_SSTR("large_font", SLE_STR, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _fcsettings.large.font, nullptr,       0,                                               nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, true, nullptr),
#endif
#ifdef HAS_TRUETYPE_FONT
SDTG_SSTR("mono_font", SLE_STR, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _fcsettings.mono.font, nullptr,       0,                                               nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, true, nullptr),
#endif
#ifdef HAS_TRUETYPE_FONT
SDTG_VAR("small_size", SLE_UINT, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _fcsettings.small.size, 0, 0, 72, 0,        STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, true, nullptr),
#endif
#ifdef HAS_TRUETYPE_FONT
SDTG_VAR("medium_size", SLE_UINT, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _fcsettings.medium.size, 0, 0, 72, 0,        STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, true, nullptr),
#endif
#ifdef HAS_TRUETYPE_FONT
SDTG_VAR("large_size", SLE_UINT, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _fcsettings.large.size, 0, 0, 72, 0,        STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, true, nullptr),
#endif
#ifdef HAS_TRUETYPE_FONT
SDTG_VAR("mono_size", SLE_UINT, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _fcsettings.mono.size, 0, 0, 72, 0,        STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, true, nullptr),
#endif
#ifdef HAS_TRUETYPE_FONT
SDTG_BOOL("small_aa",        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _fcsettings.small.aa, false,                               STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, true, nullptr),
#endif
#ifdef HAS_TRUETYPE_FONT
SDTG_BOOL("medium_aa",        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _fcsettings.medium.aa, false,                               STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, true, nullptr),
#endif
#ifdef HAS_TRUETYPE_FONT
SDTG_BOOL("large_aa",        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _fcsettings.large.aa, false,                               STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, true, nullptr),
#endif
#ifdef HAS_TRUETYPE_FONT
SDTG_BOOL("mono_aa",        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _fcsettings.mono.aa, false,                               STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, true, nullptr),
#endif
SDTG_VAR("sprite_cache_size_px", SLE_UINT, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _sprite_cache_size, 128, 1, 512, 0,        STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_EXPERT, nullptr, true, nullptr),
SDTG_VAR("player_face", SLE_UINT32, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _company_manager_face, 0, 0, 0xFFFFFFFF, 0,        STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_BASIC, nullptr, true, nullptr),
SDTG_VAR("transparency_options", SLE_UINT, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _transparency_opt_base, 0, 0, 0xFFFFFFFF, 0,        STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_BASIC, nullptr, true, nullptr),
SDTG_VAR("extra_transparency_options", SLE_UINT, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _transparency_opt_extra, 0, 0, 0xFFFFFFFF, 0,        STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_BASIC, nullptr, true, nullptr),
SDTG_VAR("transparency_locks", SLE_UINT, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _transparency_lock_base, 0, 0, 0xFFFFFFFF, 0,        STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_BASIC, nullptr, true, nullptr),
SDTG_VAR("extra_transparency_locks", SLE_UINT, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _transparency_lock_extra, 0, 0, 0xFFFFFFFF, 0,        STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_BASIC, nullptr, true, nullptr),
SDTG_VAR("invisibility_options", SLE_UINT, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _invisibility_opt, 0, 0, 0xFF, 0,        STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_BASIC, nullptr, true, nullptr),
SDTG_SSTR("keyboard", SLE_STR, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _keyboard_opt[0], nullptr,       0,                                               nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_EXPERT, nullptr, true, nullptr),
SDTG_SSTR("keyboard_caps", SLE_STR, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _keyboard_opt[1], nullptr,       0,                                               nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_EXPERT, nullptr, true, nullptr),
SDTG_VAR("last_newgrf_count", SLE_UINT32, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _settings_client.gui.last_newgrf_count, 100, 0, UINT32_MAX, 0,        STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_EXPERT, nullptr, true, nullptr),
SDTG_VAR("gui_zoom", SLE_INT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _gui_zoom_cfg, ZOOM_LVL_CFG_AUTO, ZOOM_LVL_CFG_AUTO, ZOOM_LVL_OUT_4X, 0,        STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_BASIC, nullptr, true, nullptr),
SDTG_VAR("font_zoom", SLE_INT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _font_zoom_cfg, ZOOM_LVL_CFG_AUTO, ZOOM_LVL_CFG_AUTO, ZOOM_LVL_OUT_4X, 0,        STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_BASIC, nullptr, true, nullptr),
#ifdef WITH_COCOA
SDTG_BOOL("allow_hidpi",        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _allow_hidpi_window, true,                               STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, true, nullptr),
#endif
SDTG_VAR("zoning_overlay_inner", SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _zoning.inner, 0, 0, ZEM_END - 1, 0,        STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_BASIC, nullptr, true, nullptr),
SDTG_VAR("zoning_overlay_outer", SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _zoning.outer, 0, 0, ZEM_END - 1, 0,        STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_BASIC, nullptr, true, nullptr),
SDTG_VAR("cargo_payment_x_mode", SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _cargo_payment_x_mode, 0, 0, 1, 0,        STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, true, nullptr),
};
static void UpdateClientConfigValues();
static std::initializer_list<const char*> _server_game_type{"local", "public", "invite-only"};
static std::initializer_list<const char*> _use_relay_service{"never", "ask", "allow"};
static const SettingTable _network_settings = {
SDTC_VAR(              network.sync_freq, SLE_UINT16, SF_NOT_IN_SAVE | SF_NOT_IN_CONFIG | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, 100,       0, 100, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_VAR(              network.frame_freq, SLE_UINT8, SF_NOT_IN_SAVE | SF_NOT_IN_CONFIG | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, 0,       0, 100, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_VAR(              network.commands_per_frame, SLE_UINT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, 2,       1, 65535, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_VAR(              network.max_commands_in_queue, SLE_UINT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, 16,       1, 65535, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_VAR(              network.bytes_per_frame, SLE_UINT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, 8,       1, 65535, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_VAR(              network.bytes_per_frame_burst, SLE_UINT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, 256,       1, 65535, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_VAR(              network.max_init_time, SLE_UINT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, 100,       0, 32000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_VAR(              network.max_join_time, SLE_UINT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, 500,       0, 32000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              network.max_download_time, SLE_UINT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, 1000,       0, 32000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              network.max_password_time, SLE_UINT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, 2000,       0, 32000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              network.max_lag_time, SLE_UINT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, 500,       0, 32000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              network.pause_on_join,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, true,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              network.server_port, SLE_UINT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, NETWORK_DEFAULT_PORT,       0, 65535, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_VAR(              network.server_admin_port, SLE_UINT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, NETWORK_ADMIN_PORT,       0, 65535, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_BOOL(              network.server_admin_chat,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, true,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_OMANY(              network.server_game_type, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, SERVER_GAME_TYPE_LOCAL,             SERVER_GAME_TYPE_INVITE_ONLY, _server_game_type,     STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, [](auto) { NetworkUpdateServerGameType(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_BOOL(              network.autoclean_companies,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, false,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              network.autoclean_unprotected, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_0_IS_SPECIAL | SF_NETWORK_ONLY, 12,       0, 240, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              network.autoclean_protected, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_0_IS_SPECIAL | SF_NETWORK_ONLY, 36,       0, 240, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              network.autoclean_novehicles, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_0_IS_SPECIAL | SF_NETWORK_ONLY, 0,       0, 240, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              network.max_companies, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, 15,       1, MAX_COMPANIES, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, [](auto) { UpdateClientConfigValues(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_VAR(              network.max_clients, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, 25,       2, MAX_CLIENTS, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, [](auto) { UpdateClientConfigValues(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_VAR(              network.restart_game_year, SLE_INT32, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_0_IS_SPECIAL | SF_NETWORK_ONLY, 0,       MIN_YEAR, MAX_YEAR, 1, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              network.min_active_clients, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, 0,       0, MAX_CLIENTS, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              network.reload_cfg,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, false,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_BOOL(              network.no_http_content_downloads,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_OMANY(              network.use_relay_service, SLE_UINT8, SF_GUI_DROPDOWN | SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, URS_ASK,             URS_ALLOW, _use_relay_service,     STR_CONFIG_SETTING_USE_RELAY_SERVICE, STR_CONFIG_SETTING_USE_RELAY_SERVICE_HELPTEXT, STR_CONFIG_SETTING_USE_RELAY_SERVICE_NEVER, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
};
static const SettingTable _network_private_settings = {
SDTC_SSTR(              network.client_name, SLE_STR, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, nullptr,             NETWORK_CLIENT_NAME_LENGTH,                                  NetworkValidateClientName, NetworkUpdateClientName, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_SSTR(              network.server_name, SLE_STR, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, nullptr,             NETWORK_NAME_LENGTH,                                  NetworkValidateServerName, [](auto) { UpdateClientConfigValues(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_SSTR(              network.connect_to_ip, SLE_STR, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, nullptr,             0,                                  nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_SSTR(              network.last_joined, SLE_STR, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, "",             0,                                  nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
};
static bool ReplaceAsteriskWithEmptyPassword(std::string &newval);
static bool IsValidHex128BitKeyString(std::string &newval);
static bool IsValidHex256BitKeyString(std::string &newval);
static void ParseCompanyPasswordStorageToken(const std::string &value);
static void ParseCompanyPasswordStorageSecret(const std::string &value);
static const SettingTable _network_secrets_settings = {
SDTC_SSTR(              network.server_password, SLE_STR, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, nullptr,             NETWORK_PASSWORD_LENGTH,                                  ReplaceAsteriskWithEmptyPassword, [](auto) { NetworkServerUpdateGameInfo(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_SSTR(              network.rcon_password, SLE_STR, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, nullptr,             NETWORK_PASSWORD_LENGTH,                                  ReplaceAsteriskWithEmptyPassword, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_SSTR(              network.admin_password, SLE_STR, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, nullptr,             NETWORK_PASSWORD_LENGTH,                                  nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_SSTR(              network.settings_password, SLE_STR, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, nullptr,             NETWORK_PASSWORD_LENGTH,                                  ReplaceAsteriskWithEmptyPassword, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_SSTR(              network.default_company_pass, SLE_STR, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, nullptr,             NETWORK_PASSWORD_LENGTH,                                  nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_SSTR(              network.network_id, SLE_STR, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, nullptr,             NETWORK_SERVER_ID_LENGTH,                                  nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, true, nullptr),
SDTC_SSTR(              network.server_invite_code, SLE_STR, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, nullptr,             NETWORK_INVITE_CODE_LENGTH,                                  nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_SSTR(              network.server_invite_code_secret, SLE_STR, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY, nullptr,             NETWORK_INVITE_CODE_SECRET_LENGTH,                                  nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_SSTR(              network.company_password_storage_token, SLE_STR, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY | SF_RUN_CALLBACKS_ON_PARSE, nullptr,             33,                                  IsValidHex128BitKeyString, ParseCompanyPasswordStorageToken, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, true, nullptr),
SDTC_SSTR(              network.company_password_storage_secret, SLE_STR, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_NETWORK_ONLY | SF_RUN_CALLBACKS_ON_PARSE, nullptr,             65,                                  IsValidHex256BitKeyString, ParseCompanyPasswordStorageSecret, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, true, nullptr),
};
/* Begin - Callback Functions for the various settings */
static void v_PositionMainToolbar(int32 new_value);
static void v_PositionStatusbar(int32 new_value);
static void RedrawSmallmap(int32 new_value);
static void StationSpreadChanged(int32 new_value);
static void UpdateConsists(int32 new_value);
static void TrainAccelerationModelChanged(int32 new_value);
static bool CheckTrainBrakingModelChange(int32 &new_value);
static void TrainBrakingModelChanged(int32 new_value);
static void RoadVehAccelerationModelChanged(int32 new_value);
static void TrainSlopeSteepnessChanged(int32 new_value);
static void RoadVehSlopeSteepnessChanged(int32 new_value);
static void ProgrammableSignalsShownChanged(int32 new_value);
static void VehListCargoFilterShownChanged(int32 new_value);
static void TownFoundingChanged(int32 new_value);
static bool TownCouncilToleranceAdjust(int32 &new_value);
static void DifficultyNoiseChange(int32 new_value);
static void DifficultyMoneyCheatMultiplayerChange(int32 new_value);
static void DifficultyRenameTownsMultiplayerChange(int32 new_value);
static void DifficultyOverrideTownSettingsMultiplayerChange(int32 new_value);
static void MaxNoAIsChange(int32 new_value);
static bool CheckRoadSide(int32 &new_value);
static void RoadSideChanged(int32 new_value);
static bool CheckMaxHeightLevel(int32 &new_value);
static bool CheckFreeformEdges(int32 &new_value);
static void UpdateFreeformEdges(int32 new_value);
static bool CheckDynamicEngines(int32 &new_value);
static void StationCatchmentChanged(int32 new_value);
static void InvalidateVehTimetableWindow(int32 new_value);
static void ChangeTimetableInTicksMode(int32 new_value);
static void UpdateTimeSettings(int32 new_value);
static void ChangeTimeOverrideMode(int32 new_value);
static void DeveloperModeChanged(int32 new_value);
static void ScriptMaxOpsChange(int32 new_value);
static bool CheckScriptMaxMemoryChange(int32 &new_value);
static void ScriptMaxMemoryChange(int32 new_value);
static void InvalidateCompanyWindow(int32 new_value);
static void InvalidateCompanyLiveryWindow(int32 new_value);
static void InvalidateNewGRFChangeWindows(int32 new_value);
static void ZoomMinMaxChanged(int32 new_value);
static void SpriteZoomMinChanged(int32 new_value);
static void InvalidateSettingsWindow(int32 new_value);
static void MaxVehiclesChanged(int32 new_value);
static void InvalidateShipPathCache(int32 new_value);
static void ImprovedBreakdownsSettingChanged(int32 new_value);
static void DayLengthChanged(int32 new_value);
static void EnableSingleVehSharedOrderGuiChanged(int32 new_value);
static void CheckYapfRailSignalPenalties(int32 new_value);
static void ViewportMapShowTunnelModeChanged(int32 new_value);
static void ViewportMapLandscapeModeChanged(int32 new_value);
static void UpdateLinkgraphColours(int32 new_value);
static void ClimateThresholdModeChanged(int32 new_value);
static void VelocityUnitsChanged(int32 new_value);
static void ChangeTrackTypeSortMode(int32 new_value);
static void PublicRoadsSettingChange(int32 new_value);
static void TrainSpeedAdaptationChanged(int32 new_value);
static void AutosaveModeChanged(int32 new_value);
static bool CheckSharingRail(int32 &new_value);
static void SharingRailChanged(int32 new_value);
static bool CheckSharingRoad(int32 &new_value);
static bool CheckSharingWater(int32 &new_value);
static bool CheckSharingAir(int32 &new_value);
static bool IndustryLabelsHideChange(int32 i);
/* End - Callback Functions for the various settings */
/* Begin - xref conversion callbacks */
static int64 LinkGraphDistModeXrefChillPP(int64 val);
/* End - xref conversion callbacks */
/* Begin - GUI callbacks */
static bool LinkGraphDistributionSettingGUI(SettingOnGuiCtrlData &data);
static bool OrderTownGrowthRate(SettingOnGuiCtrlData &data);
static bool AllowRoadStopsUnderBridgesSettingGUI(SettingOnGuiCtrlData &data);
/* End - GUI callbacks */
static const SettingDescEnumEntry _linkgraph_mode_symmetric[] = {
{ DT_MANUAL, STR_CONFIG_SETTING_DISTRIBUTION_MANUAL },
{ DT_SYMMETRIC, STR_CONFIG_SETTING_DISTRIBUTION_SYMMETRIC },
{ DT_ASYMMETRIC, STR_CONFIG_SETTING_DISTRIBUTION_ASYMMETRIC },
{ DT_ASYMMETRIC_EQ, STR_CONFIG_SETTING_DISTRIBUTION_ASYMMETRIC_EQ },
{ DT_ASYMMETRIC_NEAR, STR_CONFIG_SETTING_DISTRIBUTION_ASYMMETRIC_NEAREST },
{ 0, STR_NULL }
};
static const SettingDescEnumEntry _linkgraph_mode_asymmetric[] = {
{ DT_MANUAL, STR_CONFIG_SETTING_DISTRIBUTION_MANUAL },
{ DT_ASYMMETRIC, STR_CONFIG_SETTING_DISTRIBUTION_ASYMMETRIC },
{ DT_ASYMMETRIC_EQ, STR_CONFIG_SETTING_DISTRIBUTION_ASYMMETRIC_EQ },
{ DT_ASYMMETRIC_NEAR, STR_CONFIG_SETTING_DISTRIBUTION_ASYMMETRIC_NEAREST },
{ 0, STR_NULL }
};
static const SettingDescEnumEntry _linkgraph_mode_per_cargo[] = {
{ DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_DEFAULT },
{ DT_MANUAL, STR_CONFIG_SETTING_DISTRIBUTION_MANUAL },
{ DT_SYMMETRIC, STR_CONFIG_SETTING_DISTRIBUTION_SYMMETRIC },
{ DT_ASYMMETRIC, STR_CONFIG_SETTING_DISTRIBUTION_ASYMMETRIC },
{ DT_ASYMMETRIC_EQ, STR_CONFIG_SETTING_DISTRIBUTION_ASYMMETRIC_EQ },
{ DT_ASYMMETRIC_NEAR, STR_CONFIG_SETTING_DISTRIBUTION_ASYMMETRIC_NEAREST },
{ 0, STR_NULL }
};
static const SettingDescEnumEntry _town_council_approval[] = {
{ 0, STR_CITY_APPROVAL_LENIENT },
{ 1, STR_CITY_APPROVAL_TOLERANT },
{ 2, STR_CITY_APPROVAL_HOSTILE },
{ 3, STR_CITY_APPROVAL_PERMISSIVE },
{ 0, STR_NULL }
};
static const SettingDescEnumEntry _train_braking_model[] = {
{ TBM_ORIGINAL, STR_CONFIG_SETTING_ORIGINAL },
{ TBM_REALISTIC, STR_CONFIG_SETTING_TRAIN_BRAKING_REALISTIC },
{ 0, STR_NULL }
};
static const SettingDescEnumEntry _realistic_braking_aspect_limited[] = {
{ TRBALM_OFF, STR_CONFIG_SETTING_OFF },
{ TRBALM_ON, STR_CONFIG_SETTING_TRAIN_BRAKING_ASPECT_LIMITED_ON },
{ 0, STR_NULL }
};
static const SettingDescEnumEntry _station_delivery_mode[] = {
{ SD_NEAREST_FIRST, STR_CONFIG_SETTING_ORIGINAL},
{ SD_BALANCED, STR_CONFIG_SETTING_DELIVERY_BALANCED},
{ 0, STR_NULL }
};
static const SettingDescEnumEntry _disable_water_animation[] = {
{ 255, STR_CONFIG_SETTING_OFF },
{ 3, STR_CONFIG_SETTING_DISABLE_WATER_ANIMATION_8X },
{ 4, STR_CONFIG_SETTING_DISABLE_WATER_ANIMATION_16X },
{ 5, STR_CONFIG_SETTING_DISABLE_WATER_ANIMATION_32X },
{ 0, STR_NULL }
};
/* Some settings do not need to be synchronised when playing in multiplayer.
 * These include for example the GUI settings and will not be saved with the
 * savegame.
 * It is also a bit tricky since you would think that service_interval
 * for example does not need to be synched. Every client assigns the
 * service_interval value to the v->service_interval, meaning that every client
 * assigns its own value. If the setting was company-based, that would mean that
 * vehicles could decide on different moments that they are heading back to a
 * service depot, causing desyncs on a massive scale. */
const SettingTable _settings{
SDT_VAR(GameSettings, difficulty.max_no_competitors, SLE_UINT8, SF_NONE, 0,       0, MAX_COMPANIES - 1, 1, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, MaxNoAIsChange, SLV_97, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_VAR(GameSettings, difficulty.competitor_start_time, SLE_UINT8, SF_NONE, 2,       0, 3, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_97, SLV_110, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, difficulty.number_towns, SLE_UINT8, SF_NEWGAME_ONLY, 2,       0, 4, 1, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NUM_VERY_LOW, nullptr, nullptr, SLV_97, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_VAR(GameSettings, difficulty.industry_density, SLE_UINT8, SF_GUI_DROPDOWN, ID_HIGH,       0, ID_END - 1, 1, STR_CONFIG_SETTING_INDUSTRY_DENSITY, STR_CONFIG_SETTING_INDUSTRY_DENSITY_HELPTEXT, STR_FUNDING_ONLY, nullptr, nullptr, SLV_97, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_VAR(GameSettings, difficulty.max_loan, SLE_UINT32, SF_NEWGAME_ONLY | SF_SCENEDIT_TOO | SF_GUI_CURRENCY, 300000,       0, 2000000000, 50000, STR_CONFIG_SETTING_MAXIMUM_INITIAL_LOAN, STR_CONFIG_SETTING_MAXIMUM_INITIAL_LOAN_HELPTEXT, STR_JUST_CURRENCY_LONG, nullptr, nullptr, SLV_97, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_VAR(GameSettings, difficulty.initial_interest, SLE_UINT8, SF_NEWGAME_ONLY | SF_SCENEDIT_TOO, 2,       2, 4, 1, STR_CONFIG_SETTING_INTEREST_RATE, STR_CONFIG_SETTING_INTEREST_RATE_HELPTEXT, STR_CONFIG_SETTING_PERCENTAGE, nullptr, nullptr, SLV_97, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, difficulty.vehicle_costs, SLE_UINT8, SF_NEWGAME_ONLY | SF_SCENEDIT_TOO | SF_GUI_DROPDOWN, 0,       0, 2, 1, STR_CONFIG_SETTING_RUNNING_COSTS, STR_CONFIG_SETTING_RUNNING_COSTS_HELPTEXT, STR_SEA_LEVEL_LOW, nullptr, nullptr, SLV_97, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_VAR(GameSettings, difficulty.vehicle_costs_in_depot, SLE_UINT8, SF_NONE, 1,       1, 8, 0, STR_CONFIG_SETTING_RUNNING_COSTS_IN_DEPOT, STR_CONFIG_SETTING_RUNNING_COSTS_IN_DEPOT_HELPTEXT, STR_CONFIG_SETTING_RUNNING_COSTS_IN_DEPOT_VALUE, nullptr, nullptr, SLV_97, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "difficulty.vehicle_costs_in_depot"),
SDT_VAR(GameSettings, difficulty.vehicle_costs_when_stopped, SLE_UINT8, SF_NONE, 1,       1, 8, 0, STR_CONFIG_SETTING_RUNNING_COSTS_WHEN_STOPPED, STR_CONFIG_SETTING_RUNNING_COSTS_WHEN_STOPPED_HELPTEXT, STR_CONFIG_SETTING_RUNNING_COSTS_WHEN_STOPPED_VALUE, nullptr, nullptr, SLV_97, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "difficulty.vehicle_costs_when_stopped"),
SDT_VAR(GameSettings, difficulty.competitor_speed, SLE_UINT8, SF_GUI_DROPDOWN, 2,       0, 4, 1, STR_CONFIG_SETTING_CONSTRUCTION_SPEED, STR_CONFIG_SETTING_CONSTRUCTION_SPEED_HELPTEXT, STR_AI_SPEED_VERY_SLOW, nullptr, nullptr, SLV_97, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_VAR(GameSettings, difficulty.competitor_intelligence, SLE_UINT8, SF_NONE, 0,       0, 2, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_97, SLV_110, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, difficulty.vehicle_breakdowns, SLE_UINT8, SF_GUI_DROPDOWN, 1,       0, 2, 1, STR_CONFIG_SETTING_VEHICLE_BREAKDOWNS, STR_CONFIG_SETTING_VEHICLE_BREAKDOWNS_HELPTEXT, STR_DISASTER_NONE, nullptr, nullptr, SLV_97, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_VAR(GameSettings, difficulty.subsidy_multiplier, SLE_UINT8, SF_GUI_DROPDOWN, 2,       0, 3, 1, STR_CONFIG_SETTING_SUBSIDY_MULTIPLIER, STR_CONFIG_SETTING_SUBSIDY_MULTIPLIER_HELPTEXT, STR_SUBSIDY_X1_5, nullptr, nullptr, SLV_97, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, difficulty.subsidy_duration, SLE_UINT16, SF_GUI_0_IS_SPECIAL, 1,       0, 5000, 1, STR_CONFIG_SETTING_SUBSIDY_DURATION, STR_CONFIG_SETTING_SUBSIDY_DURATION_HELPTEXT, STR_CONFIG_SETTING_SUBSIDY_DURATION_VALUE, nullptr, nullptr, SLV_CUSTOM_SUBSIDY_DURATION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, difficulty.construction_cost, SLE_UINT8, SF_NEWGAME_ONLY | SF_SCENEDIT_TOO | SF_GUI_DROPDOWN, 0,       0, 2, 1, STR_CONFIG_SETTING_CONSTRUCTION_COSTS, STR_CONFIG_SETTING_CONSTRUCTION_COSTS_HELPTEXT, STR_SEA_LEVEL_LOW, nullptr, nullptr, SLV_97, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_VAR(GameSettings, difficulty.terrain_type, SLE_UINT8, SF_GUI_DROPDOWN | SF_NEWGAME_ONLY, 1,       0, 5, 1, STR_CONFIG_SETTING_TERRAIN_TYPE, STR_CONFIG_SETTING_TERRAIN_TYPE_HELPTEXT, STR_TERRAIN_TYPE_VERY_FLAT, nullptr, nullptr, SLV_97, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_VAR(GameSettings, difficulty.quantity_sea_lakes, SLE_UINT8, SF_NEWGAME_ONLY, 0,       0, 4, 1, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_SEA_LEVEL_VERY_LOW, nullptr, nullptr, SLV_97, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_BOOL(GameSettings, difficulty.economy,        SF_NONE, false,                              STR_CONFIG_SETTING_RECESSIONS, STR_CONFIG_SETTING_RECESSIONS_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_97, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_BOOL(GameSettings, difficulty.line_reverse_mode,        SF_NONE, false,                              STR_CONFIG_SETTING_TRAIN_REVERSING, STR_CONFIG_SETTING_TRAIN_REVERSING_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_97, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_BOOL(GameSettings, difficulty.disasters,        SF_NONE, false,                              STR_CONFIG_SETTING_DISASTERS, STR_CONFIG_SETTING_DISASTERS_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_97, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_ENUM(GameSettings, difficulty.town_council_tolerance, SLE_UINT8, SF_ENUM_PRE_CB_VALIDATE, 0,                              STR_CONFIG_SETTING_CITY_APPROVAL, STR_CONFIG_SETTING_CITY_APPROVAL_HELPTEXT,          TownCouncilToleranceAdjust, DifficultyNoiseChange, SLV_97, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr, _town_council_approval),
SDT_BOOL(GameSettings, difficulty.money_cheat_in_multiplayer,        SF_NONE, false,                              STR_CONFIG_SETTING_MONEY_CHEAT_MULTIPLAYER, STR_CONFIG_SETTING_MONEY_CHEAT_MULTIPLAYER_HELPTEXT, STR_NULL, nullptr, DifficultyMoneyCheatMultiplayerChange, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "cheat.difficulty.money_cheat_in_multiplayer"),
SDT_BOOL(GameSettings, difficulty.rename_towns_in_multiplayer,        SF_NONE, false,                              STR_CONFIG_SETTING_RENAME_TOWNS_MULTIPLAYER, STR_CONFIG_SETTING_RENAME_TOWNS_MULTIPLAYER_HELPTEXT, STR_NULL, nullptr, DifficultyRenameTownsMultiplayerChange, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "cheat.difficulty.rename_towns_in_multiplayer"),
SDT_BOOL(GameSettings, difficulty.override_town_settings_in_multiplayer,        SF_NONE, false,                              STR_CONFIG_SETTING_OVERRIDE_TOWN_SETTINGS_MULTIPLAYER, STR_CONFIG_SETTING_OVERRIDE_TOWN_SETTINGS_MULTIPLAYER_HELPTEXT, STR_NULL, nullptr, DifficultyOverrideTownSettingsMultiplayerChange, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "cheat.difficulty.override_town_settings_in_multiplayer"),
SDTG_VAR("diff_level",              SLE_UINT8, SF_NOT_IN_CONFIG, _old_diff_level, 3, 0, 3, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_97, SLV_178, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP)),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP), "order.old_timetable_separation", nullptr),
SDT_BOOL(GameSettings, order.old_timetable_separation,        SF_NONE, true,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_AUTO_TIMETABLE, 1, 3),        SC_EXPERT, nullptr, false, "auto_timetables.order.timetable_separation"),
SDT_VAR(GameSettings, order.old_timetable_separation_rate, SLE_UINT8, SF_NONE, 100,       0, 100, 10, STR_CONFIG_SETTING_TIMETABLE_SEPARATION_RATE, STR_CONFIG_SETTING_TIMETABLE_SEPARATION_RATE_HELPTEXT, STR_CONFIG_SETTING_PERCENTAGE, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_AUTO_TIMETABLE, 1, 2),        SC_EXPERT, nullptr, false, "auto_timetables.order.timetable_separation_rate"),
SDT_OMANY(GameSettings, game_creation.town_name, SLE_UINT8, SF_NO_NETWORK, 0,             255, _town_names,     STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_97, SL_MAX_VERSION, SlXvFeatureTest(), nullptr, SC_BASIC, nullptr, false, nullptr),
SDT_OMANY(GameSettings, game_creation.landscape, SLE_UINT8, SF_GUI_DROPDOWN | SF_NEWGAME_ONLY, 0,             3, _climates,     STR_CONFIG_SETTING_LANDSCAPE, STR_CONFIG_SETTING_LANDSCAPE_HELPTEXT, STR_CHEAT_SWITCH_CLIMATE_TEMPERATE_LANDSCAPE, nullptr, nullptr, SLV_97, SL_MAX_VERSION, SlXvFeatureTest(), ConvertLandscape, SC_BASIC, nullptr, false, nullptr),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP)),
SDT_NULL(1, SLV_97, SLV_164, SlXvFeatureTest()),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP, SL_CHILLPP_232)),
SDT_NULL(2, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP)),
SDT_OMANY(GameSettings, vehicle.road_side, SLE_UINT8, SF_GUI_DROPDOWN | SF_NO_NETWORK, 1,             1, _roadsides,     STR_CONFIG_SETTING_ROAD_SIDE, STR_CONFIG_SETTING_ROAD_SIDE_HELPTEXT, STR_GAME_OPTIONS_ROAD_VEHICLES_DROPDOWN_LEFT, CheckRoadSide, RoadSideChanged, SLV_97, SL_MAX_VERSION, SlXvFeatureTest(), nullptr, SC_BASIC, nullptr, false, nullptr),
SDT_VAR(GameSettings, construction.map_height_limit, SLE_UINT8, SF_NEWGAME_ONLY | SF_SCENEDIT_TOO | SF_GUI_0_IS_SPECIAL, 0,       MIN_MAP_HEIGHT_LIMIT, MAX_MAP_HEIGHT_LIMIT, 1, STR_CONFIG_SETTING_MAP_HEIGHT_LIMIT, STR_CONFIG_SETTING_MAP_HEIGHT_LIMIT_HELPTEXT, STR_CONFIG_SETTING_MAP_HEIGHT_LIMIT_VALUE, CheckMaxHeightLevel, [](auto) { InvalidateWindowClassesData(WC_SMALLMAP, 2); }, SLV_194, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_OR, XSLFI_HEIGHT_8_BIT, 1, 1),        SC_ADVANCED, nullptr, false, nullptr),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP)),
SDT_VAR(GameSettings, game_creation.heightmap_height, SLE_UINT8, SF_NEWGAME_ONLY, MAP_HEIGHT_LIMIT_AUTO_MINIMUM,       MIN_HEIGHTMAP_HEIGHT, MAX_MAP_HEIGHT_LIMIT, 1, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_MAPGEN_SETTINGS_REVAMP, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_BOOL(GameSettings, construction.build_on_slopes,        SF_NO_NETWORK, true,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, construction.command_pause_level, SLE_UINT8, SF_GUI_DROPDOWN, 1,       0, 3, 1, STR_CONFIG_SETTING_COMMAND_PAUSE_LEVEL, STR_CONFIG_SETTING_COMMAND_PAUSE_LEVEL_HELPTEXT, STR_CONFIG_SETTING_COMMAND_PAUSE_LEVEL_NO_ACTIONS, nullptr, nullptr, SLV_154, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_BOOL(GameSettings, construction.enable_build_river,        SF_NONE, false,                              STR_CONFIG_SETTING_ENABLE_BUILD_RIVER, STR_CONFIG_SETTING_ENABLE_BUILD_RIVER_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, "enable_build_river.construction.enable_build_river"),
SDT_BOOL(GameSettings, construction.enable_remove_water,        SF_NONE, true,                              STR_CONFIG_SETTING_ENABLE_REMOVE_WATER, STR_CONFIG_SETTING_ENABLE_REMOVE_WATER_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, "enable_build_river.construction.enable_remove_water"),
SDT_VAR(GameSettings, construction.terraform_per_64k_frames, SLE_UINT32, SF_NONE, 64 << 16,       0, 1 << 30, 1, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_156, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, construction.terraform_frame_burst, SLE_UINT16, SF_NONE, 4096,       0, 1 << 15, 1, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_156, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, construction.clear_per_64k_frames, SLE_UINT32, SF_NONE, 64 << 16,       0, 1 << 30, 1, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_156, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, construction.clear_frame_burst, SLE_UINT16, SF_NONE, 4096,       0, 1 << 15, 1, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_156, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, construction.tree_per_64k_frames, SLE_UINT32, SF_NONE, 64 << 16,       0, 1 << 30, 1, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_175, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, construction.tree_frame_burst, SLE_UINT16, SF_NONE, 4096,       0, 1 << 15, 1, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_175, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, construction.purchase_land_per_64k_frames, SLE_UINT32, SF_NONE, 16 << 16,       0, 1 << 30, 1, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "buy_land_rate_limit.construction.purchase_land_per_64k_frames"),
SDT_VAR(GameSettings, construction.purchase_land_frame_burst, SLE_UINT16, SF_NONE, 1024,       0, 1 << 15, 1, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "buy_land_rate_limit.construction.purchase_land_frame_burst"),
SDT_VAR(GameSettings, construction.build_object_per_64k_frames, SLE_UINT32, SF_NONE, 32 << 16,       0, 1 << 30, 1, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "build_object_rate_limit.construction.build_object_per_64k_frames"),
SDT_VAR(GameSettings, construction.build_object_frame_burst, SLE_UINT16, SF_NONE, 2048,       0, 1 << 15, 1, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "build_object_rate_limit.construction.build_object_frame_burst"),
SDT_BOOL(GameSettings, construction.autoslope,        SF_NONE, true,                              STR_CONFIG_SETTING_AUTOSLOPE, STR_CONFIG_SETTING_AUTOSLOPE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_75, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_BOOL(GameSettings, construction.extra_dynamite,        SF_NONE, true,                              STR_CONFIG_SETTING_EXTRADYNAMITE, STR_CONFIG_SETTING_EXTRADYNAMITE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, construction.max_bridge_length, SLE_UINT16, SF_NO_NETWORK, 64,       1, 4096, 1, STR_CONFIG_SETTING_MAX_BRIDGE_LENGTH, STR_CONFIG_SETTING_MAX_BRIDGE_LENGTH_HELPTEXT, STR_CONFIG_SETTING_TILE_LENGTH, nullptr, nullptr, SLV_159, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP, 2), "construction.old_simulated_wormhole_signals", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_JOKERPP), "construction.old_simulated_wormhole_signals", nullptr),
SDT_VAR(GameSettings, construction.max_bridge_height, SLE_UINT8, SF_NO_NETWORK, 12,       1, MAX_TILE_HEIGHT, 1, STR_CONFIG_SETTING_MAX_BRIDGE_HEIGHT, STR_CONFIG_SETTING_MAX_BRIDGE_HEIGHT_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SLV_194, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, construction.max_tunnel_length, SLE_UINT16, SF_NO_NETWORK, 64,       1, 4096, 1, STR_CONFIG_SETTING_MAX_TUNNEL_LENGTH, STR_CONFIG_SETTING_MAX_TUNNEL_LENGTH_HELPTEXT, STR_CONFIG_SETTING_TILE_LENGTH, nullptr, nullptr, SLV_159, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP, SL_CHILLPP_233)),
SDT_BOOL(GameSettings, construction.chunnel,        SF_NONE, false,                              STR_CONFIG_SETTING_CHUNNEL, STR_CONFIG_SETTING_CHUNNEL_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, "chunnel.construction.chunnel"),
SDT_VAR(GameSettings, construction.old_simulated_wormhole_signals, SLE_UINT8, SF_NONE, 2,       1, 16, 0, STR_CONFIG_SETTING_SIMULATE_SIGNALS, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_CONFIG_SETTING_SIMULATE_SIGNALS_VALUE, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SIG_TUNNEL_BRIDGE, 1, 7),        SC_BASIC, nullptr, false, "signal_tunnel_bridge.construction.simulated_wormhole_signals"),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP), "construction.maximum_signal_evaluations", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_JOKERPP), "construction.chunnel", nullptr),
SDT_NULL(1, SL_MIN_VERSION, SLV_159, SlXvFeatureTest()),
SDT_VAR(GameSettings, construction.train_signal_side, SLE_UINT8, SF_GUI_DROPDOWN | SF_NO_NETWORK, 1,       0, 2, 0, STR_CONFIG_SETTING_SIGNALSIDE, STR_CONFIG_SETTING_SIGNALSIDE_HELPTEXT, STR_CONFIG_SETTING_SIGNALSIDE_LEFT, nullptr, [](auto) { MarkWholeScreenDirty(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_BOOL(GameSettings, station.never_expire_airports,        SF_NO_NETWORK, false,                              STR_CONFIG_SETTING_NEVER_EXPIRE_AIRPORTS, STR_CONFIG_SETTING_NEVER_EXPIRE_AIRPORTS_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, economy.town_layout, SLE_UINT8, SF_GUI_DROPDOWN, TL_ORIGINAL,       TL_BEGIN, NUM_TLS - 1, 1, STR_CONFIG_SETTING_TOWN_LAYOUT, STR_CONFIG_SETTING_TOWN_LAYOUT_HELPTEXT, STR_CONFIG_SETTING_TOWN_LAYOUT_DEFAULT, nullptr, TownFoundingChanged, SLV_59, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP)),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP)),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP, 7)),
SDT_BOOL(GameSettings, economy.allow_town_roads,        SF_NO_NETWORK, true,                              STR_CONFIG_SETTING_ALLOW_TOWN_ROADS, STR_CONFIG_SETTING_ALLOW_TOWN_ROADS_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_113, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP), "economy.old_town_cargo_factor", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP), "economy.day_length_factor", nullptr),
SDT_VAR(GameSettings, economy.found_town, SLE_UINT8, SF_GUI_DROPDOWN, TF_FORBIDDEN,       TF_BEGIN, TF_END - 1, 1, STR_CONFIG_SETTING_TOWN_FOUNDING, STR_CONFIG_SETTING_TOWN_FOUNDING_HELPTEXT, STR_CONFIG_SETTING_TOWN_FOUNDING_FORBIDDEN, nullptr, TownFoundingChanged, SLV_128, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_BOOL(GameSettings, economy.allow_town_level_crossings,        SF_NONE, true,                              STR_CONFIG_SETTING_ALLOW_TOWN_LEVEL_CROSSINGS, STR_CONFIG_SETTING_ALLOW_TOWN_LEVEL_CROSSINGS_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_143, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, economy.town_build_tunnels, SLE_UINT8, SF_GUI_DROPDOWN, TTM_ALLOWED,       TTM_BEGIN, TTM_END - 1, 1, STR_CONFIG_SETTING_TOWN_TUNNELS, STR_CONFIG_SETTING_TOWN_TUNNELS_HELPTEXT, STR_CONFIG_SETTING_TOWN_TUNNELS_FORBIDDEN, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, "economy.town_build_tunnels"),
SDT_VAR(GameSettings, economy.town_max_road_slope, SLE_UINT8, SF_GUI_0_IS_SPECIAL, 4,       0, 8, 1, STR_CONFIG_SETTING_TOWN_MAX_ROAD_SLOPE, STR_CONFIG_SETTING_TOWN_MAX_ROAD_SLOPE_HELPTEXT, STR_CONFIG_SETTING_TOWN_MAX_ROAD_SLOPE_VALUE, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, "economy.town_max_road_slope"),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP), "economy.old_town_cargo_factor", nullptr),
SDT_VAR(GameSettings, economy.town_cargogen_mode, SLE_UINT8, SF_GUI_DROPDOWN, TCGM_BITCOUNT,       TCGM_BEGIN, TCGM_END - 1, 1, STR_CONFIG_SETTING_TOWN_CARGOGENMODE, STR_CONFIG_SETTING_TOWN_CARGOGENMODE_HELPTEXT, STR_CONFIG_SETTING_TOWN_CARGOGENMODE_ORIGINAL, nullptr, nullptr, SLV_TOWN_CARGOGEN, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_JOKERPP), "economy.max_town_heightlevel", nullptr),
SDT_VAR(GameSettings, economy.max_town_heightlevel, SLE_UINT8, SF_NONE, MAX_MAP_HEIGHT_LIMIT,       2, MAX_MAP_HEIGHT_LIMIT, 1, STR_CONFIG_SETTING_TOWN_ABOVE_HEIGHT, STR_CONFIG_SETTING_TOWN_ABOVE_HEIGHT_HELPTEXT, STR_JUST_INT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, "max_town_heightlevel.economy.max_town_heightlevel"),
SDT_VAR(GameSettings, economy.min_town_land_area, SLE_UINT16, SF_GUI_0_IS_SPECIAL, 0,       0, 400, 5, STR_CONFIG_SETTING_MIN_TOWN_LAND_AREA, STR_CONFIG_SETTING_MIN_TOWN_LAND_AREA_HELPTEXT, STR_CONFIG_SETTING_MIN_LAND_AREA_VALUE, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, "max_town_heightlevel.economy.min_town_land_area"),
SDT_VAR(GameSettings, economy.min_city_land_area, SLE_UINT16, SF_GUI_0_IS_SPECIAL, 75,       0, 400, 5, STR_CONFIG_SETTING_MIN_CITY_LAND_AREA, STR_CONFIG_SETTING_MIN_CITY_LAND_AREA_HELPTEXT, STR_CONFIG_SETTING_MIN_LAND_AREA_VALUE, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, "max_town_heightlevel.economy.min_city_land_area"),
SDT_VAR(GameSettings, linkgraph.recalc_interval, SLE_UINT16, SF_NONE, 4,       2, 32, 2, STR_CONFIG_SETTING_LINKGRAPH_INTERVAL, STR_CONFIG_SETTING_LINKGRAPH_INTERVAL_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SLV_183, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, linkgraph.recalc_time, SLE_UINT16, SF_NONE, 16,       1, 4096, 1, STR_CONFIG_SETTING_LINKGRAPH_TIME, STR_CONFIG_SETTING_LINKGRAPH_TIME_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SLV_183, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_BOOL(GameSettings, linkgraph.recalc_not_scaled_by_daylength,        SF_NONE, true,                              STR_CONFIG_SETTING_LINKGRAPH_NOT_DAYLENGTH_SCALED, STR_CONFIG_SETTING_LINKGRAPH_NOT_DAYLENGTH_SCALED_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest([](uint16 version, bool version_in_range, uint16 feature_versions[XSLFI_SIZE]) -> bool { return version_in_range && SlXvIsFeaturePresent(feature_versions, XSLFI_LINKGRAPH_DAY_SCALE) && !SlXvIsFeaturePresent(feature_versions, XSLFI_JOKERPP); }),        SC_ADVANCED, nullptr, false, "linkgraph_day_scale.linkgraph.recalc_not_scaled_by_daylength"),
SDT_ENUM(GameSettings, linkgraph.distribution_pax, SLE_UINT8, SF_NONE, DT_MANUAL,                              STR_CONFIG_SETTING_DISTRIBUTION_PAX, STR_CONFIG_SETTING_DISTRIBUTION_PAX_HELPTEXT,          nullptr, nullptr, SLV_183, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_symmetric),
SDT_ENUM(GameSettings, linkgraph.distribution_mail, SLE_UINT8, SF_NONE, DT_MANUAL,                              STR_CONFIG_SETTING_DISTRIBUTION_MAIL, STR_CONFIG_SETTING_DISTRIBUTION_MAIL_HELPTEXT,          nullptr, nullptr, SLV_183, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_symmetric),
SDT_ENUM(GameSettings, linkgraph.distribution_armoured, SLE_UINT8, SF_NONE, DT_MANUAL,                              STR_CONFIG_SETTING_DISTRIBUTION_ARMOURED, STR_CONFIG_SETTING_DISTRIBUTION_ARMOURED_HELPTEXT,          nullptr, nullptr, SLV_183, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_symmetric),
SDT_ENUM(GameSettings, linkgraph.distribution_default, SLE_UINT8, SF_NONE, DT_MANUAL,                              STR_CONFIG_SETTING_DISTRIBUTION_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_DEFAULT_HELPTEXT,          nullptr, nullptr, SLV_183, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_asymmetric),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[0], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[1], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[2], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[3], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[4], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[5], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[6], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[7], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[8], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[9], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[10], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[11], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[12], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[13], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[14], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[15], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[16], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[17], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[18], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[19], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[20], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[21], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[22], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[23], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[24], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[25], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[26], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[27], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[28], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[29], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[30], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[31], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[32], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[33], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[34], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[35], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[36], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[37], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[38], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[39], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[40], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[41], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[42], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[43], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[44], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[45], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[46], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[47], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[48], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[49], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[50], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[51], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[52], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[53], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[54], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[55], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[56], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[57], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[58], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[59], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[60], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[61], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[62], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_ENUM(GameSettings, linkgraph.distribution_per_cargo[63], SLE_UINT8, SF_NONE | SF_NOT_IN_CONFIG | SF_NO_NEWGAME, DT_PER_CARGO_DEFAULT, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO, STR_CONFIG_SETTING_DISTRIBUTION_PER_CARGO_HELPTEXT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_MODES), SC_EXPERT, LinkGraphDistributionSettingGUI, false, nullptr, _linkgraph_mode_per_cargo),
SDT_VAR(GameSettings, linkgraph.accuracy, SLE_UINT8, SF_NONE, 16,       2, 64, 1, STR_CONFIG_SETTING_LINKGRAPH_ACCURACY, STR_CONFIG_SETTING_LINKGRAPH_ACCURACY_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SLV_183, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, linkgraph.demand_distance, SLE_UINT8, SF_NONE, 100,       0, 255, 5, STR_CONFIG_SETTING_DEMAND_DISTANCE, STR_CONFIG_SETTING_DEMAND_DISTANCE_HELPTEXT, STR_CONFIG_SETTING_PERCENTAGE, nullptr, nullptr, SLV_183, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, linkgraph.demand_size, SLE_UINT8, SF_NONE, 100,       0, 100, 5, STR_CONFIG_SETTING_DEMAND_SIZE, STR_CONFIG_SETTING_DEMAND_SIZE_HELPTEXT, STR_CONFIG_SETTING_PERCENTAGE, nullptr, nullptr, SLV_183, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, linkgraph.short_path_saturation, SLE_UINT8, SF_NONE, 80,       0, 250, 5, STR_CONFIG_SETTING_SHORT_PATH_SATURATION, STR_CONFIG_SETTING_SHORT_PATH_SATURATION_HELPTEXT, STR_CONFIG_SETTING_PERCENTAGE, nullptr, nullptr, SLV_183, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, linkgraph.aircraft_link_scale, SLE_UINT16, SF_NONE, 100,       100, 1000, 50, STR_CONFIG_SETTING_AIRCRAFT_PATH_COST, STR_CONFIG_SETTING_AIRCRAFT_PATH_COST_HELPTEXT, STR_CONFIG_SETTING_PERCENTAGE, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_LINKGRAPH_AIRCRAFT),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, economy.old_town_cargo_factor, SLE_INT8, SF_NONE, 0,       -16, +8, 1, STR_CONFIG_SETTING_TOWN_CARGO_FACTOR, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_JUST_INT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_TOWN_CARGO_ADJ, 1, 1),        SC_ADVANCED, nullptr, false, "town_cargo_adj.economy.town_cargo_factor"),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_JOKERPP), "economy.old_town_cargo_factor", nullptr),
SDT_VAR(GameSettings, economy.town_cargo_scale_factor, SLE_INT16, SF_DECIMAL1 | SF_DEC1SCALE, 0,       -160, +80, 1, STR_CONFIG_SETTING_TOWN_CARGO_FACTOR, STR_CONFIG_SETTING_TOWN_CARGO_FACTOR_HELPTEXT, STR_DECIMAL1_WITH_SCALE, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "town_cargo_adj.economy.town_cargo_scale_factor"),
SDT_VAR(GameSettings, economy.industry_cargo_scale_factor, SLE_INT16, SF_DECIMAL1 | SF_DEC1SCALE, 0,       -50, +50, 1, STR_CONFIG_SETTING_INDUSTRY_CARGO_FACTOR, STR_CONFIG_SETTING_INDUSTRY_CARGO_FACTOR_HELPTEXT, STR_DECIMAL1_WITH_SCALE, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "industry_cargo_adj.economy.industry_cargo_scale_factor"),
SDT_VAR(GameSettings, vehicle.train_acceleration_model, SLE_UINT8, SF_GUI_DROPDOWN, 1,       0, 1, 1, STR_CONFIG_SETTING_TRAIN_ACCELERATION_MODEL, STR_CONFIG_SETTING_TRAIN_ACCELERATION_MODEL_HELPTEXT, STR_CONFIG_SETTING_ORIGINAL, nullptr, TrainAccelerationModelChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_ENUM(GameSettings, vehicle.train_braking_model, SLE_UINT8, SF_NONE, TBM_ORIGINAL,                              STR_CONFIG_SETTING_TRAIN_BRAKING_MODEL, STR_CONFIG_SETTING_TRAIN_BRAKING_MODEL_HELPTEXT,          CheckTrainBrakingModelChange, TrainBrakingModelChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "realistic_braking.vehicle.train_braking_model", _train_braking_model),
SDT_ENUM(GameSettings, vehicle.realistic_braking_aspect_limited, SLE_UINT8, SF_NONE, TRBALM_OFF,                              STR_CONFIG_SETTING_REALISTIC_BRAKING_ASPECT_LIMITED, STR_CONFIG_SETTING_REALISTIC_BRAKING_ASPECT_LIMITED_HELPTEXT,          nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "realistic_braking.vehicle.realistic_braking_aspect_limited", _realistic_braking_aspect_limited),
SDT_VAR(GameSettings, vehicle.roadveh_acceleration_model, SLE_UINT8, SF_GUI_DROPDOWN, 1,       0, 1, 1, STR_CONFIG_SETTING_ROAD_VEHICLE_ACCELERATION_MODEL, STR_CONFIG_SETTING_ROAD_VEHICLE_ACCELERATION_MODEL_HELPTEXT, STR_CONFIG_SETTING_ORIGINAL, nullptr, RoadVehAccelerationModelChanged, SLV_139, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, vehicle.train_slope_steepness, SLE_UINT8, SF_NONE, 3,       0, 10, 1, STR_CONFIG_SETTING_TRAIN_SLOPE_STEEPNESS, STR_CONFIG_SETTING_TRAIN_SLOPE_STEEPNESS_HELPTEXT, STR_CONFIG_SETTING_PERCENTAGE, nullptr, TrainSlopeSteepnessChanged, SLV_133, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, vehicle.roadveh_slope_steepness, SLE_UINT8, SF_NONE, 7,       0, 10, 1, STR_CONFIG_SETTING_ROAD_VEHICLE_SLOPE_STEEPNESS, STR_CONFIG_SETTING_ROAD_VEHICLE_SLOPE_STEEPNESS_HELPTEXT, STR_CONFIG_SETTING_PERCENTAGE, nullptr, RoadVehSlopeSteepnessChanged, SLV_139, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, vehicle.through_load_speed_limit, SLE_UINT16, SF_GUI_VELOCITY, 15,       5, 500, 5, STR_CONFIG_SETTING_THROUGH_LOAD_SPEED_LIMIT, STR_CONFIG_SETTING_THROUGH_LOAD_SPEED_LIMIT_HELPTEXT, STR_CONFIG_SETTING_THROUGH_LOAD_SPEED_LIMIT_VAL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "vehicle.through_load_speed_limit"),
SDT_BOOL(GameSettings, pf.forbid_90_deg,        SF_NONE, false,                              STR_CONFIG_SETTING_FORBID_90_DEG, STR_CONFIG_SETTING_FORBID_90_DEG_HELPTEXT, STR_NULL, nullptr, InvalidateShipPathCache, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_JOKERPP), "pf.back_of_one_way_pbs_waiting_point", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP, SL_CHILLPP_232), "pf.back_of_one_way_pbs_waiting_point", nullptr),
SDT_BOOL(GameSettings, pf.back_of_one_way_pbs_waiting_point,        SF_NONE, true,                              STR_CONFIG_SETTING_BACK_ONE_WAY_PBS_SAFE_WAITING, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "pf.back_of_one_way_pbs_waiting_point"),
SDT_VAR(GameSettings, vehicle.max_train_length, SLE_UINT8, SF_NONE, 7,       1, 64, 1, STR_CONFIG_SETTING_TRAIN_LENGTH, STR_CONFIG_SETTING_TRAIN_LENGTH_HELPTEXT, STR_CONFIG_SETTING_TILE_LENGTH, nullptr, nullptr, SLV_159, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_NULL(1, SL_MIN_VERSION, SLV_159, SlXvFeatureTest()),
SDT_VAR(GameSettings, vehicle.smoke_amount, SLE_UINT8, SF_GUI_DROPDOWN, 1,       0, 2, 0, STR_CONFIG_SETTING_SMOKE_AMOUNT, STR_CONFIG_SETTING_SMOKE_AMOUNT_HELPTEXT, STR_CONFIG_SETTING_NONE, nullptr, nullptr, SLV_145, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_NULL(1, SL_MIN_VERSION, SLV_159, SlXvFeatureTest()),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP, SL_CHILLPP_232)),
SDT_BOOL(GameSettings, pf.roadveh_queue,        SF_NONE, true,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.reroute_rv_on_layout_change, SLE_UINT8, SF_GUI_DROPDOWN, 1,       0, 2, 1, STR_CONFIG_SETTING_REROUTE_RV_ON_LAYOUT_CHANGE, STR_CONFIG_SETTING_REROUTE_RV_ON_LAYOUT_CHANGE_HELPTEXT, STR_CONFIG_SETTING_REROUTE_RV_ON_LAYOUT_CHANGE_NO, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "pf.reroute_rv_on_layout_change"),
SDT_BOOL(GameSettings, pf.new_pathfinding_all,        SF_NONE, false,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SLV_87, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_BOOL(GameSettings, pf.yapf.ship_use_yapf,        SF_NONE, false,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_28, SLV_87, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_BOOL(GameSettings, pf.yapf.road_use_yapf,        SF_NONE, true,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_28, SLV_87, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_BOOL(GameSettings, pf.yapf.rail_use_yapf,        SF_NONE, true,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_28, SLV_87, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.pathfinder_for_trains, SLE_UINT8, SF_GUI_DROPDOWN, 2,       1, 2, 1, STR_CONFIG_SETTING_PATHFINDER_FOR_TRAINS, STR_CONFIG_SETTING_PATHFINDER_FOR_TRAINS_HELPTEXT, STR_CONFIG_SETTING_PATHFINDER_NPF, nullptr, nullptr, SLV_87, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.pathfinder_for_roadvehs, SLE_UINT8, SF_GUI_DROPDOWN, 2,       1, 2, 1, STR_CONFIG_SETTING_PATHFINDER_FOR_ROAD_VEHICLES, STR_CONFIG_SETTING_PATHFINDER_FOR_ROAD_VEHICLES_HELPTEXT, STR_CONFIG_SETTING_PATHFINDER_NPF, nullptr, nullptr, SLV_87, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.pathfinder_for_ships, SLE_UINT8, SF_GUI_DROPDOWN, 2,       1, 2, 1, STR_CONFIG_SETTING_PATHFINDER_FOR_SHIPS, STR_CONFIG_SETTING_PATHFINDER_FOR_SHIPS_HELPTEXT, STR_CONFIG_SETTING_PATHFINDER_NPF, nullptr, InvalidateShipPathCache, SLV_87, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_BOOL(GameSettings, vehicle.never_expire_vehicles,        SF_NO_NETWORK, false,                              STR_CONFIG_SETTING_NEVER_EXPIRE_VEHICLES, STR_CONFIG_SETTING_NEVER_EXPIRE_VEHICLES_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, vehicle.no_expire_vehicles_after, SLE_INT32, SF_NO_NETWORK | SF_GUI_0_IS_SPECIAL, 0,       MIN_YEAR, MAX_YEAR, 1, STR_CONFIG_SETTING_NO_EXPIRE_VEHICLES_AFTER, STR_CONFIG_SETTING_NO_EXPIRE_VEHICLES_AFTER_HELPTEXT, STR_CONFIG_SETTING_NO_EXPIRE_VEHICLES_AFTER_VALUE, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "vehicle.no_expire_vehicles_after"),
SDT_VAR(GameSettings, vehicle.no_introduce_vehicles_after, SLE_INT32, SF_NO_NETWORK | SF_GUI_0_IS_SPECIAL, 0,       MIN_YEAR, MAX_YEAR, 1, STR_CONFIG_SETTING_NO_INTRODUCE_VEHICLES_AFTER, STR_CONFIG_SETTING_NO_INTRODUCE_VEHICLES_AFTER_HELPTEXT, STR_CONFIG_SETTING_NO_INTRODUCE_VEHICLES_AFTER_VALUE, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "vehicle.no_introduce_vehicles_after"),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP)),
SDT_VAR(GameSettings, vehicle.max_trains, SLE_UINT16, SF_NONE, 500,       0, 10000, 0, STR_CONFIG_SETTING_MAX_TRAINS, STR_CONFIG_SETTING_MAX_TRAINS_HELPTEXT, STR_JUST_COMMA, nullptr, MaxVehiclesChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_VAR(GameSettings, vehicle.max_roadveh, SLE_UINT16, SF_NONE, 500,       0, 10000, 0, STR_CONFIG_SETTING_MAX_ROAD_VEHICLES, STR_CONFIG_SETTING_MAX_ROAD_VEHICLES_HELPTEXT, STR_JUST_COMMA, nullptr, MaxVehiclesChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_VAR(GameSettings, vehicle.max_aircraft, SLE_UINT16, SF_NONE, 200,       0, 10000, 0, STR_CONFIG_SETTING_MAX_AIRCRAFT, STR_CONFIG_SETTING_MAX_AIRCRAFT_HELPTEXT, STR_JUST_COMMA, nullptr, MaxVehiclesChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_VAR(GameSettings, vehicle.max_ships, SLE_UINT16, SF_NONE, 300,       0, 10000, 0, STR_CONFIG_SETTING_MAX_SHIPS, STR_CONFIG_SETTING_MAX_SHIPS_HELPTEXT, STR_JUST_COMMA, nullptr, MaxVehiclesChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTG_BOOL("vehicle.servint_ispercent",                     SF_NO_NETWORK, _old_vds.servint_ispercent, false,                        STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SLV_120, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTG_VAR("vehicle.servint_trains",              SLE_UINT16, SF_GUI_0_IS_SPECIAL, _old_vds.servint_trains, 150, 5, 800, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SLV_120, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTG_VAR("vehicle.servint_roadveh",              SLE_UINT16, SF_GUI_0_IS_SPECIAL, _old_vds.servint_roadveh, 150, 5, 800, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SLV_120, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTG_VAR("vehicle.servint_ships",              SLE_UINT16, SF_GUI_0_IS_SPECIAL, _old_vds.servint_ships, 360, 5, 800, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SLV_120, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTG_VAR("vehicle.servint_aircraft",              SLE_UINT16, SF_GUI_0_IS_SPECIAL, _old_vds.servint_aircraft, 150, 5, 800, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SLV_120, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_BOOL(GameSettings, order.no_servicing_if_no_breakdowns,        SF_NONE, true,                              STR_CONFIG_SETTING_NOSERVICE, STR_CONFIG_SETTING_NOSERVICE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_BOOL(GameSettings, vehicle.wagon_speed_limits,        SF_NO_NETWORK, true,                              STR_CONFIG_SETTING_WAGONSPEEDLIMITS, STR_CONFIG_SETTING_WAGONSPEEDLIMITS_HELPTEXT, STR_NULL, nullptr, UpdateConsists, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_JOKERPP, SL_JOKER_1_25), "vehicle.slow_road_vehicles_in_curves", nullptr),
SDT_BOOL(GameSettings, vehicle.slow_road_vehicles_in_curves,        SF_NONE, true,                              STR_CONFIG_SETTING_SLOW_ROAD_VEHICLES_IN_CURVES, STR_CONFIG_SETTING_SLOW_ROAD_VEHICLES_IN_CURVES_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, "slow_road_vehicles_in_curves.vehicle.slow_road_vehicles_in_curves"),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_JOKERPP), "vehicle.train_speed_adaptation", nullptr),
SDT_BOOL(GameSettings, vehicle.train_speed_adaptation,        SF_NONE, false,                              STR_CONFIG_SETTING_TRAIN_SPEED_ADAPTATION, STR_CONFIG_SETTING_TRAIN_SPEED_ADAPTATION_HELPTEXT, STR_NULL, nullptr, TrainSpeedAdaptationChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "train_speed_adaptation.vehicle.train_speed_adaptation"),
SDT_BOOL(GameSettings, vehicle.disable_elrails,        SF_NO_NETWORK, false,                              STR_CONFIG_SETTING_DISABLE_ELRAILS, STR_CONFIG_SETTING_DISABLE_ELRAILS_HELPTEXT, STR_NULL, nullptr, SettingsDisableElrail, SLV_38, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, vehicle.freight_trains, SLE_UINT8, SF_NO_NETWORK, 1,       1, 255, 1, STR_CONFIG_SETTING_FREIGHT_TRAINS, STR_CONFIG_SETTING_FREIGHT_TRAINS_HELPTEXT, STR_JUST_COMMA, nullptr, UpdateConsists, SLV_39, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP)),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP, SL_CHILLPP_232)),
SDT_NULL(1, SLV_67, SLV_159, SlXvFeatureTest(XSLFTO_OR, XSLFI_CHILLPP, SL_CHILLPP_232)),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP)),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP), "order.old_timetable_separation", nullptr),
SDT_VAR(GameSettings, vehicle.plane_speed, SLE_UINT8, SF_NO_NETWORK, 4,       1, 4, 0, STR_CONFIG_SETTING_PLANE_SPEED, STR_CONFIG_SETTING_PLANE_SPEED_HELPTEXT, STR_CONFIG_SETTING_PLANE_SPEED_VALUE, nullptr, nullptr, SLV_90, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, vehicle.plane_taxi_speed, SLE_UINT8, SF_NONE, 4,       1, 8, 0, STR_CONFIG_SETTING_PLANE_TAXI_SPEED, STR_CONFIG_SETTING_PLANE_TAXI_SPEED_HELPTEXT, STR_CONFIG_SETTING_PLANE_TAXI_SPEED_VALUE, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_PLANE_TAXI_SPEED),        SC_ADVANCED, nullptr, false, nullptr),
SDT_BOOL(GameSettings, vehicle.dynamic_engines,        SF_NO_NETWORK, true,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, CheckDynamicEngines, nullptr, SLV_95, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, vehicle.plane_crashes, SLE_UINT8, SF_GUI_DROPDOWN, 2,       0, 2, 1, STR_CONFIG_SETTING_PLANE_CRASHES, STR_CONFIG_SETTING_PLANE_CRASHES_HELPTEXT, STR_CONFIG_SETTING_PLANE_CRASHES_NONE, nullptr, nullptr, SLV_138, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP), "vehicle.improved_breakdowns", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP, SL_CHILLPP_232), "vehicle.improved_breakdowns", nullptr),
SDT_BOOL(GameSettings, vehicle.improved_breakdowns,        SF_NONE, false,                              STR_CONFIG_SETTING_IMPROVED_BREAKDOWNS, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, ImprovedBreakdownsSettingChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "improved_breakdowns.vehicle.improved_breakdowns"),
SDT_BOOL(GameSettings, vehicle.ship_collision_avoidance,        SF_NONE, true,                              STR_CONFIG_SETTING_SHIP_COLLISION_AVOIDANCE, STR_CONFIG_SETTING_SHIP_COLLISION_AVOIDANCE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, "ship_collision_avoidance.vehicle.ship_collision_avoidance"),
SDT_BOOL(GameSettings, vehicle.no_train_crash_other_company,        SF_NONE, false,                              STR_CONFIG_SETTING_NO_TRAIN_CRASH_OTHER_COMPANY, STR_CONFIG_SETTING_NO_TRAIN_CRASH_OTHER_COMPANY_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_INFRA_SHARING),        SC_ADVANCED, nullptr, false, "infra_sharing.vehicle.no_train_crash_other_company"),
SDT_BOOL(GameSettings, vehicle.flip_direction_all_trains,        SF_NONE, false,                              STR_CONFIG_SETTING_FLIP_DIRECTION_ALL_TRAINS, STR_CONFIG_SETTING_FLIP_DIRECTION_ALL_TRAINS_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "flip_direction_all_trains.vehicle.flip_direction_all_trains"),
SDT_BOOL(GameSettings, vehicle.roadveh_articulated_overtaking,        SF_NONE, true,                              STR_CONFIG_SETTING_ROADVEH_ARTICULATED_OVERTAKING, STR_CONFIG_SETTING_ROADVEH_ARTICULATED_OVERTAKING_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, "roadveh_articulated_overtaking.vehicle.roadveh_articulated_overtaking"),
SDT_BOOL(GameSettings, vehicle.roadveh_cant_quantum_tunnel,        SF_NONE, false,                              STR_CONFIG_SETTING_ROADVEH_CANT_QUANTUM_TUNNEL, STR_CONFIG_SETTING_ROADVEH_CANT_QUANTUM_TUNNEL_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, "roadveh_cant_quantum_tunnel.vehicle.roadveh_cant_quantum_tunnel"),
SDT_BOOL(GameSettings, vehicle.drive_through_train_depot,        SF_NONE, false,                              STR_CONFIG_SETTING_DRIVE_THROUGH_TRAIN_DEPOT, STR_CONFIG_SETTING_DRIVE_THROUGH_TRAIN_DEPOT_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "drive_through_train_depot.vehicle.drive_through_train_depot"),
SDT_NULL(1, SL_MIN_VERSION, SLV_159, SlXvFeatureTest()),
SDTC_BOOL(              gui.sg_full_load_any,        SF_NONE, true,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_22, SLV_93, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_BOOL(GameSettings, order.improved_load,        SF_NO_NETWORK, true,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_BOOL(GameSettings, order.selectgoods,        SF_NONE, true,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_NULL(2, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP)),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_JOKERPP)),
SDT_NULL(4, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_JOKERPP, SL_JOKER_1_24)),
SDTC_BOOL(              gui.sg_new_nonstop,        SF_NONE, false,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_22, SLV_93, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_NULL(1, SL_MIN_VERSION, SLV_159, SlXvFeatureTest()),
SDT_VAR(GameSettings, station.station_spread, SLE_UINT8, SF_NONE, 12,       4, 64, 0, STR_CONFIG_SETTING_STATION_SPREAD, STR_CONFIG_SETTING_STATION_SPREAD_HELPTEXT, STR_CONFIG_SETTING_TILE_LENGTH, nullptr, StationSpreadChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_BOOL(GameSettings, order.serviceathelipad,        SF_NONE, true,                              STR_CONFIG_SETTING_SERVICEATHELIPAD, STR_CONFIG_SETTING_SERVICEATHELIPAD_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_BOOL(GameSettings, order.nonstop_only,        SF_NONE, false,                              STR_CONFIG_SETTING_NONSTOP_ORDER_ONLY, STR_CONFIG_SETTING_NONSTOP_ORDER_ONLY_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "nonstop_only.order.nonstop_only"),
SDT_BOOL(GameSettings, station.modified_catchment,        SF_NONE, true,                              STR_CONFIG_SETTING_CATCHMENT, STR_CONFIG_SETTING_CATCHMENT_HELPTEXT, STR_NULL, nullptr, StationCatchmentChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, station.catchment_increase, SLE_UINT8, SF_NONE, 0,       0, 5, 0, STR_CONFIG_SETTING_CATCHMENT_INCREASE, STR_CONFIG_SETTING_CATCHMENT_INCREASE_HELPTEXT, STR_JUST_COMMA, nullptr, StationCatchmentChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_STATION_CATCHMENT_INC),        SC_ADVANCED, nullptr, false, "station_catchment_inc.station.catchment_increase"),
SDT_BOOL(GameSettings, station.cargo_class_rating_wait_time,        SF_NONE, false,                              STR_CONFIG_SETTING_STATION_RATING_CARGO_CLASS_WAIT_TIME, STR_CONFIG_SETTING_STATION_RATING_CARGO_CLASS_WAIT_TIME_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "station_rating.station.cargo_class_rating_wait_time"),
SDT_BOOL(GameSettings, station.station_size_rating_cargo_amount,        SF_NONE, false,                              STR_CONFIG_SETTING_STATION_RATING_SIZE_CARGO_AMOUNT, STR_CONFIG_SETTING_STATION_RATING_SIZE_CARGO_AMOUNT_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "station_rating.station.station_size_rating_cargo_amount"),
SDT_BOOL(GameSettings, station.serve_neutral_industries,        SF_NONE, true,                              STR_CONFIG_SETTING_SERVE_NEUTRAL_INDUSTRIES, STR_CONFIG_SETTING_SERVE_NEUTRAL_INDUSTRIES_HELPTEXT, STR_NULL, nullptr, StationCatchmentChanged, SLV_SERVE_NEUTRAL_INDUSTRIES, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_ENUM(GameSettings, station.station_delivery_mode, SLE_UINT8, SF_NONE, SD_NEAREST_FIRST,                              STR_CONFIG_SETTING_CARGO_DELIVERY_MODE, STR_CONFIG_SETTING_CARGO_DELIVERY_MODE_HELPTEXT,          nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "station.station_delivery_mode", _station_delivery_mode),
SDT_BOOL(GameSettings, order.gradual_loading,        SF_NO_NETWORK, true,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_40, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_BOOL(GameSettings, construction.road_stop_on_town_road,        SF_NONE, true,                              STR_CONFIG_SETTING_STOP_ON_TOWN_ROAD, STR_CONFIG_SETTING_STOP_ON_TOWN_ROAD_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_47, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_BOOL(GameSettings, construction.road_stop_on_competitor_road,        SF_NONE, true,                              STR_CONFIG_SETTING_STOP_ON_COMPETITOR_ROAD, STR_CONFIG_SETTING_STOP_ON_COMPETITOR_ROAD_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_114, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_BOOL(GameSettings, construction.road_custom_bridge_heads,        SF_NONE, true,                              STR_CONFIG_SETTING_ENABLE_ROAD_CUSTOM_BRIDGE_HEADS, STR_CONFIG_SETTING_ENABLE_ROAD_CUSTOM_BRIDGE_HEADS_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, "custom_bridge_heads.construction.road_custom_bridge_heads"),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_JOKERPP), "construction.road_custom_bridge_heads", nullptr),
SDT_BOOL(GameSettings, construction.rail_custom_bridge_heads,        SF_NONE, true,                              STR_CONFIG_SETTING_ENABLE_RAIL_CUSTOM_BRIDGE_HEADS, STR_CONFIG_SETTING_ENABLE_RAIL_CUSTOM_BRIDGE_HEADS_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, "custom_bridge_heads.construction.rail_custom_bridge_heads"),
SDT_BOOL(GameSettings, construction.allow_grf_objects_under_bridges,        SF_NONE, false,                              STR_CONFIG_SETTING_ALLOW_GRF_OBJECTS_UNDER_BRIDGES, STR_CONFIG_SETTING_ALLOW_GRF_OBJECTS_UNDER_BRIDGES_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "allow_grf_objects_under_bridges.construction.allow_grf_objects_under_bridges"),
SDT_BOOL(GameSettings, construction.allow_stations_under_bridges,        SF_NONE, false,                              STR_CONFIG_SETTING_ALLOW_GRF_STATIONS_UNDER_BRIDGES, STR_CONFIG_SETTING_ALLOW_GRF_STATIONS_UNDER_BRIDGES_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "allow_stations_under_bridges.construction.allow_stations_under_bridges"),
SDT_BOOL(GameSettings, construction.allow_road_stops_under_bridges,        SF_NONE, true,                              STR_CONFIG_SETTING_ALLOW_ROAD_STATIONS_UNDER_BRIDGES, STR_CONFIG_SETTING_ALLOW_ROAD_STATIONS_UNDER_BRIDGES_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, AllowRoadStopsUnderBridgesSettingGUI, false, "allow_stations_under_bridges.construction.allow_road_stops_under_bridges"),
SDT_BOOL(GameSettings, construction.allow_docks_under_bridges,        SF_NONE, false,                              STR_CONFIG_SETTING_ALLOW_DOCKS_UNDER_BRIDGES, STR_CONFIG_SETTING_ALLOW_DOCKS_UNDER_BRIDGES_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "allow_stations_under_bridges.construction.allow_docks_under_bridges"),
SDT_VAR(GameSettings, construction.purchase_land_permitted, SLE_UINT8, SF_GUI_DROPDOWN, 1,       0, 2, 1, STR_CONFIG_SETTING_PURCHASE_LAND_PERMITTED, STR_CONFIG_SETTING_PURCHASE_LAND_PERMITTED_HELPTEXT, STR_PURCHASE_LAND_PERMITTED_NO, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "purchase_land_permitted.construction.purchase_land_permitted"),
SDT_BOOL(GameSettings, construction.build_object_area_permitted,        SF_NONE, true,                              STR_CONFIG_SETTING_BUILD_OBJECT_PERMITTED, STR_CONFIG_SETTING_BUILD_OBJECT_PERMITTED_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "build_object_area_permitted.construction.build_object_area_permitted"),
SDT_VAR(GameSettings, construction.no_expire_objects_after, SLE_INT32, SF_GUI_0_IS_SPECIAL, 0,       MIN_YEAR, MAX_YEAR, 1, STR_CONFIG_SETTING_NO_EXPIRE_OBJECTS_AFTER, STR_CONFIG_SETTING_NO_EXPIRE_OBJECTS_AFTER_HELPTEXT, STR_CONFIG_SETTING_NO_EXPIRE_OBJECTS_AFTER_VALUE, nullptr, [](auto) { InvalidateWindowClassesData(WC_BUILD_OBJECT, 0); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "construction.no_expire_objects_after"),
SDT_BOOL(GameSettings, construction.ignore_object_intro_dates,        SF_NONE, false,                              STR_CONFIG_SETTING_IGNORE_OBJECT_INTRO_DATES, STR_CONFIG_SETTING_IGNORE_OBJECT_INTRO_DATES_HELPTEXT, STR_NULL, nullptr, [](auto) { InvalidateWindowClassesData(WC_BUILD_OBJECT, 0); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "construction.ignore_object_intro_dates"),
SDT_BOOL(GameSettings, station.adjacent_stations,        SF_NONE, true,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_62, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_BOOL(GameSettings, economy.station_noise_level,        SF_NO_NETWORK, false,                              STR_CONFIG_SETTING_NOISE_LEVEL, STR_CONFIG_SETTING_NOISE_LEVEL_HELPTEXT, STR_NULL, nullptr, [](auto new_value) { InvalidateWindowClassesData(WC_TOWN_VIEW, new_value); }, SLV_96, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_BOOL(GameSettings, station.distant_join_stations,        SF_NONE, true,                              STR_CONFIG_SETTING_DISTANT_JOIN_STATIONS, STR_CONFIG_SETTING_DISTANT_JOIN_STATIONS_HELPTEXT, STR_NULL, nullptr, [](auto) { DeleteWindowById(WC_SELECT_STATION, 0); }, SLV_106, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_NULL(6, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP)),
SDT_BOOL(GameSettings, economy.inflation,        SF_NO_NETWORK, false,                              STR_CONFIG_SETTING_INFLATION, STR_CONFIG_SETTING_INFLATION_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_BOOL(GameSettings, economy.inflation_fixed_dates,        SF_NONE, true,                              STR_CONFIG_SETTING_INFLATION_FIXED_DATES, STR_CONFIG_SETTING_INFLATION_FIXED_DATES_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "inflation_fixed_dates.economy.inflation_fixed_dates"),
SDT_VAR(GameSettings, economy.day_length_factor, SLE_UINT8, SF_NONE, 1,       1, 125, 0, STR_CONFIG_SETTING_DAY_LENGTH_FACTOR, STR_CONFIG_SETTING_DAY_LENGTH_FACTOR_HELPTEXT, STR_JUST_COMMA, nullptr, DayLengthChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_VARIABLE_DAY_LENGTH),        SC_BASIC, nullptr, false, "variable_day_length.economy.day_length_factor"),
SDT_VAR(GameSettings, construction.raw_industry_construction, SLE_UINT8, SF_GUI_DROPDOWN, 0,       0, 2, 0, STR_CONFIG_SETTING_RAW_INDUSTRY_CONSTRUCTION_METHOD, STR_CONFIG_SETTING_RAW_INDUSTRY_CONSTRUCTION_METHOD_HELPTEXT, STR_CONFIG_SETTING_RAW_INDUSTRY_CONSTRUCTION_METHOD_NONE, nullptr, [](auto) { InvalidateWindowData(WC_BUILD_INDUSTRY, 0); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_VAR(GameSettings, construction.industry_platform, SLE_UINT8, SF_NONE, 1,       0, 4, 0, STR_CONFIG_SETTING_INDUSTRY_PLATFORM, STR_CONFIG_SETTING_INDUSTRY_PLATFORM_HELPTEXT, STR_CONFIG_SETTING_TILE_LENGTH, nullptr, nullptr, SLV_148, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_BOOL(GameSettings, economy.multiple_industry_per_town,        SF_NONE, false,                              STR_CONFIG_SETTING_MULTIPINDTOWN, STR_CONFIG_SETTING_MULTIPINDTOWN_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP, 4)),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP, SL_CHILLPP_232)),
SDT_NULL(1, SL_MIN_VERSION, SLV_141, SlXvFeatureTest()),
SDT_NULL(6, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP)),
SDT_BOOL(GameSettings, economy.bribe,        SF_NONE, true,                              STR_CONFIG_SETTING_BRIBE, STR_CONFIG_SETTING_BRIBE_HELPTEXT, STR_NULL, nullptr, [](auto) { SetWindowClassesDirty(WC_TOWN_AUTHORITY); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_BOOL(GameSettings, economy.exclusive_rights,        SF_NONE, true,                              STR_CONFIG_SETTING_ALLOW_EXCLUSIVE, STR_CONFIG_SETTING_ALLOW_EXCLUSIVE_HELPTEXT, STR_NULL, nullptr, [](auto) { SetWindowClassesDirty(WC_TOWN_AUTHORITY); }, SLV_79, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_BOOL(GameSettings, economy.fund_buildings,        SF_NONE, true,                              STR_CONFIG_SETTING_ALLOW_FUND_BUILDINGS, STR_CONFIG_SETTING_ALLOW_FUND_BUILDINGS_HELPTEXT, STR_NULL, nullptr, [](auto) { SetWindowClassesDirty(WC_TOWN_AUTHORITY); }, SLV_165, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_BOOL(GameSettings, economy.fund_roads,        SF_NONE, true,                              STR_CONFIG_SETTING_ALLOW_FUND_ROAD, STR_CONFIG_SETTING_ALLOW_FUND_ROAD_HELPTEXT, STR_NULL, nullptr, [](auto) { SetWindowClassesDirty(WC_TOWN_AUTHORITY); }, SLV_160, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_BOOL(GameSettings, economy.give_money,        SF_NONE, true,                              STR_CONFIG_SETTING_ALLOW_GIVE_MONEY, STR_CONFIG_SETTING_ALLOW_GIVE_MONEY_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_79, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_JOKERPP)),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP)),
SDT_VAR(GameSettings, game_creation.snow_line_height, SLE_UINT8, SF_NO_NETWORK, DEF_SNOWLINE_HEIGHT,       MIN_SNOWLINE_HEIGHT, MAX_SNOWLINE_HEIGHT, 1, STR_CONFIG_SETTING_SNOWLINE_HEIGHT, STR_CONFIG_SETTING_SNOWLINE_HEIGHT_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_VAR(GameSettings, game_creation.rainforest_line_height, SLE_UINT8, SF_NEWGAME_ONLY | SF_SCENEDIT_TOO, DEF_RAINFOREST_HEIGHT,       MIN_RAINFOREST_HEIGHT, MAX_RAINFOREST_HEIGHT, 1, STR_CONFIG_SETTING_RAINFORESTLINE_HEIGHT, STR_CONFIG_SETTING_RAINFORESTLINE_HEIGHT_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, "rainforest_line_height.game_creation.rainforest_line_height"),
SDT_VAR(GameSettings, game_creation.climate_threshold_mode, SLE_UINT8, SF_GUI_DROPDOWN | SF_NEWGAME_ONLY, 0,       0, 1, 0, STR_CONFIG_SETTING_CLIMATE_THRESHOLD_MODE, STR_CONFIG_SETTING_CLIMATE_THRESHOLD_MODE_HELPTEXT, STR_CONFIG_SETTING_CLIMATE_THRESHOLD_COVERAGE, nullptr, ClimateThresholdModeChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "climate.game_creation.climate_threshold_mode"),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP, SL_CHILLPP_232)),
SDT_NULL(2, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP)),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_JOKERPP)),
SDT_VAR(GameSettings, game_creation.snow_coverage, SLE_UINT8, SF_NEWGAME_ONLY, DEF_SNOW_COVERAGE,       0, 100, 10, STR_CONFIG_SETTING_SNOW_COVERAGE, STR_CONFIG_SETTING_SNOW_COVERAGE_HELPTEXT, STR_CONFIG_SETTING_SNOW_COVERAGE_VALUE, nullptr, nullptr, SLV_MAPGEN_SETTINGS_REVAMP, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_VAR(GameSettings, game_creation.desert_coverage, SLE_UINT8, SF_NEWGAME_ONLY, DEF_DESERT_COVERAGE,       0, 100, 10, STR_CONFIG_SETTING_DESERT_COVERAGE, STR_CONFIG_SETTING_DESERT_COVERAGE_HELPTEXT, STR_CONFIG_SETTING_DESERT_COVERAGE_VALUE, nullptr, nullptr, SLV_MAPGEN_SETTINGS_REVAMP, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_NULL(4, SL_MIN_VERSION, SLV_144, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP, 0, 0)),
SDT_VAR(GameSettings, game_creation.starting_year, SLE_INT32, SF_NONE, DEF_START_YEAR,       MIN_YEAR, MAX_YEAR, 1, STR_CONFIG_SETTING_STARTING_YEAR, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_JUST_INT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_NULL(4, SL_MIN_VERSION, SLV_105, SlXvFeatureTest()),
SDT_VAR(GameSettings, game_creation.ending_year, SLE_INT32, SF_GUI_0_IS_SPECIAL, DEF_END_YEAR,       MIN_YEAR, MAX_YEAR - 1, 1, STR_CONFIG_SETTING_ENDING_YEAR, STR_CONFIG_SETTING_ENDING_YEAR_HELPTEXT, STR_CONFIG_SETTING_ENDING_YEAR_VALUE, nullptr, nullptr, SLV_ENDING_YEAR, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, economy.type, SLE_UINT8, SF_GUI_DROPDOWN, ET_SMOOTH,       ET_BEGIN, ET_END - 1, 0, STR_CONFIG_SETTING_ECONOMY_TYPE, STR_CONFIG_SETTING_ECONOMY_TYPE_HELPTEXT, STR_CONFIG_SETTING_ECONOMY_TYPE_ORIGINAL, nullptr, [](auto) { InvalidateWindowClassesData(WC_INDUSTRY_VIEW); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_BOOL(GameSettings, economy.allow_shares,        SF_NONE, false,                              STR_CONFIG_SETTING_ALLOW_SHARES, STR_CONFIG_SETTING_ALLOW_SHARES_HELPTEXT, STR_NULL, nullptr, InvalidateCompanyWindow, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, economy.min_years_for_shares, SLE_UINT8, SF_NONE, 6,       0, 255, 1, STR_CONFIG_SETTING_MIN_YEARS_FOR_SHARES, STR_CONFIG_SETTING_MIN_YEARS_FOR_SHARES_HELPTEXT, STR_JUST_INT, nullptr, nullptr, SLV_TRADING_AGE, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, economy.feeder_payment_share, SLE_UINT8, SF_NONE, 75,       0, 100, 0, STR_CONFIG_SETTING_FEEDER_PAYMENT_SHARE, STR_CONFIG_SETTING_FEEDER_PAYMENT_SHARE_HELPTEXT, STR_CONFIG_SETTING_PERCENTAGE, nullptr, nullptr, SLV_134, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP), "economy.day_length_factor", nullptr),
SDT_NULL(71, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP)),
SDT_NULL(16, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP)),
SDT_NULL(16, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP)),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP), "vehicle.pay_for_repair", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP), "vehicle.repair_cost", nullptr),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP)),
SDT_NULL(6, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP)),
SDT_NULL(18, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP)),
SDT_NULL(3, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP)),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP)),
SDT_VAR(GameSettings, economy.town_growth_rate, SLE_INT8, SF_GUI_DROPDOWN, 2,       -2, 4, 0, STR_CONFIG_SETTING_TOWN_GROWTH, STR_CONFIG_SETTING_TOWN_GROWTH_HELPTEXT, STR_CONFIG_SETTING_TOWN_GROWTH_EXTREME_SLOW, nullptr, nullptr, SLV_54, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, OrderTownGrowthRate, false, nullptr),
SDT_BOOL(GameSettings, economy.town_zone_calc_mode,        SF_NONE, false,                              STR_CONFIG_SETTING_TOWN_ZONE_CALC_MODE, STR_CONFIG_SETTING_TOWN_ZONE_CALC_MODE_HELPTEXT, STR_NULL, nullptr, InvalidateSettingsWindow, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "town_zone.economy.town_zone_calc_mode"),
SDT_VAR(GameSettings, economy.town_zone_0_mult, SLE_UINT16, SF_NONE, 15,       0, 255, 1, STR_CONFIG_SETTING_TOWN_ZONE_0_MULT, STR_CONFIG_SETTING_TOWN_ZONE_0_MULT_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "town_zone.economy.town_zone_0_mult"),
SDT_VAR(GameSettings, economy.town_zone_1_mult, SLE_UINT16, SF_NONE, 9,       0, 255, 1, STR_CONFIG_SETTING_TOWN_ZONE_1_MULT, STR_CONFIG_SETTING_TOWN_ZONE_1_MULT_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "town_zone.economy.town_zone_1_mult"),
SDT_VAR(GameSettings, economy.town_zone_2_mult, SLE_UINT16, SF_NONE, 0,       0, 255, 1, STR_CONFIG_SETTING_TOWN_ZONE_2_MULT, STR_CONFIG_SETTING_TOWN_ZONE_2_MULT_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "town_zone.economy.town_zone_2_mult"),
SDT_VAR(GameSettings, economy.town_zone_3_mult, SLE_UINT16, SF_NONE, 5,       0, 255, 1, STR_CONFIG_SETTING_TOWN_ZONE_3_MULT, STR_CONFIG_SETTING_TOWN_ZONE_3_MULT_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "town_zone.economy.town_zone_3_mult"),
SDT_VAR(GameSettings, economy.town_zone_4_mult, SLE_UINT16, SF_NONE, 3,       0, 255, 1, STR_CONFIG_SETTING_TOWN_ZONE_4_MULT, STR_CONFIG_SETTING_TOWN_ZONE_4_MULT_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "town_zone.economy.town_zone_4_mult"),
SDT_VAR(GameSettings, economy.city_zone_0_mult, SLE_UINT16, SF_NONE, 15,       0, 255, 1, STR_CONFIG_SETTING_CITY_ZONE_0_MULT, STR_CONFIG_SETTING_CITY_ZONE_0_MULT_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "town_zone.economy.city_zone_0_mult"),
SDT_VAR(GameSettings, economy.city_zone_1_mult, SLE_UINT16, SF_NONE, 9,       0, 255, 1, STR_CONFIG_SETTING_CITY_ZONE_1_MULT, STR_CONFIG_SETTING_CITY_ZONE_1_MULT_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "town_zone.economy.city_zone_1_mult"),
SDT_VAR(GameSettings, economy.city_zone_2_mult, SLE_UINT16, SF_NONE, 0,       0, 255, 1, STR_CONFIG_SETTING_CITY_ZONE_2_MULT, STR_CONFIG_SETTING_CITY_ZONE_2_MULT_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "town_zone.economy.city_zone_2_mult"),
SDT_VAR(GameSettings, economy.city_zone_3_mult, SLE_UINT16, SF_NONE, 5,       0, 255, 1, STR_CONFIG_SETTING_CITY_ZONE_3_MULT, STR_CONFIG_SETTING_CITY_ZONE_3_MULT_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "town_zone.economy.city_zone_3_mult"),
SDT_VAR(GameSettings, economy.city_zone_4_mult, SLE_UINT16, SF_NONE, 3,       0, 255, 1, STR_CONFIG_SETTING_CITY_ZONE_4_MULT, STR_CONFIG_SETTING_CITY_ZONE_4_MULT_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "town_zone.economy.city_zone_4_mult"),
SDT_VAR(GameSettings, economy.town_growth_cargo_transported, SLE_UINT8, SF_NONE, 0,       0, 100, 10, STR_CONFIG_SETTING_TOWN_GROWTH_CARGO_TRANSPORTED, STR_CONFIG_SETTING_TOWN_GROWTH_CARGO_TRANSPORTED_HELPTEXT, STR_CONFIG_SETTING_PERCENTAGE, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "town_growth.economy.town_growth_cargo_transported"),
SDT_VAR(GameSettings, economy.larger_towns, SLE_UINT8, SF_GUI_0_IS_SPECIAL, 4,       0, 255, 1, STR_CONFIG_SETTING_LARGER_TOWNS, STR_CONFIG_SETTING_LARGER_TOWNS_HELPTEXT, STR_CONFIG_SETTING_LARGER_TOWNS_VALUE, nullptr, nullptr, SLV_54, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, economy.initial_city_size, SLE_UINT8, SF_NONE, 2,       1, 10, 1, STR_CONFIG_SETTING_CITY_SIZE_MULTIPLIER, STR_CONFIG_SETTING_CITY_SIZE_MULTIPLIER_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SLV_56, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_NULL(10, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP, SL_CHILLPP_232)),
SDT_BOOL(GameSettings, economy.mod_road_rebuild,        SF_NONE, true,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_77, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP), "construction.maximum_signal_evaluations", nullptr),
SDT_VAR(GameSettings, economy.town_min_distance, SLE_UINT16, SF_NONE, 20,       15, 500, 5, STR_CONFIG_SETTING_TOWN_MIN_DISTANCE, STR_CONFIG_SETTING_TOWN_MIN_DISTANCE_HELPTEXT, STR_JUST_INT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "town_min_distance.economy.town_min_distance"),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_JOKERPP), "economy.town_min_distance", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP), "economy.infrastructure_sharing[0]", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP), "economy.infrastructure_sharing[1]", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP), "economy.infrastructure_sharing[2]", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP), "economy.infrastructure_sharing[3]", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP), "economy.sharing_fee[0]", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP), "economy.sharing_fee[1]", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP), "economy.sharing_fee[2]", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP), "economy.sharing_fee[3]", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP), "economy.sharing_payment_in_debt", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP, SL_CHILLPP_232), "economy.infrastructure_sharing[0]", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP, SL_CHILLPP_232), "economy.infrastructure_sharing[1]", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP, SL_CHILLPP_232), "economy.infrastructure_sharing[2]", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP, SL_CHILLPP_232), "economy.infrastructure_sharing[3]", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP, SL_CHILLPP_232), "economy.sharing_fee[0]", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP, SL_CHILLPP_232), "economy.sharing_fee[1]", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP, SL_CHILLPP_232), "economy.sharing_fee[2]", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP, SL_CHILLPP_232), "economy.sharing_fee[3]", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP, SL_CHILLPP_232), "economy.sharing_payment_in_debt", nullptr),
SDT_VAR(GameSettings, construction.maximum_signal_evaluations, SLE_UINT16, SF_NONE, 256,       64, 4096, 1, STR_CONFIG_SETTING_MAX_SIGNAL_EVALUATIONS, STR_CONFIG_SETTING_MAX_SIGNAL_EVALUATIONS_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_PROG_SIGS),        SC_EXPERT, nullptr, false, "programmable_signals.construction.maximum_signal_evaluations"),
SDT_BOOL(GameSettings, economy.infrastructure_sharing[0],        SF_NONE, false,                              STR_CONFIG_SETTING_SHARING_RAIL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, CheckSharingRail, SharingRailChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_INFRA_SHARING),        SC_ADVANCED, nullptr, false, "infra_sharing.economy.infrastructure_sharing.rail"),
SDT_BOOL(GameSettings, economy.infrastructure_sharing[1],        SF_NONE, false,                              STR_CONFIG_SETTING_SHARING_ROAD, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, CheckSharingRoad, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_INFRA_SHARING),        SC_ADVANCED, nullptr, false, "infra_sharing.economy.infrastructure_sharing.road"),
SDT_BOOL(GameSettings, economy.infrastructure_sharing[2],        SF_NONE, false,                              STR_CONFIG_SETTING_SHARING_WATER, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, CheckSharingWater, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_INFRA_SHARING),        SC_ADVANCED, nullptr, false, "infra_sharing.economy.infrastructure_sharing.water"),
SDT_BOOL(GameSettings, economy.infrastructure_sharing[3],        SF_NONE, false,                              STR_CONFIG_SETTING_SHARING_AIR, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, CheckSharingAir, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_INFRA_SHARING),        SC_ADVANCED, nullptr, false, "infra_sharing.economy.infrastructure_sharing.air"),
SDT_VAR(GameSettings, economy.sharing_fee[0], SLE_UINT, SF_GUI_CURRENCY, 100,       0, 1000000, 10, STR_CONFIG_SETTING_SHARING_FEE_RAIL, STR_CONFIG_SETTING_SHARING_FEE_HELPTEXT, STR_JUST_CURRENCY_LONG, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_INFRA_SHARING),        SC_ADVANCED, nullptr, false, "infra_sharing.economy.sharing_fee.rail"),
SDT_VAR(GameSettings, economy.sharing_fee[1], SLE_UINT, SF_GUI_CURRENCY, 100,       0, 1000000, 10, STR_CONFIG_SETTING_SHARING_FEE_ROAD, STR_CONFIG_SETTING_SHARING_FEE_HELPTEXT, STR_JUST_CURRENCY_LONG, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_INFRA_SHARING),        SC_ADVANCED, nullptr, false, "infra_sharing.economy.sharing_fee.road"),
SDT_VAR(GameSettings, economy.sharing_fee[2], SLE_UINT, SF_GUI_CURRENCY, 100,       0, 1000000, 10, STR_CONFIG_SETTING_SHARING_FEE_WATER, STR_CONFIG_SETTING_SHARING_FEE_HELPTEXT, STR_JUST_CURRENCY_LONG, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_INFRA_SHARING),        SC_ADVANCED, nullptr, false, "infra_sharing.economy.sharing_fee.water"),
SDT_VAR(GameSettings, economy.sharing_fee[3], SLE_UINT, SF_GUI_CURRENCY, 100,       0, 1000000, 10, STR_CONFIG_SETTING_SHARING_FEE_AIR, STR_CONFIG_SETTING_SHARING_FEE_HELPTEXT, STR_JUST_CURRENCY_LONG, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_INFRA_SHARING),        SC_ADVANCED, nullptr, false, "infra_sharing.economy.sharing_fee.air"),
SDT_BOOL(GameSettings, economy.sharing_payment_in_debt,        SF_NONE, false,                              STR_CONFIG_SETTING_SHARING_PAYMENT_IN_DEBT, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_INFRA_SHARING),        SC_ADVANCED, nullptr, false, "infra_sharing.economy.sharing_payment_in_debt"),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_JOKERPP), "economy.day_length_factor", nullptr),
SDT_NULL(1, SL_MIN_VERSION, SLV_106, SlXvFeatureTest()),
SDT_OMANY(GameSettings, script.settings_profile, SLE_UINT8, SF_GUI_DROPDOWN, SP_EASY,             SP_HARD, _settings_profiles,     STR_CONFIG_SETTING_AI_PROFILE, STR_CONFIG_SETTING_AI_PROFILE_HELPTEXT, STR_CONFIG_SETTING_AI_PROFILE_EASY, nullptr, nullptr, SLV_178, SL_MAX_VERSION, SlXvFeatureTest(), nullptr, SC_BASIC, nullptr, false, nullptr),
SDT_BOOL(GameSettings, ai.ai_in_multiplayer,        SF_NONE, true,                              STR_CONFIG_SETTING_AI_IN_MULTIPLAYER, STR_CONFIG_SETTING_AI_IN_MULTIPLAYER_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_BOOL(GameSettings, ai.ai_disable_veh_train,        SF_NONE, false,                              STR_CONFIG_SETTING_AI_BUILDS_TRAINS, STR_CONFIG_SETTING_AI_BUILDS_TRAINS_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_BOOL(GameSettings, ai.ai_disable_veh_roadveh,        SF_NONE, false,                              STR_CONFIG_SETTING_AI_BUILDS_ROAD_VEHICLES, STR_CONFIG_SETTING_AI_BUILDS_ROAD_VEHICLES_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_BOOL(GameSettings, ai.ai_disable_veh_aircraft,        SF_NONE, false,                              STR_CONFIG_SETTING_AI_BUILDS_AIRCRAFT, STR_CONFIG_SETTING_AI_BUILDS_AIRCRAFT_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_BOOL(GameSettings, ai.ai_disable_veh_ship,        SF_NONE, false,                              STR_CONFIG_SETTING_AI_BUILDS_SHIPS, STR_CONFIG_SETTING_AI_BUILDS_SHIPS_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, script.script_max_opcode_till_suspend, SLE_UINT32, SF_NONE, 10000,       500, 250000, 2500, STR_CONFIG_SETTING_SCRIPT_MAX_OPCODES, STR_CONFIG_SETTING_SCRIPT_MAX_OPCODES_HELPTEXT, STR_JUST_COMMA, nullptr, ScriptMaxOpsChange, SLV_107, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, script.script_max_memory_megabytes, SLE_UINT32, SF_NONE, 1024,       8, 8192, 8, STR_CONFIG_SETTING_SCRIPT_MAX_MEMORY, STR_CONFIG_SETTING_SCRIPT_MAX_MEMORY_HELPTEXT, STR_CONFIG_SETTING_SCRIPT_MAX_MEMORY_VALUE, CheckScriptMaxMemoryChange, ScriptMaxMemoryChange, SLV_SCRIPT_MEMLIMIT, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, vehicle.extend_vehicle_life, SLE_UINT8, SF_NONE, 0,       0, 100, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, economy.dist_local_authority, SLE_UINT8, SF_NONE, 20,       5, 60, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_BOOL(GameSettings, pf.reverse_at_signals,        SF_NONE, false,                              STR_CONFIG_SETTING_REVERSE_AT_SIGNALS, STR_CONFIG_SETTING_REVERSE_AT_SIGNALS_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_159, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.wait_oneway_signal, SLE_UINT8, SF_NONE, 15,       2, 255, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.wait_twoway_signal, SLE_UINT8, SF_NONE, 41,       2, 255, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, economy.town_noise_population[0], SLE_UINT16, SF_NONE, 800,       200, 65535, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_96, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, economy.town_noise_population[1], SLE_UINT16, SF_NONE, 2000,       400, 65535, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_96, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, economy.town_noise_population[2], SLE_UINT16, SF_NONE, 4000,       800, 65535, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_96, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_BOOL(GameSettings, economy.infrastructure_maintenance,        SF_NONE, false,                              STR_CONFIG_SETTING_INFRASTRUCTURE_MAINTENANCE, STR_CONFIG_SETTING_INFRASTRUCTURE_MAINTENANCE_HELPTEXT, STR_NULL, nullptr, [](auto) { InvalidateWindowClassesData(WC_COMPANY_INFRASTRUCTURE); }, SLV_166, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP, SL_CHILLPP_232), "economy.infrastructure_maintenance", nullptr),
SDT_NULL(6, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP, SL_CHILLPP_232)),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP), "linkgraph.recalc_interval", LinkGraphDistModeXrefChillPP),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP), "linkgraph.distribution_pax", LinkGraphDistModeXrefChillPP),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP), "linkgraph.distribution_mail", LinkGraphDistModeXrefChillPP),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP)),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP), "linkgraph.distribution_armoured", LinkGraphDistModeXrefChillPP),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP), "linkgraph.distribution_default", LinkGraphDistModeXrefChillPP),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP), "linkgraph.accuracy", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP), "linkgraph.demand_size", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP), "linkgraph.demand_distance", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP), "linkgraph.short_path_saturation", nullptr),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP, SL_CHILLPP_232)),
SDT_VAR(GameSettings, economy.random_road_reconstruction, SLE_UINT16, SF_NONE, 0,       0, 1000, 0, STR_CONFIG_SETTING_RANDOM_ROAD_RECONSTRUCTION, STR_CONFIG_SETTING_RANDOM_ROAD_RECONSTRUCTION_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, "economy.random_road_reconstruction"),
SDT_VAR(GameSettings, pf.wait_for_pbs_path, SLE_UINT8, SF_NONE, 30,       2, 255, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_100, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_BOOL(GameSettings, pf.reserve_paths,        SF_NONE, false,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_100, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.path_backoff_interval, SLE_UINT8, SF_NONE, 20,       1, 255, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_100, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_NULL(3, SL_MIN_VERSION, SLV_REMOVE_OPF, SlXvFeatureTest()),
SDT_VAR(GameSettings, pf.npf.npf_max_search_nodes, SLE_UINT, SF_NONE, 10000,       500, 100000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.npf.npf_rail_firstred_penalty, SLE_UINT, SF_NONE, 10 * NPF_TILE_LENGTH,       0, 100000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.npf.npf_rail_firstred_exit_penalty, SLE_UINT, SF_NONE, 100 * NPF_TILE_LENGTH,       0, 100000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.npf.npf_rail_lastred_penalty, SLE_UINT, SF_NONE, 10 * NPF_TILE_LENGTH,       0, 100000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.npf.npf_rail_station_penalty, SLE_UINT, SF_NONE, 1 * NPF_TILE_LENGTH,       0, 100000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.npf.npf_rail_slope_penalty, SLE_UINT, SF_NONE, 1 * NPF_TILE_LENGTH,       0, 100000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.npf.npf_rail_curve_penalty, SLE_UINT, SF_NONE, 1 * NPF_TILE_LENGTH,       0, 100000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.npf.npf_rail_depot_reverse_penalty, SLE_UINT, SF_NONE, 50 * NPF_TILE_LENGTH,       0, 100000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.npf.npf_rail_pbs_cross_penalty, SLE_UINT, SF_NONE, 3 * NPF_TILE_LENGTH,       0, 100000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_100, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.npf.npf_rail_pbs_signal_back_penalty, SLE_UINT, SF_NONE, 15 * NPF_TILE_LENGTH,       0, 100000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_100, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.npf.npf_buoy_penalty, SLE_UINT, SF_NONE, 2 * NPF_TILE_LENGTH,       0, 100000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.npf.npf_water_curve_penalty, SLE_UINT, SF_NONE, 1 * NPF_TILE_LENGTH,       0, 100000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.npf.npf_road_curve_penalty, SLE_UINT, SF_NONE, 1 * NPF_TILE_LENGTH,       0, 100000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.npf.npf_crossing_penalty, SLE_UINT, SF_NONE, 3 * NPF_TILE_LENGTH,       0, 100000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.npf.npf_road_drive_through_penalty, SLE_UINT, SF_NONE, 8 * NPF_TILE_LENGTH,       0, 100000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_47, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_NULL(4, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP)),
SDT_NULL(4, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP, SL_CHILLPP_232)),
SDT_VAR(GameSettings, pf.npf.npf_road_dt_occupied_penalty, SLE_UINT, SF_NONE, 8 * NPF_TILE_LENGTH,       0, 100000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_130, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.npf.npf_road_bay_occupied_penalty, SLE_UINT, SF_NONE, 15 * NPF_TILE_LENGTH,       0, 100000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_130, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.npf.maximum_go_to_depot_penalty, SLE_UINT, SF_NONE, 20 * NPF_TILE_LENGTH,       0, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_131, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_BOOL(GameSettings, pf.yapf.disable_node_optimization,        SF_NONE, false,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_28, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.max_search_nodes, SLE_UINT, SF_NONE, 10000,       500, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_28, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_BOOL(GameSettings, pf.yapf.rail_firstred_twoway_eol,        SF_NONE, true,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_28, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.rail_firstred_penalty, SLE_UINT, SF_NONE, 10 * YAPF_TILE_LENGTH,       0, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_28, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.rail_firstred_exit_penalty, SLE_UINT, SF_NONE, 100 * YAPF_TILE_LENGTH,       0, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_28, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.rail_lastred_penalty, SLE_UINT, SF_NONE, 10 * YAPF_TILE_LENGTH,       0, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_28, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.rail_lastred_exit_penalty, SLE_UINT, SF_NONE, 100 * YAPF_TILE_LENGTH,       0, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_28, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.rail_station_penalty, SLE_UINT, SF_NONE, 10 * YAPF_TILE_LENGTH,       0, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_28, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.rail_slope_penalty, SLE_UINT, SF_NONE, 2 * YAPF_TILE_LENGTH,       0, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_28, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.rail_curve45_penalty, SLE_UINT, SF_NONE, 1 * YAPF_TILE_LENGTH,       0, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_28, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.rail_curve90_penalty, SLE_UINT, SF_NONE, 6 * YAPF_TILE_LENGTH,       0, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_28, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.rail_depot_reverse_penalty, SLE_UINT, SF_NONE, 50 * YAPF_TILE_LENGTH,       0, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_28, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.rail_crossing_penalty, SLE_UINT, SF_NONE, 3 * YAPF_TILE_LENGTH,       0, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_28, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.rail_look_ahead_max_signals, SLE_UINT, SF_NONE, 10,       1, 100, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, CheckYapfRailSignalPenalties, SLV_28, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.rail_look_ahead_signal_p0, SLE_INT, SF_NONE, 500,       -1000000, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, CheckYapfRailSignalPenalties, SLV_28, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.rail_look_ahead_signal_p1, SLE_INT, SF_NONE, -100,       -1000000, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, CheckYapfRailSignalPenalties, SLV_28, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.rail_look_ahead_signal_p2, SLE_INT, SF_NONE, 5,       -1000000, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, CheckYapfRailSignalPenalties, SLV_28, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.rail_pbs_cross_penalty, SLE_UINT, SF_NONE, 3 * YAPF_TILE_LENGTH,       0, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_100, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.rail_pbs_station_penalty, SLE_UINT, SF_NONE, 8 * YAPF_TILE_LENGTH,       0, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_100, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.rail_pbs_signal_back_penalty, SLE_UINT, SF_NONE, 15 * YAPF_TILE_LENGTH,       0, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_100, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.rail_doubleslip_penalty, SLE_UINT, SF_NONE, 1 * YAPF_TILE_LENGTH,       0, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_100, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.rail_longer_platform_penalty, SLE_UINT, SF_NONE, 8 * YAPF_TILE_LENGTH,       0, 20000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_33, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.rail_longer_platform_per_tile_penalty, SLE_UINT, SF_NONE, 0 * YAPF_TILE_LENGTH,       0, 20000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_33, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.rail_shorter_platform_penalty, SLE_UINT, SF_NONE, 40 * YAPF_TILE_LENGTH,       0, 20000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_33, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.rail_shorter_platform_per_tile_penalty, SLE_UINT, SF_NONE, 0 * YAPF_TILE_LENGTH,       0, 20000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_33, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.road_slope_penalty, SLE_UINT, SF_NONE, 2 * YAPF_TILE_LENGTH,       0, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_33, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.road_curve_penalty, SLE_UINT, SF_NONE, 1 * YAPF_TILE_LENGTH,       0, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_33, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.road_crossing_penalty, SLE_UINT, SF_NONE, 3 * YAPF_TILE_LENGTH,       0, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_33, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_NULL(4, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP)),
SDT_NULL(4, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP, SL_CHILLPP_232)),
SDT_VAR(GameSettings, pf.yapf.road_stop_penalty, SLE_UINT, SF_NONE, 8 * YAPF_TILE_LENGTH,       0, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_47, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.road_stop_occupied_penalty, SLE_UINT, SF_NONE, 8 * YAPF_TILE_LENGTH,       0, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_130, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.road_stop_bay_occupied_penalty, SLE_UINT, SF_NONE, 15 * YAPF_TILE_LENGTH,       0, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_130, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.maximum_go_to_depot_penalty, SLE_UINT, SF_NONE, 20 * YAPF_TILE_LENGTH,       0, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_131, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.ship_curve45_penalty, SLE_UINT, SF_NONE, 1 * YAPF_TILE_LENGTH,       0, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_SHIP_CURVE_PENALTY, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, pf.yapf.ship_curve90_penalty, SLE_UINT, SF_NONE, 6 * YAPF_TILE_LENGTH,       0, 1000000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_SHIP_CURVE_PENALTY, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, order.old_occupancy_smoothness, SLE_UINT8, SF_NONE, 75,       0, 100, 10, STR_CONFIG_OCCUPANCY_SMOOTHNESS, STR_CONFIG_OCCUPANCY_SMOOTHNESS_HELPTEXT, STR_CONFIG_SETTING_PERCENTAGE, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_ORDER_OCCUPANCY, 1, 1),        SC_EXPERT, nullptr, false, "order_occupancy.order.occupancy_smoothness"),
SDT_VAR(GameSettings, game_creation.land_generator, SLE_UINT8, SF_GUI_DROPDOWN | SF_NEWGAME_ONLY, 1,       0, 1, 0, STR_CONFIG_SETTING_LAND_GENERATOR, STR_CONFIG_SETTING_LAND_GENERATOR_HELPTEXT, STR_CONFIG_SETTING_LAND_GENERATOR_ORIGINAL, nullptr, nullptr, SLV_30, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, game_creation.oil_refinery_limit, SLE_UINT8, SF_NONE, 32,       12, 128, 0, STR_CONFIG_SETTING_OIL_REF_EDGE_DISTANCE, STR_CONFIG_SETTING_OIL_REF_EDGE_DISTANCE_HELPTEXT, STR_CONFIG_SETTING_TILE_LENGTH, nullptr, nullptr, SLV_30, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, game_creation.tgen_smoothness, SLE_UINT8, SF_GUI_DROPDOWN | SF_NEWGAME_ONLY, 1,       TGEN_SMOOTHNESS_BEGIN, TGEN_SMOOTHNESS_END - 1, 0, STR_CONFIG_SETTING_ROUGHNESS_OF_TERRAIN, STR_CONFIG_SETTING_ROUGHNESS_OF_TERRAIN_HELPTEXT, STR_CONFIG_SETTING_ROUGHNESS_OF_TERRAIN_VERY_SMOOTH, nullptr, nullptr, SLV_30, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_VAR(GameSettings, game_creation.variety, SLE_UINT8, SF_GUI_DROPDOWN | SF_NEWGAME_ONLY, 0,       0, 5, 0, STR_CONFIG_SETTING_VARIETY, STR_CONFIG_SETTING_VARIETY_HELPTEXT, STR_VARIETY_NONE, nullptr, nullptr, SLV_197, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, game_creation.generation_seed, SLE_UINT32, SF_NONE, GENERATE_NEW_SEED,       0, UINT32_MAX, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_30, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, game_creation.generation_unique_id, SLE_UINT32, SF_NONE, 0,       0, UINT32_MAX, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "savegame_unique_id.game_creation.generation_unique_id"),
SDT_VAR(GameSettings, game_creation.tree_placer, SLE_UINT8, SF_GUI_DROPDOWN | SF_NEWGAME_ONLY | SF_SCENEDIT_TOO, 3,       0, 3, 0, STR_CONFIG_SETTING_TREE_PLACER, STR_CONFIG_SETTING_TREE_PLACER_HELPTEXT, STR_CONFIG_SETTING_TREE_PLACER_NONE, nullptr, nullptr, SLV_30, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_VAR(GameSettings, game_creation.heightmap_rotation, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 0,       0, 1, 0, STR_CONFIG_SETTING_HEIGHTMAP_ROTATION, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_CONFIG_SETTING_HEIGHTMAP_ROTATION_COUNTER_CLOCKWISE, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_VAR(GameSettings, game_creation.se_flat_world_height, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 1,       0, 15, 0, STR_CONFIG_SETTING_SE_FLAT_WORLD_HEIGHT, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_VAR(GameSettings, game_creation.map_x, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 8,       MIN_MAP_SIZE_BITS, MAX_MAP_SIZE_BITS, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_VAR(GameSettings, game_creation.map_y, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 8,       MIN_MAP_SIZE_BITS, MAX_MAP_SIZE_BITS, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_BOOL(GameSettings, construction.freeform_edges,        SF_NONE, true,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, CheckFreeformEdges, UpdateFreeformEdges, SLV_111, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, game_creation.water_borders, SLE_UINT8, SF_NONE, 15,       0, 16, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_111, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, game_creation.custom_town_number, SLE_UINT16, SF_NONE, 1,       1, 5000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_115, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_VAR(GameSettings, game_creation.custom_industry_number, SLE_UINT16, SF_NONE, 1,       1, 64000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, "game_creation.custom_industry_number"),
SDT_VAR(GameSettings, construction.extra_tree_placement, SLE_UINT8, SF_GUI_DROPDOWN, 2,       0, 3, 0, STR_CONFIG_SETTING_EXTRA_TREE_PLACEMENT, STR_CONFIG_SETTING_EXTRA_TREE_PLACEMENT_HELPTEXT, STR_CONFIG_SETTING_EXTRA_TREE_PLACEMENT_NO_SPREAD, nullptr, nullptr, SLV_132, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_NULL(3, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_CHILLPP, SL_CHILLPP_232)),
SDT_BOOL(GameSettings, construction.trees_around_snow_line_enabled,        SF_NONE, true,                              STR_CONFIG_SETTING_TREES_AROUND_SNOWLINE, STR_CONFIG_SETTING_TREES_AROUND_SNOWLINE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, "everest_treeline.construction.trees_around_snow_line_enabled"),
SDT_VAR(GameSettings, construction.trees_around_snow_line_range, SLE_UINT8, SF_NONE, 8,       1, 64, 0, STR_CONFIG_SETTING_TREES_AROUND_SNOWLINE_RANGE, STR_CONFIG_SETTING_TREES_AROUND_SNOWLINE_RANGE_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, "everest_treeline.construction.trees_around_snow_line_range"),
SDT_VAR(GameSettings, construction.trees_around_snow_line_dynamic_range, SLE_UINT8, SF_NONE, 75,       0, 100, 5, STR_CONFIG_SETTING_TREES_AROUND_SNOWLINE_DYNAMIC_RANGE, STR_CONFIG_SETTING_TREES_AROUND_SNOWLINE_DYNAMIC_RANGE_HELPTEXT, STR_CONFIG_SETTING_PERCENTAGE, nullptr, [](auto) { UpdateCachedSnowLineBounds(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "everest_treeline.construction.trees_around_snow_line_dynamic_range"),
SDT_VAR(GameSettings, construction.tree_growth_rate, SLE_UINT8, SF_GUI_DROPDOWN, 0,       0, 4, 0, STR_CONFIG_SETTING_TREE_GROWTH, STR_CONFIG_SETTING_TREE_GROWTH_HELPTEXT, STR_CONFIG_SETTING_TREE_GROWTH_NORMAL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, "reduced_tree_growth.construction.tree_growth_rate"),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_JOKERPP), "construction.tree_growth_rate", nullptr),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_JOKERPP), "construction.trees_around_snow_line_range", nullptr),
SDT_VAR(GameSettings, game_creation.custom_terrain_type, SLE_UINT8, SF_NEWGAME_ONLY, MAP_HEIGHT_LIMIT_AUTO_MINIMUM,       MIN_CUSTOM_TERRAIN_TYPE, MAX_MAP_HEIGHT_LIMIT, 1, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_MAPGEN_SETTINGS_REVAMP, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, game_creation.custom_sea_level, SLE_UINT8, SF_NONE, CUSTOM_SEA_LEVEL_MIN_PERCENTAGE,       CUSTOM_SEA_LEVEL_MIN_PERCENTAGE, CUSTOM_SEA_LEVEL_MAX_PERCENTAGE, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SLV_149, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_VAR(GameSettings, game_creation.min_river_length, SLE_UINT8, SF_NEWGAME_ONLY | SF_SCENEDIT_TOO, 16,       2, 255, 0, STR_CONFIG_SETTING_RIVER_MIN_LENGTH, STR_CONFIG_SETTING_RIVER_MIN_LENGTH_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SLV_163, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_VAR(GameSettings, game_creation.river_route_random, SLE_UINT8, SF_NEWGAME_ONLY | SF_SCENEDIT_TOO, 5,       1, 255, 0, STR_CONFIG_SETTING_RIVER_ROUTE_RANDOM, STR_CONFIG_SETTING_RIVER_ROUTE_RANDOM_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SLV_163, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_BOOL(GameSettings, game_creation.rivers_top_of_hill,        SF_NEWGAME_ONLY | SF_SCENEDIT_TOO, true,                              STR_CONFIG_SETTING_RIVERS_TOP_OF_HILL, STR_CONFIG_SETTING_RIVERS_TOP_OF_HILL_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "rivers.game_creation.rivers_top_of_hill"),
SDT_VAR(GameSettings, game_creation.river_tropics_width, SLE_UINT8, SF_NEWGAME_ONLY | SF_SCENEDIT_TOO, 5,       2, 51, 1, STR_CONFIG_SETTING_RIVER_TROPICS_WIDTH, STR_CONFIG_SETTING_RIVER_TROPICS_WIDTH_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, "rivers.game_creation.river_tropics_width"),
SDT_VAR(GameSettings, game_creation.lake_tropics_width, SLE_UINT8, SF_NEWGAME_ONLY | SF_SCENEDIT_TOO, 5,       2, 51, 1, STR_CONFIG_SETTING_LAKE_TROPICS_WIDTH, STR_CONFIG_SETTING_LAKE_TROPICS_WIDTH_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, "rivers.game_creation.lake_tropics_width"),
SDT_VAR(GameSettings, game_creation.coast_tropics_width, SLE_UINT8, SF_GUI_DROPDOWN | SF_NEWGAME_ONLY, 0,       0, 3, 1, STR_CONFIG_SETTING_COAST_TROPICS_WIDTH, STR_CONFIG_SETTING_COAST_TROPICS_WIDTH_HELPTEXT, STR_CONFIG_SETTING_COAST_TROPICS_WIDTH_DEFAULT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, "rivers.game_creation.coast_tropics_width"),
SDT_VAR(GameSettings, game_creation.lake_size, SLE_UINT8, SF_NEWGAME_ONLY | SF_SCENEDIT_TOO | SF_GUI_0_IS_SPECIAL, 8,       0, 100, 0, STR_CONFIG_SETTING_LAKE_SIZE, STR_CONFIG_SETTING_LAKE_SIZE_HELPTEXT, STR_CONFIG_SETTING_LAKE_SIZE_VALUE, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "rivers.game_creation.lake_size"),
SDT_BOOL(GameSettings, game_creation.lakes_allowed_in_deserts,        SF_NEWGAME_ONLY | SF_SCENEDIT_TOO, false,                              STR_CONFIG_SETTING_LAKES_ALLOWED_IN_DESERTS, STR_CONFIG_SETTING_LAKES_ALLOWED_IN_DESERTS_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "rivers.game_creation.lakes_allowed_in_deserts"),
SDT_VAR(GameSettings, game_creation.amount_of_rivers, SLE_UINT8, SF_GUI_DROPDOWN | SF_NEWGAME_ONLY, 2,       0, 5, 0, STR_CONFIG_SETTING_RIVER_AMOUNT, STR_CONFIG_SETTING_RIVER_AMOUNT_HELPTEXT, STR_RIVERS_NONE, nullptr, nullptr, SLV_163, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(GameSettings, game_creation.amount_of_rocks, SLE_UINT8, SF_NEWGAME_ONLY | SF_SCENEDIT_TOO, 5,       1, 255, 1, STR_CONFIG_SETTING_ROCKS_AMOUNT, STR_CONFIG_SETTING_ROCKS_AMOUNT_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "rocks.game_creation.amount_of_rocks"),
SDT_VAR(GameSettings, game_creation.height_affects_rocks, SLE_UINT8, SF_NEWGAME_ONLY | SF_SCENEDIT_TOO, 0,       0, 25, 1, STR_CONFIG_SETTING_HEIGHT_ROCKS, STR_CONFIG_SETTING_HEIGHT_ROCKS_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "rocks.game_creation.height_affects_rocks"),
SDT_XREF(         SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_JOKERPP), "game_creation.build_public_roads", nullptr),
SDT_VAR(GameSettings, game_creation.build_public_roads, SLE_UINT8, SF_GUI_DROPDOWN | SF_NEWGAME_ONLY | SF_SCENEDIT_TOO, 0,       0, 2, 0, STR_CONFIG_SETTING_BUILD_PUBLIC_ROADS, STR_CONFIG_SETTING_BUILD_PUBLIC_ROADS_HELPTEXT, STR_CONFIG_SETTING_BUILD_PUBLIC_ROADS_NONE, nullptr, PublicRoadsSettingChange, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "public_roads.game_creation.build_public_roads"),
SDT_OMANY(GameSettings, locale.currency, SLE_UINT8, SF_NO_NETWORK_SYNC, 0,             CURRENCY_END - 1, _locale_currencies,     STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, [](auto) { MarkWholeScreenDirty(); }, SLV_97, SL_MAX_VERSION, SlXvFeatureTest(), nullptr, SC_BASIC, nullptr, false, nullptr),
SDTG_OMANY("units",              SLE_UINT8, SF_NOT_IN_CONFIG, _old_units, 1,       2, _locale_units,     STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, [](auto) { MarkWholeScreenDirty(); }, SLV_97, SLV_184, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_OMANY(GameSettings, locale.units_velocity, SLE_UINT8, SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 1,             3, _locale_units,     STR_CONFIG_SETTING_LOCALISATION_UNITS_VELOCITY, STR_CONFIG_SETTING_LOCALISATION_UNITS_VELOCITY_HELPTEXT, STR_CONFIG_SETTING_LOCALISATION_UNITS_VELOCITY_IMPERIAL, nullptr, VelocityUnitsChanged, SLV_184, SL_MAX_VERSION, SlXvFeatureTest(), nullptr, SC_BASIC, nullptr, false, nullptr),
SDT_OMANY(GameSettings, locale.units_power, SLE_UINT8, SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 1,             2, _locale_units,     STR_CONFIG_SETTING_LOCALISATION_UNITS_POWER, STR_CONFIG_SETTING_LOCALISATION_UNITS_POWER_HELPTEXT, STR_CONFIG_SETTING_LOCALISATION_UNITS_POWER_IMPERIAL, nullptr, [](auto) { MarkWholeScreenDirty(); }, SLV_184, SL_MAX_VERSION, SlXvFeatureTest(), nullptr, SC_BASIC, nullptr, false, nullptr),
SDT_OMANY(GameSettings, locale.units_weight, SLE_UINT8, SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 1,             2, _locale_units,     STR_CONFIG_SETTING_LOCALISATION_UNITS_WEIGHT, STR_CONFIG_SETTING_LOCALISATION_UNITS_WEIGHT_HELPTEXT, STR_CONFIG_SETTING_LOCALISATION_UNITS_WEIGHT_IMPERIAL, nullptr, [](auto) { MarkWholeScreenDirty(); }, SLV_184, SL_MAX_VERSION, SlXvFeatureTest(), nullptr, SC_BASIC, nullptr, false, nullptr),
SDT_OMANY(GameSettings, locale.units_volume, SLE_UINT8, SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 1,             2, _locale_units,     STR_CONFIG_SETTING_LOCALISATION_UNITS_VOLUME, STR_CONFIG_SETTING_LOCALISATION_UNITS_VOLUME_HELPTEXT, STR_CONFIG_SETTING_LOCALISATION_UNITS_VOLUME_IMPERIAL, nullptr, [](auto) { MarkWholeScreenDirty(); }, SLV_184, SL_MAX_VERSION, SlXvFeatureTest(), nullptr, SC_BASIC, nullptr, false, nullptr),
SDT_OMANY(GameSettings, locale.units_force, SLE_UINT8, SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 2,             2, _locale_units,     STR_CONFIG_SETTING_LOCALISATION_UNITS_FORCE, STR_CONFIG_SETTING_LOCALISATION_UNITS_FORCE_HELPTEXT, STR_CONFIG_SETTING_LOCALISATION_UNITS_FORCE_IMPERIAL, nullptr, [](auto) { MarkWholeScreenDirty(); }, SLV_184, SL_MAX_VERSION, SlXvFeatureTest(), nullptr, SC_BASIC, nullptr, false, nullptr),
SDT_OMANY(GameSettings, locale.units_height, SLE_UINT8, SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 1,             2, _locale_units,     STR_CONFIG_SETTING_LOCALISATION_UNITS_HEIGHT, STR_CONFIG_SETTING_LOCALISATION_UNITS_HEIGHT_HELPTEXT, STR_CONFIG_SETTING_LOCALISATION_UNITS_HEIGHT_IMPERIAL, nullptr, [](auto) { MarkWholeScreenDirty(); }, SLV_184, SL_MAX_VERSION, SlXvFeatureTest(), nullptr, SC_BASIC, nullptr, false, nullptr),
SDT_SSTR(GameSettings, locale.digit_group_separator, SLE_STRQ, SF_NO_NETWORK_SYNC, nullptr,                                                       nullptr, [](auto) { MarkWholeScreenDirty(); }, SLV_118, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_SSTR(GameSettings, locale.digit_group_separator_currency, SLE_STRQ, SF_NO_NETWORK_SYNC, nullptr,                                                       nullptr, [](auto) { MarkWholeScreenDirty(); }, SLV_118, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_SSTR(GameSettings, locale.digit_decimal_separator, SLE_STRQ, SF_NO_NETWORK_SYNC, nullptr,                                                       nullptr, [](auto) { MarkWholeScreenDirty(); }, SLV_126, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_BOOL(              client_locale.sync_locale_network_server,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_SYNC_LOCALE_SETTINGS_NETWORK_SERVER, STR_CONFIG_SETTING_SYNC_LOCALE_SETTINGS_NETWORK_SERVER_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDT_BOOL(GameSettings, vehicle.adjacent_crossings,        SF_NONE, true,                              STR_CONFIG_SETTING_ADJACENT_CROSSINGS, STR_CONFIG_SETTING_ADJACENT_CROSSINGS_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, "adjacent_crossings.vehicle.adjacent_crossings"),
SDT_BOOL(GameSettings, vehicle.safer_crossings,        SF_NONE, false,                              STR_CONFIG_SETTING_SAFER_CROSSINGS, STR_CONFIG_SETTING_SAFER_CROSSINGS_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, "safer_crossings.vehicle.safer_crossings"),
SDTC_OMANY(              gui.autosave, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 1,             6, _autosave_interval,     STR_CONFIG_SETTING_AUTOSAVE, STR_CONFIG_SETTING_AUTOSAVE_HELPTEXT, STR_GAME_OPTIONS_AUTOSAVE_DROPDOWN_OFF, nullptr, AutosaveModeChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_VAR(              gui.autosave_custom_days, SLE_UINT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 14,       1, 4000, 7, STR_CONFIG_SETTING_AUTOSAVE_CUSTOM_DAYS, STR_CONFIG_SETTING_AUTOSAVE_CUSTOM_DAYS_HELPTEXT, STR_TIMETABLE_DAYS, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_VAR(              gui.autosave_custom_minutes, SLE_UINT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 30,       3, 8000, 10, STR_CONFIG_SETTING_AUTOSAVE_CUSTOM_MINUTES, STR_CONFIG_SETTING_AUTOSAVE_CUSTOM_MINUTES_HELPTEXT, STR_TIMETABLE_MINUTES, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_BOOL(              gui.threaded_saves,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_OMANY(              gui.date_format_in_default_names, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 2,             2, _savegame_date,     STR_CONFIG_SETTING_DATE_FORMAT_IN_SAVE_NAMES, STR_CONFIG_SETTING_DATE_FORMAT_IN_SAVE_NAMES_HELPTEXT, STR_CONFIG_SETTING_DATE_FORMAT_IN_SAVE_NAMES_LONG, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.show_finances,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_SHOWFINANCES, STR_CONFIG_SETTING_SHOWFINANCES_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_VAR(              gui.auto_scrolling, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 0,       0, 3, 0, STR_CONFIG_SETTING_AUTOSCROLL, STR_CONFIG_SETTING_AUTOSCROLL_HELPTEXT, STR_CONFIG_SETTING_AUTOSCROLL_DISABLED, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
#ifdef __EMSCRIPTEN__
SDTC_VAR(              gui.scroll_mode, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 2,       0, 3, 0, STR_CONFIG_SETTING_SCROLLMODE, STR_CONFIG_SETTING_SCROLLMODE_HELPTEXT, STR_CONFIG_SETTING_SCROLLMODE_DEFAULT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
#endif
#ifndef __EMSCRIPTEN__
SDTC_VAR(              gui.scroll_mode, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 0,       0, 3, 0, STR_CONFIG_SETTING_SCROLLMODE, STR_CONFIG_SETTING_SCROLLMODE_HELPTEXT, STR_CONFIG_SETTING_SCROLLMODE_DEFAULT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
#endif
SDTC_BOOL(              gui.smooth_scroll,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_SMOOTH_SCROLLING, STR_CONFIG_SETTING_SMOOTH_SCROLLING_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.right_mouse_wnd_close,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_RIGHT_MOUSE_WND_CLOSE, STR_CONFIG_SETTING_RIGHT_MOUSE_WND_CLOSE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
#ifdef __APPLE__
SDTC_VAR(              gui.right_mouse_btn_emulation, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 0,       0, 2, 0, STR_CONFIG_SETTING_RIGHT_MOUSE_BTN_EMU, STR_CONFIG_SETTING_RIGHT_MOUSE_BTN_EMU_HELPTEXT, STR_CONFIG_SETTING_RIGHT_MOUSE_BTN_EMU_COMMAND, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
#endif
SDTC_BOOL(              gui.measure_tooltip,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_MEASURE_TOOLTIP, STR_CONFIG_SETTING_MEASURE_TOOLTIP_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_VAR(              gui.errmsg_duration, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 5,       0, 20, 0, STR_CONFIG_SETTING_ERRMSG_DURATION, STR_CONFIG_SETTING_ERRMSG_DURATION_HELPTEXT, STR_CONFIG_SETTING_ERRMSG_DURATION_VALUE, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.hover_delay_ms, SLE_UINT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_0_IS_SPECIAL, 250,       50, 6000, 50, STR_CONFIG_SETTING_HOVER_DELAY, STR_CONFIG_SETTING_HOVER_DELAY_HELPTEXT, STR_CONFIG_SETTING_HOVER_DELAY_VALUE, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_OMANY(              gui.osk_activation, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 1,             3, _osk_activation,     STR_CONFIG_SETTING_OSK_ACTIVATION, STR_CONFIG_SETTING_OSK_ACTIVATION_HELPTEXT, STR_CONFIG_SETTING_OSK_ACTIVATION_DISABLED, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_VAR(              gui.toolbar_pos, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 1,       0, 2, 0, STR_CONFIG_SETTING_TOOLBAR_POS, STR_CONFIG_SETTING_TOOLBAR_POS_HELPTEXT, STR_CONFIG_SETTING_HORIZONTAL_POS_LEFT, nullptr, v_PositionMainToolbar, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_VAR(              gui.statusbar_pos, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 1,       0, 2, 0, STR_CONFIG_SETTING_STATUSBAR_POS, STR_CONFIG_SETTING_STATUSBAR_POS_HELPTEXT, STR_CONFIG_SETTING_HORIZONTAL_POS_LEFT, nullptr, v_PositionStatusbar, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_VAR(              gui.window_snap_radius, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_0_IS_SPECIAL, 10,       1, 32, 0, STR_CONFIG_SETTING_SNAP_RADIUS, STR_CONFIG_SETTING_SNAP_RADIUS_HELPTEXT, STR_CONFIG_SETTING_SNAP_RADIUS_VALUE, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_VAR(              gui.window_soft_limit, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_0_IS_SPECIAL, 20,       5, 255, 1, STR_CONFIG_SETTING_SOFT_LIMIT, STR_CONFIG_SETTING_SOFT_LIMIT_HELPTEXT, STR_CONFIG_SETTING_SOFT_LIMIT_VALUE, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_VAR(              gui.zoom_min, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, ZOOM_LVL_MIN,       ZOOM_LVL_MIN, ZOOM_LVL_OUT_4X, 0, STR_CONFIG_SETTING_ZOOM_MIN, STR_CONFIG_SETTING_ZOOM_MIN_HELPTEXT, STR_CONFIG_SETTING_ZOOM_LVL_MIN, nullptr, ZoomMinMaxChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, true, nullptr),
SDTC_VAR(              gui.zoom_max, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, ZOOM_LVL_MAX,       ZOOM_LVL_OUT_8X, ZOOM_LVL_MAX, 0, STR_CONFIG_SETTING_ZOOM_MAX, STR_CONFIG_SETTING_ZOOM_MAX_HELPTEXT, STR_CONFIG_SETTING_ZOOM_LVL_OUT_2X, nullptr, ZoomMinMaxChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, true, nullptr),
SDTC_VAR(              gui.sprite_zoom_min, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, ZOOM_LVL_MIN,       ZOOM_LVL_MIN, ZOOM_LVL_OUT_4X, 0, STR_CONFIG_SETTING_SPRITE_ZOOM_MIN, STR_CONFIG_SETTING_SPRITE_ZOOM_MIN_HELPTEXT, STR_CONFIG_SETTING_SPRITE_ZOOM_LVL_MIN, nullptr, SpriteZoomMinChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_BOOL(              gui.population_in_label,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_POPULATION_IN_LABEL, STR_CONFIG_SETTING_POPULATION_IN_LABEL_HELPTEXT, STR_NULL, nullptr, [](auto) { UpdateAllTownVirtCoords(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.link_terraform_toolbar,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_LINK_TERRAFORM_TOOLBAR, STR_CONFIG_SETTING_LINK_TERRAFORM_TOOLBAR_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.smallmap_land_colour, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 0,       0, 2, 0, STR_CONFIG_SETTING_SMALLMAP_LAND_COLOUR, STR_CONFIG_SETTING_SMALLMAP_LAND_COLOUR_HELPTEXT, STR_CONFIG_SETTING_SMALLMAP_LAND_COLOUR_GREEN, nullptr, RedrawSmallmap, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.liveries, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 2,       0, 2, 0, STR_CONFIG_SETTING_LIVERIES, STR_CONFIG_SETTING_LIVERIES_HELPTEXT, STR_CONFIG_SETTING_LIVERIES_NONE, nullptr, InvalidateCompanyLiveryWindow, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.starting_colour, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, COLOUR_END,       0, COLOUR_END, 0, STR_CONFIG_SETTING_COMPANY_STARTING_COLOUR, STR_CONFIG_SETTING_COMPANY_STARTING_COLOUR_HELPTEXT, STR_COLOUR_DARK_BLUE, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.auto_remove_signals,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_AUTO_REMOVE_SIGNALS, STR_CONFIG_SETTING_AUTO_REMOVE_SIGNALS_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.prefer_teamchat,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_PREFER_TEAMCHAT, STR_CONFIG_SETTING_PREFER_TEAMCHAT_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_VAR(              gui.scrollwheel_scrolling, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 0,       0, 2, 0, STR_CONFIG_SETTING_SCROLLWHEEL_SCROLLING, STR_CONFIG_SETTING_SCROLLWHEEL_SCROLLING_HELPTEXT, STR_CONFIG_SETTING_SCROLLWHEEL_ZOOM, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_VAR(              gui.scrollwheel_multiplier, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 5,       1, 15, 1, STR_CONFIG_SETTING_SCROLLWHEEL_MULTIPLIER, STR_CONFIG_SETTING_SCROLLWHEEL_MULTIPLIER_HELPTEXT, STR_JUST_COMMA, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_BOOL(              gui.viewport_map_scan_surroundings,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_VIEWPORT_MAP_SCAN_SURROUNDINGS, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, ViewportMapLandscapeModeChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.show_slopes_on_viewport_map,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_VIEWPORT_MAP_SHOW_SLOPES, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, ViewportMapLandscapeModeChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.show_bridges_on_map,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_VIEWPORT_MAP_SHOW_BRIDGES, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, ViewportMapLandscapeModeChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.show_tunnels_on_map,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_VIEWPORT_MAP_SHOW_TUNNELS, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, ViewportMapShowTunnelModeChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.show_vehicle_route, SLE_UINT32, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 1,       0, 1, 1, STR_CONFIG_SETTING_VIEWPORT_MAP_SHOW_VEHICLE_ROUTE, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_CONFIG_SETTING_VIEWPORT_MAP_SHOW_VEHICLE_ROUTE_NO, nullptr, [](auto) { MarkWholeScreenDirty(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.dash_level_of_route_lines, SLE_UINT32, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_0_IS_SPECIAL, 0,       0, 10, 1, STR_CONFIG_SETTING_VIEWPORT_MAP_DRAW_ROUTE_DASH, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_CONFIG_SETTING_VIEWPORT_MAP_DRAW_ROUTE_DASH_VALUE, nullptr, [](auto) { MarkWholeScreenDirty(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_BOOL(              gui.use_owner_colour_for_tunnelbridge,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_VIEWPORT_MAP_USE_OWNER_COLOUR_BRIDGE_TUNNEL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, ViewportMapLandscapeModeChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.show_scrolling_viewport_on_map, SLE_UINT32, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 3,       0, 3, 1, STR_CONFIG_SETTING_VIEWPORT_MAP_SHOW_SCROLLING_VP, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_CONFIG_SETTING_VIEWPORT_MAP_SHOW_SCROLLING_VP_NOTHING, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.default_viewport_map_mode, SLE_UINT32, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 0,       0, 2, 1, STR_CONFIG_SETTING_VIEWPORT_MAP_DEFAULT_MODE, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_CONFIG_SETTING_VIEWPORT_MAP_DEFAULT_MODE_VEGETATION, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.action_when_viewport_map_is_dblclicked, SLE_UINT32, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 1,       0, 2, 1, STR_CONFIG_SETTING_VIEWPORT_MAP_ACTION_DBLCLICK, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_CONFIG_SETTING_VIEWPORT_MAP_ACTION_DBLCLICK_DO_NOTHING, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.pause_on_newgame,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_PAUSE_ON_NEW_GAME, STR_CONFIG_SETTING_PAUSE_ON_NEW_GAME_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_VAR(              gui.advanced_vehicle_list, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 1,       0, 2, 0, STR_CONFIG_SETTING_ADVANCED_VEHICLE_LISTS, STR_CONFIG_SETTING_ADVANCED_VEHICLE_LISTS_HELPTEXT, STR_CONFIG_SETTING_COMPANIES_OFF, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.timetable_in_ticks,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_TIMETABLE_IN_TICKS, STR_CONFIG_SETTING_TIMETABLE_IN_TICKS_HELPTEXT, STR_NULL, nullptr, ChangeTimetableInTicksMode, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP, 7)),
SDTC_BOOL(              gui.timetable_leftover_ticks,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_TIMETABLE_LEFTOVER_TICKS, STR_CONFIG_SETTING_TIMETABLE_LEFTOVER_TICKS_HELPTEXT, STR_NULL, nullptr, InvalidateVehTimetableWindow, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_BOOL(              gui.override_time_settings,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_OVERRIDE_TIME_SETTINGS, STR_CONFIG_SETTING_OVERRIDE_TIME_SETTINGS_HELPTEXT, STR_NULL, nullptr, ChangeTimeOverrideMode, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.time_in_minutes,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_TIME_IN_MINUTES, STR_CONFIG_SETTING_TIME_IN_MINUTES_HELPTEXT, STR_NULL, nullptr, UpdateTimeSettings, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.ticks_per_minute, SLE_UINT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 74,       1, 8192, 10, STR_CONFIG_SETTING_TICKS_PER_MINUTE, STR_CONFIG_SETTING_TICKS_PER_MINUTE_HELPTEXT, STR_JUST_INT, nullptr, UpdateTimeSettings, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.clock_offset, SLE_UINT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 0,       0, 1439, 60, STR_CONFIG_SETTING_CLOCK_OFFSET, STR_CONFIG_SETTING_CLOCK_OFFSET_HELPTEXT, STR_JUST_INT, nullptr, UpdateTimeSettings, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDT_BOOL(GameSettings, game_time.time_in_minutes,        SF_NONE, false,                              STR_CONFIG_SETTING_TIME_IN_MINUTES, STR_CONFIG_SETTING_TIME_IN_MINUTES_HELPTEXT, STR_NULL, nullptr, UpdateTimeSettings, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "game_time.time_in_minutes"),
SDT_VAR(GameSettings, game_time.ticks_per_minute, SLE_UINT16, SF_NONE, 74,       1, 8192, 10, STR_CONFIG_SETTING_TICKS_PER_MINUTE, STR_CONFIG_SETTING_TICKS_PER_MINUTE_HELPTEXT, STR_JUST_INT, nullptr, UpdateTimeSettings, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "game_time.ticks_per_minute"),
SDT_VAR(GameSettings, game_time.clock_offset, SLE_UINT16, SF_NONE, 0,       0, 1439, 60, STR_CONFIG_SETTING_CLOCK_OFFSET, STR_CONFIG_SETTING_CLOCK_OFFSET_HELPTEXT, STR_JUST_INT, nullptr, UpdateTimeSettings, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, "game_time.clock_offset"),
SDT_NULL(1, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_SPRINGPP, 7)),
SDTC_VAR(              gui.date_with_time, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 0,       0, 3, 0, STR_CONFIG_SETTING_DATE_WITH_TIME, STR_CONFIG_SETTING_DATE_WITH_TIME_HELPTEXT, STR_CONFIG_SETTING_DATE_WITH_TIME_NONE, nullptr, UpdateTimeSettings, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.timetable_start_text_entry,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_TIMETABLE_START_TEXT_ENTRY, STR_CONFIG_SETTING_TIMETABLE_START_TEXT_ENTRY_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.timetable_arrival_departure,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_TIMETABLE_SHOW_ARRIVAL_DEPARTURE, STR_CONFIG_SETTING_TIMETABLE_SHOW_ARRIVAL_DEPARTURE_HELPTEXT, STR_NULL, nullptr, InvalidateVehTimetableWindow, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.max_departures, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 10,       1, 30, 1, STR_CONFIG_MAX_DEPARTURES, STR_CONFIG_MAX_DEPARTURES_HELPTEXT, STR_JUST_INT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.max_departure_time, SLE_UINT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 120,       30, 240, 1, STR_CONFIG_MAX_DEPARTURE_TIME, STR_CONFIG_MAX_DEPARTURE_TIME_HELPTEXT, STR_JUST_INT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.departure_calc_frequency, SLE_UINT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 10,       1, 120, 1, STR_CONFIG_DEPARTURE_CALC_FREQUENCY, STR_CONFIG_DEPARTURE_CALC_FREQUENCY_HELPTEXT, STR_JUST_INT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.departure_show_vehicle,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_DEPARTURE_VEHICLE_NAME, STR_CONFIG_DEPARTURE_VEHICLE_NAME_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.departure_show_group,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_DEPARTURE_GROUP_NAME, STR_CONFIG_DEPARTURE_GROUP_NAME_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.departure_show_company,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_DEPARTURE_COMPANY_NAME, STR_CONFIG_DEPARTURE_COMPANY_NAME_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.departure_show_vehicle_type,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_DEPARTURE_VEHICLE_TYPE, STR_CONFIG_DEPARTURE_VEHICLE_TYPE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.departure_show_vehicle_color,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_DEPARTURE_VEHICLE_COLOR, STR_CONFIG_DEPARTURE_VEHICLE_COLOR_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.departure_larger_font,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_DEPARTURE_LARGER_FONT, STR_CONFIG_DEPARTURE_LARGER_FONT_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.departure_destination_type,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_DEPARTURE_DESTINATION_TYPE, STR_CONFIG_DEPARTURE_DESTINATION_TYPE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.departure_show_both,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_DEPARTURE_SHOW_BOTH, STR_CONFIG_DEPARTURE_SHOW_BOTH_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.departure_only_passengers,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_DEPARTURE_ONLY_PASSENGERS, STR_CONFIG_DEPARTURE_ONLY_PASSENGERS_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.departure_smart_terminus,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_DEPARTURE_SMART_TERMINUS, STR_CONFIG_DEPARTURE_SMART_TERMINUS_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.departure_show_all_stops,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_DEPARTURE_SHOW_ALL_STOPS, STR_CONFIG_DEPARTURE_SHOW_ALL_STOPS_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.departure_merge_identical,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_DEPARTURE_MERGE_IDENTICAL, STR_CONFIG_DEPARTURE_MERGE_IDENTICAL_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.departure_conditionals, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 0,       0, 2, 0, STR_CONFIG_DEPARTURE_CONDITIONALS, STR_CONFIG_DEPARTURE_CONDITIONALS_HELPTEXT, STR_CONFIG_DEPARTURE_CONDITIONALS_1, nullptr, [](auto) { MarkWholeScreenDirty(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.quick_goto,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_QUICKGOTO, STR_CONFIG_SETTING_QUICKGOTO_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_VAR(              gui.loading_indicators, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 1,       0, 2, 0, STR_CONFIG_SETTING_LOADING_INDICATORS, STR_CONFIG_SETTING_LOADING_INDICATORS_HELPTEXT, STR_CONFIG_SETTING_COMPANIES_OFF, nullptr, [](auto) { MarkWholeScreenDirty(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_VAR(              gui.default_rail_type, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 0,       0, 2, 0, STR_CONFIG_SETTING_DEFAULT_RAIL_TYPE, STR_CONFIG_SETTING_DEFAULT_RAIL_TYPE_HELPTEXT, STR_CONFIG_SETTING_DEFAULT_RAIL_TYPE_FIRST, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_VAR(              gui.default_road_type, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 0,       0, 3, 0, STR_CONFIG_SETTING_DEFAULT_ROAD_TYPE, STR_CONFIG_SETTING_DEFAULT_ROAD_TYPE_HELPTEXT, STR_CONFIG_SETTING_DEFAULT_RAIL_TYPE_FIRST, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_VAR(              gui.signal_gui_mode, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 0,       0, 1, 0, STR_CONFIG_SETTING_SIGNAL_GUI_MODE, STR_CONFIG_SETTING_SIGNAL_GUI_MODE_HELPTEXT, STR_CONFIG_SETTING_SIGNAL_GUI_MODE_PATH, nullptr, ProgrammableSignalsShownChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.coloured_news_year, SLE_INT32, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 2000,       MIN_YEAR, MAX_YEAR, 1, STR_CONFIG_SETTING_COLOURED_NEWS_YEAR, STR_CONFIG_SETTING_COLOURED_NEWS_YEAR_HELPTEXT, STR_JUST_INT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_VAR(              gui.cycle_signal_types, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 0,       0, 1, 1, STR_CONFIG_SETTING_CYCLE_SIGNAL_TYPES, STR_CONFIG_SETTING_CYCLE_SIGNAL_TYPES_HELPTEXT, STR_CONFIG_SETTING_CYCLE_SIGNAL_PBS, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.default_signal_type, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 5,       0, 5, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.drag_signals_density, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 4,       1, 20, 0, STR_CONFIG_SETTING_DRAG_SIGNALS_DENSITY, STR_CONFIG_SETTING_DRAG_SIGNALS_DENSITY_HELPTEXT, STR_CONFIG_SETTING_DRAG_SIGNALS_DENSITY_VALUE, nullptr, [](auto) { InvalidateWindowData(WC_BUILD_SIGNAL, 0); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_BOOL(              gui.drag_signals_fixed_distance,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_DRAG_SIGNALS_FIXED_DISTANCE, STR_CONFIG_SETTING_DRAG_SIGNALS_FIXED_DISTANCE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_VAR(              gui.semaphore_build_before, SLE_INT32, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 1950,       MIN_YEAR, MAX_YEAR, 1, STR_CONFIG_SETTING_SEMAPHORE_BUILD_BEFORE_DATE, STR_CONFIG_SETTING_SEMAPHORE_BUILD_BEFORE_DATE_HELPTEXT, STR_JUST_INT, nullptr, ResetSignalVariant, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.vehicle_income_warn,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_WARN_INCOME_LESS, STR_CONFIG_SETTING_WARN_INCOME_LESS_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_VAR(              gui.order_review_system, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 2,       0, 2, 0, STR_CONFIG_SETTING_ORDER_REVIEW, STR_CONFIG_SETTING_ORDER_REVIEW_HELPTEXT, STR_CONFIG_SETTING_ORDER_REVIEW_OFF, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_BOOL(              gui.no_depot_order_warn,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_WARN_NO_DEPOT_ORDER, STR_CONFIG_SETTING_WARN_NO_DEPOT_ORDER_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.lost_vehicle_warn,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_WARN_LOST_VEHICLE, STR_CONFIG_SETTING_WARN_LOST_VEHICLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.restriction_wait_vehicle_warn,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_WARN_RESTRICTION_WAIT_VEHICLE, STR_CONFIG_SETTING_WARN_RESTRICTION_WAIT_VEHICLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.new_nonstop,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_NONSTOP_BY_DEFAULT, STR_CONFIG_SETTING_NONSTOP_BY_DEFAULT_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_VAR(              gui.stop_location, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 2,       0, 2, 1, STR_CONFIG_SETTING_STOP_LOCATION, STR_CONFIG_SETTING_STOP_LOCATION_HELPTEXT, STR_CONFIG_SETTING_STOP_LOCATION_NEAR_END, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_BOOL(              gui.keep_all_autosave,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.autosave_on_exit,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_BOOL(              gui.autosave_on_network_disconnect,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_AUTOSAVE_ON_NETWORK_DISCONNECT, STR_CONFIG_SETTING_AUTOSAVE_ON_NETWORK_DISCONNECT_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_VAR(              gui.max_num_autosaves, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 16,       0, 255, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_OMANY(              gui.savegame_overwrite_confirm, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 3,             3, _savegame_overwrite_confirm,     STR_CONFIG_SETTING_SAVEGAME_OVERWRITE_CONFIRM, STR_CONFIG_SETTING_SAVEGAME_OVERWRITE_CONFIRM_HELPTEXT, STR_CONFIG_SETTING_SAVEGAME_OVERWRITE_CONFIRM_DISABLED, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.auto_euro,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.news_message_timeout, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 2,       1, 255, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.show_track_reservation,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_SHOW_TRACK_RESERVATION, STR_CONFIG_SETTING_SHOW_TRACK_RESERVATION_HELPTEXT, STR_NULL, nullptr, [](auto) { MarkWholeScreenDirty(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_VAR(              gui.station_numtracks, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 1,       1, 7, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.station_platlength, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 5,       1, 7, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_BOOL(              gui.station_dragdrop,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_BOOL(              gui.station_show_coverage,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_BOOL(              gui.persistent_buildingtools,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_PERSISTENT_BUILDINGTOOLS, STR_CONFIG_SETTING_PERSISTENT_BUILDINGTOOLS_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_VAR(              gui.station_gui_group_order, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 0,       0, 5, 1, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.station_gui_sort_by, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 0,       0, 3, 1, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.station_gui_sort_order, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 0,       0, 1, 1, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.missing_strings_threshold, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 25,       1, UINT8_MAX, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_VAR(              gui.graph_line_thickness, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 3,       1, 5, 0, STR_CONFIG_SETTING_GRAPH_LINE_THICKNESS, STR_CONFIG_SETTING_GRAPH_LINE_THICKNESS_HELPTEXT, STR_JUST_COMMA, nullptr, [](auto) { MarkWholeScreenDirty(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.show_vehicle_route_steps,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_SHOW_VEHICLE_ROUTE_STEPS, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, [](auto) { MarkWholeScreenDirty(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.show_train_length_in_details,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_SHOW_TRAIN_LENGTH_IN_DETAILS, STR_CONFIG_SETTING_SHOW_TRAIN_LENGTH_IN_DETAILS_HELPTEXT, STR_NULL, nullptr, [](auto) { MarkWholeScreenDirty(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_BOOL(              gui.show_train_weight_ratios_in_details,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_SHOW_TRAIN_WEIGHT_RATIOS_IN_DETAILS, STR_CONFIG_SETTING_SHOW_TRAIN_WEIGHT_RATIOS_IN_DETAILS_HELPTEXT, STR_NULL, nullptr, [](auto) { MarkWholeScreenDirty(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_BOOL(              gui.show_vehicle_group_in_details,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_SHOW_VEHICLE_GROUP_IN_DETAILS, STR_CONFIG_SETTING_SHOW_VEHICLE_GROUP_IN_DETAILS_HELPTEXT, STR_NULL, nullptr, [](auto) { MarkWholeScreenDirty(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_BOOL(              gui.show_vehicle_list_company_colour,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_SHOW_VEHICLE_LIST_COMPANY_COLOUR, STR_CONFIG_SETTING_SHOW_VEHICLE_LIST_COMPANY_COLOUR_HELPTEXT, STR_NULL, nullptr, [](auto) { MarkWholeScreenDirty(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_BOOL(              gui.show_restricted_signal_default,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_SHOW_RESTRICTED_SIG_DEF, STR_CONFIG_SETTING_SHOW_RESTRICTED_SIG_DEF_HELPTEXT, STR_NULL, nullptr, [](auto) { MarkWholeScreenDirty(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.show_all_signal_default,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_SHOW_ALL_SIG_DEF, STR_CONFIG_SETTING_SHOW_ALL_SIG_DEF_HELPTEXT, STR_NULL, nullptr, [](auto) { UpdateRailGuiSprites(); MarkWholeScreenDirty(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.show_adv_tracerestrict_features,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_SHOW_ADV_TRACE_RESTRICT_FEATURES, STR_CONFIG_SETTING_SHOW_ADV_TRACE_RESTRICT_FEATURES_HELPTEXT, STR_NULL, nullptr, [](auto) { MarkWholeScreenDirty(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_BOOL(              gui.show_progsig_ui,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_SHOW_PROGSIG_FEATURES, STR_CONFIG_SETTING_SHOW_PROGSIG_FEATURES_HELPTEXT, STR_NULL, nullptr, ProgrammableSignalsShownChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.show_noentrysig_ui,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_SHOW_NOENTRYSIG_FEATURES, STR_CONFIG_SETTING_SHOW_NOENTRYSIG_FEATURES_HELPTEXT, STR_NULL, nullptr, ProgrammableSignalsShownChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.show_veh_list_cargo_filter,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_SHOW_VEH_LIST_CARGO_FILTER, STR_CONFIG_SETTING_SHOW_VEH_LIST_CARGO_FILTER_HELPTEXT, STR_NULL, nullptr, VehListCargoFilterShownChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.enable_single_veh_shared_order_gui,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_ENABLE_SINGLE_VEH_SHARED_ORDER_GUI, STR_CONFIG_SETTING_ENABLE_SINGLE_VEH_SHARED_ORDER_GUI_HELPTEXT, STR_NULL, nullptr, EnableSingleVehSharedOrderGuiChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_BOOL(              gui.show_adv_load_mode_features,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_SHOW_ADV_LOADING_MODE_FEATURES, STR_CONFIG_SETTING_SHOW_ADV_LOADING_MODE_FEATURES_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_BOOL(              gui.disable_top_veh_list_mass_actions,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_DISABLE_TOP_VEH_LIST_MASS_ACTIONS, STR_CONFIG_SETTING_DISABLE_TOP_VEH_LIST_MASS_ACTIONS_HELPTEXT, STR_NULL, nullptr, [](auto) { MarkWholeScreenDirty(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_BOOL(              gui.adv_sig_bridge_tun_modes,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_ADV_SIG_BRIDGE_TUN_MODES, STR_CONFIG_SETTING_ADV_SIG_BRIDGE_TUN_MODES_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_BOOL(              gui.sort_track_types_by_speed,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_SORT_TRACK_TYPES_BY_SPEED, STR_CONFIG_SETTING_SORT_TRACK_TYPES_BY_SPEED_HELPTEXT, STR_NULL, nullptr, ChangeTrackTypeSortMode, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_BOOL(              gui.show_depot_sell_gui,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_SHOW_DEPOT_SELL_GUI, STR_CONFIG_SETTING_SHOW_DEPOT_SELL_GUI_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_BOOL(              gui.open_vehicle_gui_clone_share,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_OPEN_VEHICLE_GUI_CLONE_SHARE, STR_CONFIG_SETTING_OPEN_VEHICLE_GUI_CLONE_SHARE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_BOOL(              gui.show_newgrf_name,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_SHOW_NEWGRF_NAME, STR_CONFIG_SETTING_SHOW_NEWGRF_NAME_HELPTEXT, STR_NULL, nullptr, [](auto) { MarkWholeScreenDirty(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.show_wagon_intro_year,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_SHOW_WAGON_INTRO_YEAR, STR_CONFIG_SETTING_SHOW_WAGON_INTRO_YEAR_HELPTEXT, STR_NULL, nullptr, [](auto) { MarkWholeScreenDirty(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.linkgraph_colours, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 0,       0, 3, 0, STR_CONFIG_SETTING_LINKGRAPH_COLOURS, STR_CONFIG_SETTING_LINKGRAPH_COLOURS_HELPTEXT, STR_CONFIG_SETTING_LINKGRAPH_COLOURS_GREEN_TO_RED, nullptr, UpdateLinkgraphColours, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_VAR(              gui.vehicle_names, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 1,       0, 2, 0, STR_CONFIG_SETTING_VEHICLE_NAMES, STR_CONFIG_SETTING_VEHICLE_NAMES_HELPTEXT, STR_CONFIG_SETTING_VEHICLE_NAMES_TRADITIONAL, nullptr, [](auto) { MarkWholeScreenDirty(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_BOOL(              gui.shade_trees_on_slopes,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_SHADED_TREES_ON_SLOPES, STR_CONFIG_SETTING_SHADED_TREES_ON_SLOPES_HELPTEXT, STR_NULL, nullptr, [](auto) { MarkWholeScreenDirty(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_VAR(              gui.station_rating_tooltip_mode, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 1,       0, 2, 0, STR_CONFIG_SETTING_STATION_RATING_TOOLTIP_MODE, STR_CONFIG_SETTING_STATION_RATING_TOOLTIP_MODE_HELPTEXT, STR_CONFIG_SETTING_STATION_RATING_TOOLTIP_MODE_OFF, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.demolish_confirm_mode, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 2,       0, 2, 0, STR_CONFIG_SETTING_DEMOLISH_CONFIRM_MODE, STR_CONFIG_SETTING_DEMOLISH_CONFIRM_MODE_HELPTEXT, STR_CONFIG_SETTING_DEMOLISH_CONFIRM_MODE_OFF, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_BOOL(              gui.dual_pane_train_purchase_window,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_DUAL_PANE_TRAIN_PURCHASE_WINDOW, STR_CONFIG_SETTING_DUAL_PANE_TRAIN_PURCHASE_WINDOW_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.allow_hiding_waypoint_labels,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_ALLOW_HIDE_WAYPOINT_LABEL, STR_CONFIG_SETTING_ALLOW_HIDE_WAYPOINT_LABEL_HELPTEXT, STR_NULL, nullptr, [](auto) { MarkWholeScreenDirty(); InvalidateWindowClassesData(WC_WAYPOINT_VIEW, 0); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_ENUM(              gui.disable_water_animation, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 255,                              STR_CONFIG_SETTING_DISABLE_WATER_ANIMATION, STR_CONFIG_SETTING_DISABLE_WATER_ANIMATION_HELPTEXT,          nullptr, SpriteZoomMinChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr, _disable_water_animation),
SDTC_BOOL(              gui.show_order_occupancy_by_default,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_SHOW_ORDER_OCCUPANCY_BY_DEFAULT, STR_CONFIG_SETTING_SHOW_ORDER_OCCUPANCY_BY_DEFAULT_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_BOOL(              gui.show_order_management_button,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_SHOW_ORDER_MANAGEMENT_BY_DEFAULT, STR_CONFIG_SETTING_SHOW_ORDER_MANAGEMENT_BY_DEFAULT_HELPTEXT, STR_NULL, nullptr, [](auto) { InvalidateWindowClassesData(WC_VEHICLE_ORDERS); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_BOOL(              gui.show_group_hierarchy_name,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_SHOW_GROUP_HIERARCHY_NAME, STR_CONFIG_SETTING_SHOW_GROUP_HIERARCHY_NAME_HELPTEXT, STR_NULL, nullptr, [](auto) { InvalidateWindowClassesData(WC_GAME_OPTIONS); MarkWholeScreenDirty(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_BOOL(              gui.show_vehicle_group_hierarchy_name,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_SHOW_VEHICLE_GROUP_HIERARCHY_NAME, STR_CONFIG_SETTING_SHOW_VEHICLE_GROUP_HIERARCHY_NAME_HELPTEXT, STR_NULL, nullptr, [](auto) { MarkWholeScreenDirty(); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
#ifdef DEDICATED
SDTC_BOOL(              gui.show_date_in_logs,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
#endif
#ifndef DEDICATED
SDTC_BOOL(              gui.show_date_in_logs,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
#endif
SDTC_VAR(              gui.settings_restriction_mode, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 0,       0, 2, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.developer, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 1,       0, 2, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, DeveloperModeChanged, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_BOOL(              gui.newgrf_developer_tools,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, InvalidateNewGRFChangeWindows, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_BOOL(              gui.ai_developer_tools,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, [](auto) { InvalidateWindowClassesData(WC_AI_SETTINGS); }, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_BOOL(              gui.scenario_developer,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, InvalidateNewGRFChangeWindows, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              gui.newgrf_show_old_versions,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_VAR(              gui.newgrf_default_palette, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 1,       0, 1, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, UpdateNewGRFConfigPalette, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_BOOL(              gui.console_show_unlisted,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_BOOL(              gui.newgrf_disable_big_gui,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_VAR(              gui.console_backlog_timeout, SLE_UINT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 100,       10, 65500, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.console_backlog_length, SLE_UINT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 100,       10, 65500, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.refresh_rate, SLE_UINT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 60,       10, 1000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, true, nullptr),
SDTC_VAR(              gui.fast_forward_speed_limit, SLE_UINT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_0_IS_SPECIAL | SF_NO_NETWORK, 2500,       0, 50000, 10, STR_CONFIG_SETTING_FAST_FORWARD_SPEED_LIMIT, STR_CONFIG_SETTING_FAST_FORWARD_SPEED_LIMIT_HELPTEXT, STR_CONFIG_SETTING_FAST_FORWARD_SPEED_LIMIT_VAL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_BOOL(              sound.news_ticker,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_SOUND_TICKER, STR_CONFIG_SETTING_SOUND_TICKER_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              sound.news_full,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_SOUND_NEWS, STR_CONFIG_SETTING_SOUND_NEWS_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              sound.new_year,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_SOUND_NEW_YEAR, STR_CONFIG_SETTING_SOUND_NEW_YEAR_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              sound.confirm,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_SOUND_CONFIRM, STR_CONFIG_SETTING_SOUND_CONFIRM_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              sound.click_beep,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_SOUND_CLICK, STR_CONFIG_SETTING_SOUND_CLICK_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              sound.disaster,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_SOUND_DISASTER, STR_CONFIG_SETTING_SOUND_DISASTER_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              sound.vehicle,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_SOUND_VEHICLE, STR_CONFIG_SETTING_SOUND_VEHICLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              sound.ambient,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_SOUND_AMBIENT, STR_CONFIG_SETTING_SOUND_AMBIENT_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              music.playlist, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 0,       0, 5, 1, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_VAR(              music.music_vol, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 50,       0, 127, 1, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_VAR(              music.effect_vol, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 100,       0, 127, 1, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_LIST(              music.custom_1, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, nullptr,                                                                          SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_LIST(              music.custom_2, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, nullptr,                                                                          SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_BOOL(              music.playing,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_BOOL(              music.shuffle,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_BASIC, nullptr, false, nullptr),
SDTC_OMANY(              news_display.arrival_player, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 2,             2, _news_display,     STR_CONFIG_SETTING_NEWS_ARRIVAL_FIRST_VEHICLE_OWN, STR_CONFIG_SETTING_NEWS_ARRIVAL_FIRST_VEHICLE_OWN_HELPTEXT, STR_CONFIG_SETTING_NEWS_MESSAGES_OFF, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_OMANY(              news_display.arrival_other, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 1,             2, _news_display,     STR_CONFIG_SETTING_NEWS_ARRIVAL_FIRST_VEHICLE_OTHER, STR_CONFIG_SETTING_NEWS_ARRIVAL_FIRST_VEHICLE_OTHER_HELPTEXT, STR_CONFIG_SETTING_NEWS_MESSAGES_OFF, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_OMANY(              news_display.accident, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 2,             2, _news_display,     STR_CONFIG_SETTING_NEWS_ACCIDENTS_DISASTERS, STR_CONFIG_SETTING_NEWS_ACCIDENTS_DISASTERS_HELPTEXT, STR_CONFIG_SETTING_NEWS_MESSAGES_OFF, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_OMANY(              news_display.accident_other, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 2,             2, _news_display,     STR_CONFIG_SETTING_NEWS_ACCIDENT_OTHER, STR_CONFIG_SETTING_NEWS_ACCIDENT_OTHER_HELPTEXT, STR_CONFIG_SETTING_NEWS_MESSAGES_OFF, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_OMANY(              news_display.company_info, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 2,             2, _news_display,     STR_CONFIG_SETTING_NEWS_COMPANY_INFORMATION, STR_CONFIG_SETTING_NEWS_COMPANY_INFORMATION_HELPTEXT, STR_CONFIG_SETTING_NEWS_MESSAGES_OFF, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_OMANY(              news_display.open, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 1,             2, _news_display,     STR_CONFIG_SETTING_NEWS_INDUSTRY_OPEN, STR_CONFIG_SETTING_NEWS_INDUSTRY_OPEN_HELPTEXT, STR_CONFIG_SETTING_NEWS_MESSAGES_OFF, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_OMANY(              news_display.close, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 1,             2, _news_display,     STR_CONFIG_SETTING_NEWS_INDUSTRY_CLOSE, STR_CONFIG_SETTING_NEWS_INDUSTRY_CLOSE_HELPTEXT, STR_CONFIG_SETTING_NEWS_MESSAGES_OFF, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_OMANY(              news_display.economy, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 2,             2, _news_display,     STR_CONFIG_SETTING_NEWS_ECONOMY_CHANGES, STR_CONFIG_SETTING_NEWS_ECONOMY_CHANGES_HELPTEXT, STR_CONFIG_SETTING_NEWS_MESSAGES_OFF, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_OMANY(              news_display.production_player, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 1,             2, _news_display,     STR_CONFIG_SETTING_NEWS_INDUSTRY_CHANGES_COMPANY, STR_CONFIG_SETTING_NEWS_INDUSTRY_CHANGES_COMPANY_HELPTEXT, STR_CONFIG_SETTING_NEWS_MESSAGES_OFF, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_OMANY(              news_display.production_other, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 0,             2, _news_display,     STR_CONFIG_SETTING_NEWS_INDUSTRY_CHANGES_OTHER, STR_CONFIG_SETTING_NEWS_INDUSTRY_CHANGES_OTHER_HELPTEXT, STR_CONFIG_SETTING_NEWS_MESSAGES_OFF, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_OMANY(              news_display.production_nobody, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 0,             2, _news_display,     STR_CONFIG_SETTING_NEWS_INDUSTRY_CHANGES_UNSERVED, STR_CONFIG_SETTING_NEWS_INDUSTRY_CHANGES_UNSERVED_HELPTEXT, STR_CONFIG_SETTING_NEWS_MESSAGES_OFF, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_OMANY(              news_display.advice, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 2,             2, _news_display,     STR_CONFIG_SETTING_NEWS_ADVICE, STR_CONFIG_SETTING_NEWS_ADVICE_HELPTEXT, STR_CONFIG_SETTING_NEWS_MESSAGES_OFF, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_OMANY(              news_display.new_vehicles, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 2,             2, _news_display,     STR_CONFIG_SETTING_NEWS_NEW_VEHICLES, STR_CONFIG_SETTING_NEWS_NEW_VEHICLES_HELPTEXT, STR_CONFIG_SETTING_NEWS_MESSAGES_OFF, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_OMANY(              news_display.acceptance, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 2,             2, _news_display,     STR_CONFIG_SETTING_NEWS_CHANGES_ACCEPTANCE, STR_CONFIG_SETTING_NEWS_CHANGES_ACCEPTANCE_HELPTEXT, STR_CONFIG_SETTING_NEWS_MESSAGES_OFF, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_OMANY(              news_display.subsidies, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 1,             2, _news_display,     STR_CONFIG_SETTING_NEWS_SUBSIDIES, STR_CONFIG_SETTING_NEWS_SUBSIDIES_HELPTEXT, STR_CONFIG_SETTING_NEWS_MESSAGES_OFF, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_OMANY(              news_display.general, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 2,             2, _news_display,     STR_CONFIG_SETTING_NEWS_GENERAL_INFORMATION, STR_CONFIG_SETTING_NEWS_GENERAL_INFORMATION_HELPTEXT, STR_CONFIG_SETTING_NEWS_MESSAGES_OFF, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              scenario.multiple_buildings,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_SCENARIO_MULTIPLE_BUILDINGS, STR_CONFIG_SETTING_SCENARIO_MULTIPLE_BUILDINGS_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              scenario.house_ignore_dates,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_SCENARIO_HOUSE_IGNORE_DATES, STR_CONFIG_SETTING_SCENARIO_HOUSE_IGNORE_DATES_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              scenario.house_ignore_zones, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC | SF_GUI_DROPDOWN, 0,       0, 2, 1, STR_CONFIG_SETTING_SCENARIO_HOUSE_IGNORE_ZONES, STR_CONFIG_SETTING_SCENARIO_HOUSE_IGNORE_ZONES_HELPTEXT, STR_CONFIG_SETTING_SCENARIO_HOUSE_IGNORE_ZONES_OFF, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_BOOL(              scenario.house_ignore_grf,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                              STR_CONFIG_SETTING_SCENARIO_HOUSE_IGNORE_GRF, STR_CONFIG_SETTING_SCENARIO_HOUSE_IGNORE_GRF_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_ADVANCED, nullptr, false, nullptr),
SDTC_VAR(              gui.network_chat_box_width_pct, SLE_UINT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 40,       10, 100, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_VAR(              gui.network_chat_box_height, SLE_UINT8, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 25,       5, 255, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_VAR(              gui.network_chat_timeout, SLE_UINT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 20,       1, 65535, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDTC_BOOL(              gui.hide_industry_labels,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, true,                              STR_CONFIG_SETTING_GUI_HIDE_INDUSTRY_LABELS, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, nullptr),
SDT_BOOL(GameSettings, vehicle.pay_for_repair,        SF_NONE, true,                              STR_CONFIG_SETTING_PAY_FOR_REPAIR_VEHICLE, STR_CONFIG_SETTING_PAY_FOR_REPAIR_VEHICLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_VEHICLE_REPAIR_COST),        SC_EXPERT, nullptr, false, "vehicle_repair_cost.vehicle.pay_for_repair"),
SDT_VAR(GameSettings, vehicle.repair_cost, SLE_UINT8, SF_NONE, 100,       1, 255, 1, STR_CONFIG_SETTING_REPAIR_COST, STR_CONFIG_SETTING_REPAIR_COST_HELPTEXT, STR_JUST_INT, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(XSLFTO_AND, XSLFI_VEHICLE_REPAIR_COST),        SC_EXPERT, nullptr, false, "vehicle_repair_cost.vehicle.repair_cost"),
SDT_VAR(GameSettings, debug.chicken_bits, SLE_UINT32, SF_NOT_IN_CONFIG | SF_NO_NEWGAME, 0,       0, 0xFFFFFFFF, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "debug.chicken_bits"),
SDT_VAR(GameSettings, debug.newgrf_optimiser_flags, SLE_UINT32, SF_NOT_IN_CONFIG | SF_NO_NEWGAME | SF_NO_NETWORK, 0,       0, 0xFFFFFFFF, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(),        SC_EXPERT, nullptr, false, "debug.newgrf_optimiser_flags"),
};
/* win32_v.cpp only settings */
#if defined(_WIN32) && !defined(DEDICATED)
extern bool _window_maximize;
static const SettingTable _win32_settings{
SDTG_BOOL("window_maximize",        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, _window_maximize, false,                        STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_BASIC, nullptr, true, nullptr),
};
#endif /* _WIN32 */
static const SettingTable _window_settings{
SDT_BOOL(WindowDescPreferences, pref_sticky,        SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, false,                        STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(WindowDescPreferences, pref_width, SLE_INT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 0, 0, 32000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, false, nullptr),
SDT_VAR(WindowDescPreferences, pref_height, SLE_INT16, SF_NOT_IN_SAVE | SF_NO_NETWORK_SYNC, 0, 0, 32000, 0, STR_NULL, STR_CONFIG_SETTING_NO_EXPLANATION_AVAILABLE_HELPTEXT, STR_NULL, nullptr, nullptr, SL_MIN_VERSION, SL_MAX_VERSION, SlXvFeatureTest(), SC_ADVANCED, nullptr, false, nullptr),
};
static_assert(12 <= MAX_SLE_INT16, "Maximum value for CompanySettings.engine_renew_months exceeds storage size");
static_assert(2000000 <= MAX_SLE_UINT, "Maximum value for CompanySettings.engine_renew_money exceeds storage size");
static_assert(800 <= MAX_SLE_UINT16, "Maximum value for CompanySettings.vehicle.servint_trains exceeds storage size");
static_assert(800 <= MAX_SLE_UINT16, "Maximum value for CompanySettings.vehicle.servint_roadveh exceeds storage size");
static_assert(800 <= MAX_SLE_UINT16, "Maximum value for CompanySettings.vehicle.servint_ships exceeds storage size");
static_assert(800 <= MAX_SLE_UINT16, "Maximum value for CompanySettings.vehicle.servint_aircraft exceeds storage size");
static_assert(100 <= MAX_SLE_UINT8, "Maximum value for CompanySettings.auto_timetable_separation_rate exceeds storage size");
static_assert(1000 <= MAX_SLE_UINT16, "Maximum value for CompanySettings.timetable_autofill_rounding exceeds storage size");
static_assert(100 <= MAX_SLE_UINT8, "Maximum value for CompanySettings.order_occupancy_smoothness exceeds storage size");
static_assert(16 <= MAX_SLE_UINT8, "Maximum value for CompanySettings.old_simulated_wormhole_signals exceeds storage size");
static_assert(UINT16_MAX <= MAX_SLE_UINT16, "Maximum value for CurrencySpec.rate exceeds storage size");
static_assert(MAX_YEAR <= MAX_SLE_INT32, "Maximum value for CurrencySpec.to_euro exceeds storage size");
static_assert(SP_CUSTOM <= MAX_SLE_UINT8, "Maximum value for _old_diff_level exceeds storage size");
static_assert(CURRENCY_END - 1 <= MAX_SLE_UINT8, "Maximum value for GameSettings.locale.currency exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for _old_units exceeds storage size");
static_assert(255 <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.town_name exceeds storage size");
static_assert(3 <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.landscape exceeds storage size");
static_assert(UINT8_MAX <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.snow_line_height exceeds storage size");
static_assert(6 <= MAX_SLE_UINT8, "Maximum value for gui.autosave exceeds storage size");
static_assert(1 <= MAX_SLE_UINT8, "Maximum value for GameSettings.vehicle.road_side exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for _support8bpp exceeds storage size");
#ifdef HAS_TRUETYPE_FONT
static_assert(72 <= MAX_SLE_UINT, "Maximum value for _fcsettings.small.size exceeds storage size");
#endif
#ifdef HAS_TRUETYPE_FONT
static_assert(72 <= MAX_SLE_UINT, "Maximum value for _fcsettings.medium.size exceeds storage size");
#endif
#ifdef HAS_TRUETYPE_FONT
static_assert(72 <= MAX_SLE_UINT, "Maximum value for _fcsettings.large.size exceeds storage size");
#endif
#ifdef HAS_TRUETYPE_FONT
static_assert(72 <= MAX_SLE_UINT, "Maximum value for _fcsettings.mono.size exceeds storage size");
#endif
static_assert(512 <= MAX_SLE_UINT, "Maximum value for _sprite_cache_size exceeds storage size");
static_assert(0xFFFFFFFF <= MAX_SLE_UINT32, "Maximum value for _company_manager_face exceeds storage size");
static_assert(0xFFFFFFFF <= MAX_SLE_UINT, "Maximum value for _transparency_opt_base exceeds storage size");
static_assert(0xFFFFFFFF <= MAX_SLE_UINT, "Maximum value for _transparency_opt_extra exceeds storage size");
static_assert(0xFFFFFFFF <= MAX_SLE_UINT, "Maximum value for _transparency_lock_base exceeds storage size");
static_assert(0xFFFFFFFF <= MAX_SLE_UINT, "Maximum value for _transparency_lock_extra exceeds storage size");
static_assert(0xFF <= MAX_SLE_UINT, "Maximum value for _invisibility_opt exceeds storage size");
static_assert(UINT32_MAX <= MAX_SLE_UINT32, "Maximum value for _settings_client.gui.last_newgrf_count exceeds storage size");
static_assert(ZOOM_LVL_OUT_4X <= MAX_SLE_INT8, "Maximum value for _gui_zoom_cfg exceeds storage size");
static_assert(ZOOM_LVL_OUT_4X <= MAX_SLE_INT8, "Maximum value for _font_zoom_cfg exceeds storage size");
static_assert(ZEM_END - 1 <= MAX_SLE_UINT8, "Maximum value for _zoning.inner exceeds storage size");
static_assert(ZEM_END - 1 <= MAX_SLE_UINT8, "Maximum value for _zoning.outer exceeds storage size");
static_assert(1 <= MAX_SLE_UINT8, "Maximum value for _cargo_payment_x_mode exceeds storage size");
static_assert(100 <= MAX_SLE_UINT16, "Maximum value for network.sync_freq exceeds storage size");
static_assert(100 <= MAX_SLE_UINT8, "Maximum value for network.frame_freq exceeds storage size");
static_assert(65535 <= MAX_SLE_UINT16, "Maximum value for network.commands_per_frame exceeds storage size");
static_assert(65535 <= MAX_SLE_UINT16, "Maximum value for network.max_commands_in_queue exceeds storage size");
static_assert(65535 <= MAX_SLE_UINT16, "Maximum value for network.bytes_per_frame exceeds storage size");
static_assert(65535 <= MAX_SLE_UINT16, "Maximum value for network.bytes_per_frame_burst exceeds storage size");
static_assert(32000 <= MAX_SLE_UINT16, "Maximum value for network.max_init_time exceeds storage size");
static_assert(32000 <= MAX_SLE_UINT16, "Maximum value for network.max_join_time exceeds storage size");
static_assert(32000 <= MAX_SLE_UINT16, "Maximum value for network.max_download_time exceeds storage size");
static_assert(32000 <= MAX_SLE_UINT16, "Maximum value for network.max_password_time exceeds storage size");
static_assert(32000 <= MAX_SLE_UINT16, "Maximum value for network.max_lag_time exceeds storage size");
static_assert(65535 <= MAX_SLE_UINT16, "Maximum value for network.server_port exceeds storage size");
static_assert(65535 <= MAX_SLE_UINT16, "Maximum value for network.server_admin_port exceeds storage size");
static_assert(SERVER_GAME_TYPE_INVITE_ONLY <= MAX_SLE_UINT8, "Maximum value for network.server_game_type exceeds storage size");
static_assert(240 <= MAX_SLE_UINT8, "Maximum value for network.autoclean_unprotected exceeds storage size");
static_assert(240 <= MAX_SLE_UINT8, "Maximum value for network.autoclean_protected exceeds storage size");
static_assert(240 <= MAX_SLE_UINT8, "Maximum value for network.autoclean_novehicles exceeds storage size");
static_assert(MAX_COMPANIES <= MAX_SLE_UINT8, "Maximum value for network.max_companies exceeds storage size");
static_assert(MAX_CLIENTS <= MAX_SLE_UINT8, "Maximum value for network.max_clients exceeds storage size");
static_assert(MAX_YEAR <= MAX_SLE_INT32, "Maximum value for network.restart_game_year exceeds storage size");
static_assert(MAX_CLIENTS <= MAX_SLE_UINT8, "Maximum value for network.min_active_clients exceeds storage size");
static_assert(URS_ALLOW <= MAX_SLE_UINT8, "Maximum value for network.use_relay_service exceeds storage size");
static_assert(MAX_COMPANIES - 1 <= MAX_SLE_UINT8, "Maximum value for GameSettings.difficulty.max_no_competitors exceeds storage size");
static_assert(3 <= MAX_SLE_UINT8, "Maximum value for GameSettings.difficulty.competitor_start_time exceeds storage size");
static_assert(4 <= MAX_SLE_UINT8, "Maximum value for GameSettings.difficulty.number_towns exceeds storage size");
static_assert(ID_END - 1 <= MAX_SLE_UINT8, "Maximum value for GameSettings.difficulty.industry_density exceeds storage size");
static_assert(2000000000 <= MAX_SLE_UINT32, "Maximum value for GameSettings.difficulty.max_loan exceeds storage size");
static_assert(4 <= MAX_SLE_UINT8, "Maximum value for GameSettings.difficulty.initial_interest exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for GameSettings.difficulty.vehicle_costs exceeds storage size");
static_assert(8 <= MAX_SLE_UINT8, "Maximum value for GameSettings.difficulty.vehicle_costs_in_depot exceeds storage size");
static_assert(8 <= MAX_SLE_UINT8, "Maximum value for GameSettings.difficulty.vehicle_costs_when_stopped exceeds storage size");
static_assert(4 <= MAX_SLE_UINT8, "Maximum value for GameSettings.difficulty.competitor_speed exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for GameSettings.difficulty.competitor_intelligence exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for GameSettings.difficulty.vehicle_breakdowns exceeds storage size");
static_assert(3 <= MAX_SLE_UINT8, "Maximum value for GameSettings.difficulty.subsidy_multiplier exceeds storage size");
static_assert(5000 <= MAX_SLE_UINT16, "Maximum value for GameSettings.difficulty.subsidy_duration exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for GameSettings.difficulty.construction_cost exceeds storage size");
static_assert(5 <= MAX_SLE_UINT8, "Maximum value for GameSettings.difficulty.terrain_type exceeds storage size");
static_assert(4 <= MAX_SLE_UINT8, "Maximum value for GameSettings.difficulty.quantity_sea_lakes exceeds storage size");
static_assert(3 <= MAX_SLE_UINT8, "Maximum value for _old_diff_level exceeds storage size");
static_assert(100 <= MAX_SLE_UINT8, "Maximum value for GameSettings.order.old_timetable_separation_rate exceeds storage size");
static_assert(255 <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.town_name exceeds storage size");
static_assert(3 <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.landscape exceeds storage size");
static_assert(1 <= MAX_SLE_UINT8, "Maximum value for GameSettings.vehicle.road_side exceeds storage size");
static_assert(MAX_MAP_HEIGHT_LIMIT <= MAX_SLE_UINT8, "Maximum value for GameSettings.construction.map_height_limit exceeds storage size");
static_assert(MAX_MAP_HEIGHT_LIMIT <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.heightmap_height exceeds storage size");
static_assert(3 <= MAX_SLE_UINT8, "Maximum value for GameSettings.construction.command_pause_level exceeds storage size");
static_assert(1 << 30 <= MAX_SLE_UINT32, "Maximum value for GameSettings.construction.terraform_per_64k_frames exceeds storage size");
static_assert(1 << 15 <= MAX_SLE_UINT16, "Maximum value for GameSettings.construction.terraform_frame_burst exceeds storage size");
static_assert(1 << 30 <= MAX_SLE_UINT32, "Maximum value for GameSettings.construction.clear_per_64k_frames exceeds storage size");
static_assert(1 << 15 <= MAX_SLE_UINT16, "Maximum value for GameSettings.construction.clear_frame_burst exceeds storage size");
static_assert(1 << 30 <= MAX_SLE_UINT32, "Maximum value for GameSettings.construction.tree_per_64k_frames exceeds storage size");
static_assert(1 << 15 <= MAX_SLE_UINT16, "Maximum value for GameSettings.construction.tree_frame_burst exceeds storage size");
static_assert(1 << 30 <= MAX_SLE_UINT32, "Maximum value for GameSettings.construction.purchase_land_per_64k_frames exceeds storage size");
static_assert(1 << 15 <= MAX_SLE_UINT16, "Maximum value for GameSettings.construction.purchase_land_frame_burst exceeds storage size");
static_assert(1 << 30 <= MAX_SLE_UINT32, "Maximum value for GameSettings.construction.build_object_per_64k_frames exceeds storage size");
static_assert(1 << 15 <= MAX_SLE_UINT16, "Maximum value for GameSettings.construction.build_object_frame_burst exceeds storage size");
static_assert(4096 <= MAX_SLE_UINT16, "Maximum value for GameSettings.construction.max_bridge_length exceeds storage size");
static_assert(MAX_TILE_HEIGHT <= MAX_SLE_UINT8, "Maximum value for GameSettings.construction.max_bridge_height exceeds storage size");
static_assert(4096 <= MAX_SLE_UINT16, "Maximum value for GameSettings.construction.max_tunnel_length exceeds storage size");
static_assert(16 <= MAX_SLE_UINT8, "Maximum value for GameSettings.construction.old_simulated_wormhole_signals exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for GameSettings.construction.train_signal_side exceeds storage size");
static_assert(NUM_TLS - 1 <= MAX_SLE_UINT8, "Maximum value for GameSettings.economy.town_layout exceeds storage size");
static_assert(TF_END - 1 <= MAX_SLE_UINT8, "Maximum value for GameSettings.economy.found_town exceeds storage size");
static_assert(TTM_END - 1 <= MAX_SLE_UINT8, "Maximum value for GameSettings.economy.town_build_tunnels exceeds storage size");
static_assert(8 <= MAX_SLE_UINT8, "Maximum value for GameSettings.economy.town_max_road_slope exceeds storage size");
static_assert(TCGM_END - 1 <= MAX_SLE_UINT8, "Maximum value for GameSettings.economy.town_cargogen_mode exceeds storage size");
static_assert(MAX_MAP_HEIGHT_LIMIT <= MAX_SLE_UINT8, "Maximum value for GameSettings.economy.max_town_heightlevel exceeds storage size");
static_assert(400 <= MAX_SLE_UINT16, "Maximum value for GameSettings.economy.min_town_land_area exceeds storage size");
static_assert(400 <= MAX_SLE_UINT16, "Maximum value for GameSettings.economy.min_city_land_area exceeds storage size");
static_assert(32 <= MAX_SLE_UINT16, "Maximum value for GameSettings.linkgraph.recalc_interval exceeds storage size");
static_assert(4096 <= MAX_SLE_UINT16, "Maximum value for GameSettings.linkgraph.recalc_time exceeds storage size");
static_assert(64 <= MAX_SLE_UINT8, "Maximum value for GameSettings.linkgraph.accuracy exceeds storage size");
static_assert(255 <= MAX_SLE_UINT8, "Maximum value for GameSettings.linkgraph.demand_distance exceeds storage size");
static_assert(100 <= MAX_SLE_UINT8, "Maximum value for GameSettings.linkgraph.demand_size exceeds storage size");
static_assert(250 <= MAX_SLE_UINT8, "Maximum value for GameSettings.linkgraph.short_path_saturation exceeds storage size");
static_assert(1000 <= MAX_SLE_UINT16, "Maximum value for GameSettings.linkgraph.aircraft_link_scale exceeds storage size");
static_assert(+8 <= MAX_SLE_INT8, "Maximum value for GameSettings.economy.old_town_cargo_factor exceeds storage size");
static_assert(+80 <= MAX_SLE_INT16, "Maximum value for GameSettings.economy.town_cargo_scale_factor exceeds storage size");
static_assert(+50 <= MAX_SLE_INT16, "Maximum value for GameSettings.economy.industry_cargo_scale_factor exceeds storage size");
static_assert(1 <= MAX_SLE_UINT8, "Maximum value for GameSettings.vehicle.train_acceleration_model exceeds storage size");
static_assert(1 <= MAX_SLE_UINT8, "Maximum value for GameSettings.vehicle.roadveh_acceleration_model exceeds storage size");
static_assert(10 <= MAX_SLE_UINT8, "Maximum value for GameSettings.vehicle.train_slope_steepness exceeds storage size");
static_assert(10 <= MAX_SLE_UINT8, "Maximum value for GameSettings.vehicle.roadveh_slope_steepness exceeds storage size");
static_assert(500 <= MAX_SLE_UINT16, "Maximum value for GameSettings.vehicle.through_load_speed_limit exceeds storage size");
static_assert(64 <= MAX_SLE_UINT8, "Maximum value for GameSettings.vehicle.max_train_length exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for GameSettings.vehicle.smoke_amount exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for GameSettings.pf.reroute_rv_on_layout_change exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for GameSettings.pf.pathfinder_for_trains exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for GameSettings.pf.pathfinder_for_roadvehs exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for GameSettings.pf.pathfinder_for_ships exceeds storage size");
static_assert(MAX_YEAR <= MAX_SLE_INT32, "Maximum value for GameSettings.vehicle.no_expire_vehicles_after exceeds storage size");
static_assert(MAX_YEAR <= MAX_SLE_INT32, "Maximum value for GameSettings.vehicle.no_introduce_vehicles_after exceeds storage size");
static_assert(10000 <= MAX_SLE_UINT16, "Maximum value for GameSettings.vehicle.max_trains exceeds storage size");
static_assert(10000 <= MAX_SLE_UINT16, "Maximum value for GameSettings.vehicle.max_roadveh exceeds storage size");
static_assert(10000 <= MAX_SLE_UINT16, "Maximum value for GameSettings.vehicle.max_aircraft exceeds storage size");
static_assert(10000 <= MAX_SLE_UINT16, "Maximum value for GameSettings.vehicle.max_ships exceeds storage size");
static_assert(800 <= MAX_SLE_UINT16, "Maximum value for _old_vds.servint_trains exceeds storage size");
static_assert(800 <= MAX_SLE_UINT16, "Maximum value for _old_vds.servint_roadveh exceeds storage size");
static_assert(800 <= MAX_SLE_UINT16, "Maximum value for _old_vds.servint_ships exceeds storage size");
static_assert(800 <= MAX_SLE_UINT16, "Maximum value for _old_vds.servint_aircraft exceeds storage size");
static_assert(255 <= MAX_SLE_UINT8, "Maximum value for GameSettings.vehicle.freight_trains exceeds storage size");
static_assert(4 <= MAX_SLE_UINT8, "Maximum value for GameSettings.vehicle.plane_speed exceeds storage size");
static_assert(8 <= MAX_SLE_UINT8, "Maximum value for GameSettings.vehicle.plane_taxi_speed exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for GameSettings.vehicle.plane_crashes exceeds storage size");
static_assert(64 <= MAX_SLE_UINT8, "Maximum value for GameSettings.station.station_spread exceeds storage size");
static_assert(5 <= MAX_SLE_UINT8, "Maximum value for GameSettings.station.catchment_increase exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for GameSettings.construction.purchase_land_permitted exceeds storage size");
static_assert(MAX_YEAR <= MAX_SLE_INT32, "Maximum value for GameSettings.construction.no_expire_objects_after exceeds storage size");
static_assert(125 <= MAX_SLE_UINT8, "Maximum value for GameSettings.economy.day_length_factor exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for GameSettings.construction.raw_industry_construction exceeds storage size");
static_assert(4 <= MAX_SLE_UINT8, "Maximum value for GameSettings.construction.industry_platform exceeds storage size");
static_assert(MAX_SNOWLINE_HEIGHT <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.snow_line_height exceeds storage size");
static_assert(MAX_RAINFOREST_HEIGHT <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.rainforest_line_height exceeds storage size");
static_assert(1 <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.climate_threshold_mode exceeds storage size");
static_assert(100 <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.snow_coverage exceeds storage size");
static_assert(100 <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.desert_coverage exceeds storage size");
static_assert(MAX_YEAR <= MAX_SLE_INT32, "Maximum value for GameSettings.game_creation.starting_year exceeds storage size");
static_assert(MAX_YEAR - 1 <= MAX_SLE_INT32, "Maximum value for GameSettings.game_creation.ending_year exceeds storage size");
static_assert(ET_END - 1 <= MAX_SLE_UINT8, "Maximum value for GameSettings.economy.type exceeds storage size");
static_assert(255 <= MAX_SLE_UINT8, "Maximum value for GameSettings.economy.min_years_for_shares exceeds storage size");
static_assert(100 <= MAX_SLE_UINT8, "Maximum value for GameSettings.economy.feeder_payment_share exceeds storage size");
static_assert(4 <= MAX_SLE_INT8, "Maximum value for GameSettings.economy.town_growth_rate exceeds storage size");
static_assert(255 <= MAX_SLE_UINT16, "Maximum value for GameSettings.economy.town_zone_0_mult exceeds storage size");
static_assert(255 <= MAX_SLE_UINT16, "Maximum value for GameSettings.economy.town_zone_1_mult exceeds storage size");
static_assert(255 <= MAX_SLE_UINT16, "Maximum value for GameSettings.economy.town_zone_2_mult exceeds storage size");
static_assert(255 <= MAX_SLE_UINT16, "Maximum value for GameSettings.economy.town_zone_3_mult exceeds storage size");
static_assert(255 <= MAX_SLE_UINT16, "Maximum value for GameSettings.economy.town_zone_4_mult exceeds storage size");
static_assert(255 <= MAX_SLE_UINT16, "Maximum value for GameSettings.economy.city_zone_0_mult exceeds storage size");
static_assert(255 <= MAX_SLE_UINT16, "Maximum value for GameSettings.economy.city_zone_1_mult exceeds storage size");
static_assert(255 <= MAX_SLE_UINT16, "Maximum value for GameSettings.economy.city_zone_2_mult exceeds storage size");
static_assert(255 <= MAX_SLE_UINT16, "Maximum value for GameSettings.economy.city_zone_3_mult exceeds storage size");
static_assert(255 <= MAX_SLE_UINT16, "Maximum value for GameSettings.economy.city_zone_4_mult exceeds storage size");
static_assert(100 <= MAX_SLE_UINT8, "Maximum value for GameSettings.economy.town_growth_cargo_transported exceeds storage size");
static_assert(255 <= MAX_SLE_UINT8, "Maximum value for GameSettings.economy.larger_towns exceeds storage size");
static_assert(10 <= MAX_SLE_UINT8, "Maximum value for GameSettings.economy.initial_city_size exceeds storage size");
static_assert(500 <= MAX_SLE_UINT16, "Maximum value for GameSettings.economy.town_min_distance exceeds storage size");
static_assert(4096 <= MAX_SLE_UINT16, "Maximum value for GameSettings.construction.maximum_signal_evaluations exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.economy.sharing_fee[0] exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.economy.sharing_fee[1] exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.economy.sharing_fee[2] exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.economy.sharing_fee[3] exceeds storage size");
static_assert(SP_HARD <= MAX_SLE_UINT8, "Maximum value for GameSettings.script.settings_profile exceeds storage size");
static_assert(250000 <= MAX_SLE_UINT32, "Maximum value for GameSettings.script.script_max_opcode_till_suspend exceeds storage size");
static_assert(8192 <= MAX_SLE_UINT32, "Maximum value for GameSettings.script.script_max_memory_megabytes exceeds storage size");
static_assert(100 <= MAX_SLE_UINT8, "Maximum value for GameSettings.vehicle.extend_vehicle_life exceeds storage size");
static_assert(60 <= MAX_SLE_UINT8, "Maximum value for GameSettings.economy.dist_local_authority exceeds storage size");
static_assert(255 <= MAX_SLE_UINT8, "Maximum value for GameSettings.pf.wait_oneway_signal exceeds storage size");
static_assert(255 <= MAX_SLE_UINT8, "Maximum value for GameSettings.pf.wait_twoway_signal exceeds storage size");
static_assert(65535 <= MAX_SLE_UINT16, "Maximum value for GameSettings.economy.town_noise_population[0] exceeds storage size");
static_assert(65535 <= MAX_SLE_UINT16, "Maximum value for GameSettings.economy.town_noise_population[1] exceeds storage size");
static_assert(65535 <= MAX_SLE_UINT16, "Maximum value for GameSettings.economy.town_noise_population[2] exceeds storage size");
static_assert(1000 <= MAX_SLE_UINT16, "Maximum value for GameSettings.economy.random_road_reconstruction exceeds storage size");
static_assert(255 <= MAX_SLE_UINT8, "Maximum value for GameSettings.pf.wait_for_pbs_path exceeds storage size");
static_assert(255 <= MAX_SLE_UINT8, "Maximum value for GameSettings.pf.path_backoff_interval exceeds storage size");
static_assert(100000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.npf.npf_max_search_nodes exceeds storage size");
static_assert(100000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.npf.npf_rail_firstred_penalty exceeds storage size");
static_assert(100000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.npf.npf_rail_firstred_exit_penalty exceeds storage size");
static_assert(100000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.npf.npf_rail_lastred_penalty exceeds storage size");
static_assert(100000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.npf.npf_rail_station_penalty exceeds storage size");
static_assert(100000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.npf.npf_rail_slope_penalty exceeds storage size");
static_assert(100000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.npf.npf_rail_curve_penalty exceeds storage size");
static_assert(100000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.npf.npf_rail_depot_reverse_penalty exceeds storage size");
static_assert(100000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.npf.npf_rail_pbs_cross_penalty exceeds storage size");
static_assert(100000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.npf.npf_rail_pbs_signal_back_penalty exceeds storage size");
static_assert(100000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.npf.npf_buoy_penalty exceeds storage size");
static_assert(100000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.npf.npf_water_curve_penalty exceeds storage size");
static_assert(100000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.npf.npf_road_curve_penalty exceeds storage size");
static_assert(100000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.npf.npf_crossing_penalty exceeds storage size");
static_assert(100000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.npf.npf_road_drive_through_penalty exceeds storage size");
static_assert(100000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.npf.npf_road_dt_occupied_penalty exceeds storage size");
static_assert(100000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.npf.npf_road_bay_occupied_penalty exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.npf.maximum_go_to_depot_penalty exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.max_search_nodes exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.rail_firstred_penalty exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.rail_firstred_exit_penalty exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.rail_lastred_penalty exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.rail_lastred_exit_penalty exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.rail_station_penalty exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.rail_slope_penalty exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.rail_curve45_penalty exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.rail_curve90_penalty exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.rail_depot_reverse_penalty exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.rail_crossing_penalty exceeds storage size");
static_assert(100 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.rail_look_ahead_max_signals exceeds storage size");
static_assert(1000000 <= MAX_SLE_INT, "Maximum value for GameSettings.pf.yapf.rail_look_ahead_signal_p0 exceeds storage size");
static_assert(1000000 <= MAX_SLE_INT, "Maximum value for GameSettings.pf.yapf.rail_look_ahead_signal_p1 exceeds storage size");
static_assert(1000000 <= MAX_SLE_INT, "Maximum value for GameSettings.pf.yapf.rail_look_ahead_signal_p2 exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.rail_pbs_cross_penalty exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.rail_pbs_station_penalty exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.rail_pbs_signal_back_penalty exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.rail_doubleslip_penalty exceeds storage size");
static_assert(20000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.rail_longer_platform_penalty exceeds storage size");
static_assert(20000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.rail_longer_platform_per_tile_penalty exceeds storage size");
static_assert(20000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.rail_shorter_platform_penalty exceeds storage size");
static_assert(20000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.rail_shorter_platform_per_tile_penalty exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.road_slope_penalty exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.road_curve_penalty exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.road_crossing_penalty exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.road_stop_penalty exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.road_stop_occupied_penalty exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.road_stop_bay_occupied_penalty exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.maximum_go_to_depot_penalty exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.ship_curve45_penalty exceeds storage size");
static_assert(1000000 <= MAX_SLE_UINT, "Maximum value for GameSettings.pf.yapf.ship_curve90_penalty exceeds storage size");
static_assert(100 <= MAX_SLE_UINT8, "Maximum value for GameSettings.order.old_occupancy_smoothness exceeds storage size");
static_assert(1 <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.land_generator exceeds storage size");
static_assert(128 <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.oil_refinery_limit exceeds storage size");
static_assert(TGEN_SMOOTHNESS_END - 1 <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.tgen_smoothness exceeds storage size");
static_assert(5 <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.variety exceeds storage size");
static_assert(UINT32_MAX <= MAX_SLE_UINT32, "Maximum value for GameSettings.game_creation.generation_seed exceeds storage size");
static_assert(UINT32_MAX <= MAX_SLE_UINT32, "Maximum value for GameSettings.game_creation.generation_unique_id exceeds storage size");
static_assert(3 <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.tree_placer exceeds storage size");
static_assert(1 <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.heightmap_rotation exceeds storage size");
static_assert(15 <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.se_flat_world_height exceeds storage size");
static_assert(MAX_MAP_SIZE_BITS <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.map_x exceeds storage size");
static_assert(MAX_MAP_SIZE_BITS <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.map_y exceeds storage size");
static_assert(16 <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.water_borders exceeds storage size");
static_assert(5000 <= MAX_SLE_UINT16, "Maximum value for GameSettings.game_creation.custom_town_number exceeds storage size");
static_assert(64000 <= MAX_SLE_UINT16, "Maximum value for GameSettings.game_creation.custom_industry_number exceeds storage size");
static_assert(3 <= MAX_SLE_UINT8, "Maximum value for GameSettings.construction.extra_tree_placement exceeds storage size");
static_assert(64 <= MAX_SLE_UINT8, "Maximum value for GameSettings.construction.trees_around_snow_line_range exceeds storage size");
static_assert(100 <= MAX_SLE_UINT8, "Maximum value for GameSettings.construction.trees_around_snow_line_dynamic_range exceeds storage size");
static_assert(4 <= MAX_SLE_UINT8, "Maximum value for GameSettings.construction.tree_growth_rate exceeds storage size");
static_assert(MAX_MAP_HEIGHT_LIMIT <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.custom_terrain_type exceeds storage size");
static_assert(CUSTOM_SEA_LEVEL_MAX_PERCENTAGE <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.custom_sea_level exceeds storage size");
static_assert(255 <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.min_river_length exceeds storage size");
static_assert(255 <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.river_route_random exceeds storage size");
static_assert(51 <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.river_tropics_width exceeds storage size");
static_assert(51 <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.lake_tropics_width exceeds storage size");
static_assert(3 <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.coast_tropics_width exceeds storage size");
static_assert(100 <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.lake_size exceeds storage size");
static_assert(5 <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.amount_of_rivers exceeds storage size");
static_assert(255 <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.amount_of_rocks exceeds storage size");
static_assert(25 <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.height_affects_rocks exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for GameSettings.game_creation.build_public_roads exceeds storage size");
static_assert(CURRENCY_END - 1 <= MAX_SLE_UINT8, "Maximum value for GameSettings.locale.currency exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for _old_units exceeds storage size");
static_assert(3 <= MAX_SLE_UINT8, "Maximum value for GameSettings.locale.units_velocity exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for GameSettings.locale.units_power exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for GameSettings.locale.units_weight exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for GameSettings.locale.units_volume exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for GameSettings.locale.units_force exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for GameSettings.locale.units_height exceeds storage size");
static_assert(6 <= MAX_SLE_UINT8, "Maximum value for gui.autosave exceeds storage size");
static_assert(4000 <= MAX_SLE_UINT16, "Maximum value for gui.autosave_custom_days exceeds storage size");
static_assert(8000 <= MAX_SLE_UINT16, "Maximum value for gui.autosave_custom_minutes exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for gui.date_format_in_default_names exceeds storage size");
static_assert(3 <= MAX_SLE_UINT8, "Maximum value for gui.auto_scrolling exceeds storage size");
#ifdef __EMSCRIPTEN__
static_assert(3 <= MAX_SLE_UINT8, "Maximum value for gui.scroll_mode exceeds storage size");
#endif
#ifndef __EMSCRIPTEN__
static_assert(3 <= MAX_SLE_UINT8, "Maximum value for gui.scroll_mode exceeds storage size");
#endif
#ifdef __APPLE__
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for gui.right_mouse_btn_emulation exceeds storage size");
#endif
static_assert(20 <= MAX_SLE_UINT8, "Maximum value for gui.errmsg_duration exceeds storage size");
static_assert(6000 <= MAX_SLE_UINT16, "Maximum value for gui.hover_delay_ms exceeds storage size");
static_assert(3 <= MAX_SLE_UINT8, "Maximum value for gui.osk_activation exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for gui.toolbar_pos exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for gui.statusbar_pos exceeds storage size");
static_assert(32 <= MAX_SLE_UINT8, "Maximum value for gui.window_snap_radius exceeds storage size");
static_assert(255 <= MAX_SLE_UINT8, "Maximum value for gui.window_soft_limit exceeds storage size");
static_assert(ZOOM_LVL_OUT_4X <= MAX_SLE_UINT8, "Maximum value for gui.zoom_min exceeds storage size");
static_assert(ZOOM_LVL_MAX <= MAX_SLE_UINT8, "Maximum value for gui.zoom_max exceeds storage size");
static_assert(ZOOM_LVL_OUT_4X <= MAX_SLE_UINT8, "Maximum value for gui.sprite_zoom_min exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for gui.smallmap_land_colour exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for gui.liveries exceeds storage size");
static_assert(COLOUR_END <= MAX_SLE_UINT8, "Maximum value for gui.starting_colour exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for gui.scrollwheel_scrolling exceeds storage size");
static_assert(15 <= MAX_SLE_UINT8, "Maximum value for gui.scrollwheel_multiplier exceeds storage size");
static_assert(1 <= MAX_SLE_UINT32, "Maximum value for gui.show_vehicle_route exceeds storage size");
static_assert(10 <= MAX_SLE_UINT32, "Maximum value for gui.dash_level_of_route_lines exceeds storage size");
static_assert(3 <= MAX_SLE_UINT32, "Maximum value for gui.show_scrolling_viewport_on_map exceeds storage size");
static_assert(2 <= MAX_SLE_UINT32, "Maximum value for gui.default_viewport_map_mode exceeds storage size");
static_assert(2 <= MAX_SLE_UINT32, "Maximum value for gui.action_when_viewport_map_is_dblclicked exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for gui.advanced_vehicle_list exceeds storage size");
static_assert(8192 <= MAX_SLE_UINT16, "Maximum value for gui.ticks_per_minute exceeds storage size");
static_assert(1439 <= MAX_SLE_UINT16, "Maximum value for gui.clock_offset exceeds storage size");
static_assert(8192 <= MAX_SLE_UINT16, "Maximum value for GameSettings.game_time.ticks_per_minute exceeds storage size");
static_assert(1439 <= MAX_SLE_UINT16, "Maximum value for GameSettings.game_time.clock_offset exceeds storage size");
static_assert(3 <= MAX_SLE_UINT8, "Maximum value for gui.date_with_time exceeds storage size");
static_assert(30 <= MAX_SLE_UINT8, "Maximum value for gui.max_departures exceeds storage size");
static_assert(240 <= MAX_SLE_UINT16, "Maximum value for gui.max_departure_time exceeds storage size");
static_assert(120 <= MAX_SLE_UINT16, "Maximum value for gui.departure_calc_frequency exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for gui.departure_conditionals exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for gui.loading_indicators exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for gui.default_rail_type exceeds storage size");
static_assert(3 <= MAX_SLE_UINT8, "Maximum value for gui.default_road_type exceeds storage size");
static_assert(1 <= MAX_SLE_UINT8, "Maximum value for gui.signal_gui_mode exceeds storage size");
static_assert(MAX_YEAR <= MAX_SLE_INT32, "Maximum value for gui.coloured_news_year exceeds storage size");
static_assert(1 <= MAX_SLE_UINT8, "Maximum value for gui.cycle_signal_types exceeds storage size");
static_assert(5 <= MAX_SLE_UINT8, "Maximum value for gui.default_signal_type exceeds storage size");
static_assert(20 <= MAX_SLE_UINT8, "Maximum value for gui.drag_signals_density exceeds storage size");
static_assert(MAX_YEAR <= MAX_SLE_INT32, "Maximum value for gui.semaphore_build_before exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for gui.order_review_system exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for gui.stop_location exceeds storage size");
static_assert(255 <= MAX_SLE_UINT8, "Maximum value for gui.max_num_autosaves exceeds storage size");
static_assert(3 <= MAX_SLE_UINT8, "Maximum value for gui.savegame_overwrite_confirm exceeds storage size");
static_assert(255 <= MAX_SLE_UINT8, "Maximum value for gui.news_message_timeout exceeds storage size");
static_assert(7 <= MAX_SLE_UINT8, "Maximum value for gui.station_numtracks exceeds storage size");
static_assert(7 <= MAX_SLE_UINT8, "Maximum value for gui.station_platlength exceeds storage size");
static_assert(5 <= MAX_SLE_UINT8, "Maximum value for gui.station_gui_group_order exceeds storage size");
static_assert(3 <= MAX_SLE_UINT8, "Maximum value for gui.station_gui_sort_by exceeds storage size");
static_assert(1 <= MAX_SLE_UINT8, "Maximum value for gui.station_gui_sort_order exceeds storage size");
static_assert(UINT8_MAX <= MAX_SLE_UINT8, "Maximum value for gui.missing_strings_threshold exceeds storage size");
static_assert(5 <= MAX_SLE_UINT8, "Maximum value for gui.graph_line_thickness exceeds storage size");
static_assert(3 <= MAX_SLE_UINT8, "Maximum value for gui.linkgraph_colours exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for gui.vehicle_names exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for gui.station_rating_tooltip_mode exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for gui.demolish_confirm_mode exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for gui.settings_restriction_mode exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for gui.developer exceeds storage size");
static_assert(1 <= MAX_SLE_UINT8, "Maximum value for gui.newgrf_default_palette exceeds storage size");
static_assert(65500 <= MAX_SLE_UINT16, "Maximum value for gui.console_backlog_timeout exceeds storage size");
static_assert(65500 <= MAX_SLE_UINT16, "Maximum value for gui.console_backlog_length exceeds storage size");
static_assert(1000 <= MAX_SLE_UINT16, "Maximum value for gui.refresh_rate exceeds storage size");
static_assert(50000 <= MAX_SLE_UINT16, "Maximum value for gui.fast_forward_speed_limit exceeds storage size");
static_assert(5 <= MAX_SLE_UINT8, "Maximum value for music.playlist exceeds storage size");
static_assert(127 <= MAX_SLE_UINT8, "Maximum value for music.music_vol exceeds storage size");
static_assert(127 <= MAX_SLE_UINT8, "Maximum value for music.effect_vol exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for news_display.arrival_player exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for news_display.arrival_other exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for news_display.accident exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for news_display.accident_other exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for news_display.company_info exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for news_display.open exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for news_display.close exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for news_display.economy exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for news_display.production_player exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for news_display.production_other exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for news_display.production_nobody exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for news_display.advice exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for news_display.new_vehicles exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for news_display.acceptance exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for news_display.subsidies exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for news_display.general exceeds storage size");
static_assert(2 <= MAX_SLE_UINT8, "Maximum value for scenario.house_ignore_zones exceeds storage size");
static_assert(100 <= MAX_SLE_UINT16, "Maximum value for gui.network_chat_box_width_pct exceeds storage size");
static_assert(255 <= MAX_SLE_UINT8, "Maximum value for gui.network_chat_box_height exceeds storage size");
static_assert(65535 <= MAX_SLE_UINT16, "Maximum value for gui.network_chat_timeout exceeds storage size");
static_assert(255 <= MAX_SLE_UINT8, "Maximum value for GameSettings.vehicle.repair_cost exceeds storage size");
static_assert(0xFFFFFFFF <= MAX_SLE_UINT32, "Maximum value for GameSettings.debug.chicken_bits exceeds storage size");
static_assert(0xFFFFFFFF <= MAX_SLE_UINT32, "Maximum value for GameSettings.debug.newgrf_optimiser_flags exceeds storage size");
static_assert(32000 <= MAX_SLE_INT16, "Maximum value for WindowDescPreferences.pref_width exceeds storage size");
static_assert(32000 <= MAX_SLE_INT16, "Maximum value for WindowDescPreferences.pref_height exceeds storage size");
